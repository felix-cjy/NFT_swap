{
	"id": "99e8a1b84d08b9fe7aaaa6b58d17ed02",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/FLX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract FLX is ERC721, Ownable {\r\n    uint256 private _tokenIds;\r\n\r\n    constructor() ERC721(\"FLX\", \"FLX\") Ownable(msg.sender) {\r\n        _tokenIds = 0;\r\n    }\r\n\r\n    function mint(address to) public onlyOwner returns (uint256) {\r\n        _tokenIds++;\r\n        uint256 newTokenId = _tokenIds;\r\n        _safeMint(to, newTokenId);\r\n        return newTokenId;\r\n    }\r\n\r\n    function getCounter() external view returns (uint256){\r\n        return _tokenIds;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {Strings} from \"../../utils/Strings.sol\";\r\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\r\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "lib/openzeppelin-contracts/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206fb91a52ad3c1d973a584f691163961025596b3cd1d1034c7d1356fa42e5827d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206fb91a52ad3c1d973a584f691163961025596b3cd1d1034c7d1356fa42e5827d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xB91A52AD3C1D973A584F691163961025 MSIZE PUSH12 0x3CD1D1034C7D1356FA42E582 PUSH30 0x64736F6C634300081A003300000000000000000000000000000000000000 ",
							"sourceMap": "262:2929:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206fb91a52ad3c1d973a584f691163961025596b3cd1d1034c7d1356fa42e5827d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xB91A52AD3C1D973A584F691163961025 MSIZE PUSH12 0x3CD1D1034C7D1356FA42E582 PUSH30 0x64736F6C634300081A003300000000000000000000000000000000000000 ",
							"sourceMap": "262:2929:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fb91a52ad3c1d973a584f691163961025596b3cd1d1034c7d1356fa42e5827d64736f6c634300081a0033",
									".code": [
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/FLX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122025d3d77a3bf4296d4ff60f27bc3d5d6a17d2c71fe36b2036d6a2b0de727421e164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122025d3d77a3bf4296d4ff60f27bc3d5d6a17d2c71fe36b2036d6a2b0de727421e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xD3 0xD7 PUSH27 0x3BF4296D4FF60F27BC3D5D6A17D2C71FE36B2036D6A2B0DE727421 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "211:15320:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122025d3d77a3bf4296d4ff60f27bc3d5d6a17d2c71fe36b2036d6a2b0de727421e164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xD3 0xD7 PUSH27 0x3BF4296D4FF60F27BC3D5D6A17D2C71FE36B2036D6A2B0DE727421 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "211:15320:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025d3d77a3bf4296d4ff60f27bc3d5d6a17d2c71fe36b2036d6a2b0de727421e164736f6c634300081a0033",
									".code": [
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/FLX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220635567a0990548973ec4cf4d5c2d205636718dd8b175579392b7de0f762e865664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220635567a0990548973ec4cf4d5c2d205636718dd8b175579392b7de0f762e865664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5567A099 SDIV BASEFEE SWAP8 RETURNDATACOPY 0xC4 0xCF 0x4D TLOAD 0x2D KECCAK256 JUMP CALLDATASIZE PUSH18 0x8DD8B175579392B7DE0F762E865664736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "224:1081:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220635567a0990548973ec4cf4d5c2d205636718dd8b175579392b7de0f762e865664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5567A099 SDIV BASEFEE SWAP8 RETURNDATACOPY 0xC4 0xCF 0x4D TLOAD 0x2D KECCAK256 JUMP CALLDATASIZE PUSH18 0x8DD8B175579392B7DE0F762E865664736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "224:1081:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220635567a0990548973ec4cf4d5c2d205636718dd8b175579392b7de0f762e865664736f6c634300081a0033",
									".code": [
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/FLX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/FLX.sol": {
				"FLX": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/FLX.sol\":176:639  contract FLX is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/FLX.sol\":249:336  constructor() ERC721(\"FLX\", \"FLX\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/FLX.sol\":292:302  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x464c580000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x464c580000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1494:1499  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1486:1491  _name */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1486:1499  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1520:1527  symbol_ */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1517  _symbol */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1527  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1335:1336  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1323  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1389:1390  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1433:1445  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1432  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1262:1454  constructor(address initialOwner) {... */\n  pop\n    /* \"src/FLX.sol\":327:328  0 */\n  0x00\n    /* \"src/FLX.sol\":315:324  _tokenIds */\n  0x07\n    /* \"src/FLX.sol\":315:328  _tokenIds = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/FLX.sol\":176:639  contract FLX is ERC721, Ownable {... */\n  jump(tag_16)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3125:3133  newOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3122  _owner */\n  0x06\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3180:3188  newOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/FLX.sol\":176:639  contract FLX is ERC721, Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/FLX.sol\":176:639  contract FLX is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8ada066e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/FLX.sol\":344:540  function mint(address to) public onlyOwner returns (uint256) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"src/FLX.sol\":548:636  function getCounter() external view returns (uint256){... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1709:1713  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1761:1786  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1757  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1818:1851  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1814  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n    tag_97:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      tag_99\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1892:1903  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1891  super.supportsInterface */\n      tag_100\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_99:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n    tag_98:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1726:1904  return... */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2483:2496  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2516:2521  _name */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2509:2521  return _name */\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_103\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3677:3684  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      tag_109\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3711:3718  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3710  _requireOwned */\n      tag_110\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      jump\t// in\n    tag_109:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      tag_111\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3752:3759  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3751  _getApproved */\n      tag_112\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3732:3760  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      tag_114\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3510:3512  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3514:3521  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      tag_115\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3523:3533  _msgSender */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3509  _approve */\n      tag_117\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_114:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4388:4389  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4376  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4444:4445  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n    tag_119:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4680:4701  address previousOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      tag_121\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4712:4714  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4716:4723  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      tag_122\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4725:4735  _msgSender */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4711  _update */\n      tag_123\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4680:4738  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4770:4774  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4766  previousOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n      tag_124\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4819:4823  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4825:4832  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4834:4847  previousOwner */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n    tag_124:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4359:4867  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_50:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_128\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5042:5046  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5048:5050  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5052:5059  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5041  safeTransferFrom */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_128:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_53:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2314:2321  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      tag_130\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2355:2362  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2354  _requireOwned */\n      tag_110\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      jump\t// in\n    tag_130:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2334:2363  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/FLX.sol\":344:540  function mint(address to) public onlyOwner returns (uint256) {... */\n    tag_58:\n        /* \"src/FLX.sol\":396:403  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_132\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_133\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"src/FLX.sol\":416:425  _tokenIds */\n      0x07\n      0x00\n        /* \"src/FLX.sol\":416:427  _tokenIds++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/FLX.sol\":438:456  uint256 newTokenId */\n      0x00\n        /* \"src/FLX.sol\":459:468  _tokenIds */\n      sload(0x07)\n        /* \"src/FLX.sol\":438:468  uint256 newTokenId = _tokenIds */\n      swap1\n      pop\n        /* \"src/FLX.sol\":479:504  _safeMint(to, newTokenId) */\n      tag_137\n        /* \"src/FLX.sol\":489:491  to */\n      dup4\n        /* \"src/FLX.sol\":493:503  newTokenId */\n      dup3\n        /* \"src/FLX.sol\":479:488  _safeMint */\n      tag_138\n        /* \"src/FLX.sol\":479:504  _safeMint(to, newTokenId) */\n      jump\t// in\n    tag_137:\n        /* \"src/FLX.sol\":522:532  newTokenId */\n      dup1\n        /* \"src/FLX.sol\":515:532  return newTokenId */\n      swap2\n      pop\n      pop\n        /* \"src/FLX.sol\":344:540  function mint(address to) public onlyOwner returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2039:2046  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2080:2081  0 */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2068  owner */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n      tag_140\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2133:2134  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n    tag_140:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2174  _balances */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2175:2180  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2158:2181  return _balances[owner] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_143\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_133\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      tag_145\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2460:2461  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2451  _transferOwnership */\n      tag_146\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_145:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/FLX.sol\":548:636  function getCounter() external view returns (uint256){... */\n    tag_68:\n        /* \"src/FLX.sol\":593:600  uint256 */\n      0x00\n        /* \"src/FLX.sol\":619:628  _tokenIds */\n      sload(0x07)\n        /* \"src/FLX.sol\":612:628  return _tokenIds */\n      swap1\n      pop\n        /* \"src/FLX.sol\":548:636  function getCounter() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1739:1746  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1766:1772  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1759:1772  return _owner */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2645:2658  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2678:2685  _symbol */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2671:2685  return _symbol */\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_103\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_103\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_79:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_156\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      tag_157\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3945:3955  _msgSender */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3959:3967  operator */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3969:3977  approved */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3944  _setApprovalForAll */\n      tag_158\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_156:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_83:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      tag_160\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5270:5274  from */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5276:5278  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5280:5287  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5269  transferFrom */\n      tag_47\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_160:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_161\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5322:5326  from */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5328:5330  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5332:5339  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5341:5345  data */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5321  _checkOnERC721Received */\n      tag_162\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_161:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_86:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2828:2841  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      tag_164\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2868:2875  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2867  _requireOwned */\n      tag_110\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      jump\t// in\n    tag_164:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2889:2910  string memory baseURI */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      tag_165\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2921  _baseURI */\n      tag_166\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      jump\t// in\n    tag_165:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2889:2923  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2965:2966  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2947:2954  baseURI */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:2962  bytes(baseURI).length */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:2966  bytes(baseURI).length > 0 */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2983:2990  baseURI */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      tag_169\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:2999  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3008  tokenId.toString */\n      tag_170\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      jump\t// in\n    tag_169:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2969:3011  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_168:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2934:3016  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4145:4149  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4187  _operatorApprovals */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4188:4193  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4195:4203  operator */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4162:4204  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_175\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_133\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2731:2732  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2719  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2785:2786  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n    tag_177:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      tag_179\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2829:2837  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2828  _transferOwnership */\n      tag_146\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_179:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_100:\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":861:865  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":900:925  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:896  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":878:925  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_110:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16648:16655  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16668:16681  address owner */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      tag_182\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16693:16700  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16684:16692  _ownerOf */\n      tag_183\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16668:16701  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16733:16734  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16716:16721  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16782:16789  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16759:16790  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n    tag_184:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16819:16824  owner */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16812:16824  return owner */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_112:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6186:6193  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6228  _tokenApprovals */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6229:6236  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6206:6237  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_116:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":725:732  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_117:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      tag_189\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14907:14909  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14911:14918  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14920:14924  auth */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14926:14930  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14906  _approve */\n      tag_190\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_189:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_123:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9164:9171  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9184:9196  address from */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      tag_192\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9208:9215  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9199:9207  _ownerOf */\n      tag_183\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9184:9216  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9295:9296  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9283  auth */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n      tag_193\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      tag_194\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9331:9335  from */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9337:9341  auth */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9343:9350  tokenId */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9330  _checkAuthorized */\n      tag_195\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n    tag_193:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9426:9427  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9414  from */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n      tag_196\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      tag_197\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9545:9546  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9549:9556  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9566:9567  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9570:9575  false */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9536  _approve */\n      tag_190\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_197:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9641:9642  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9631  _balances */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9632:9636  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9642  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n    tag_196:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9699:9700  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9687  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n      tag_198\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9764:9765  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9756  _balances */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9757:9759  to */\n      dup8\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9765  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n    tag_198:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9823:9825  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9811  _owners */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9812:9819  tokenId */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9825  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9862:9869  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9858:9860  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9852:9856  from */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9890:9894  from */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9883:9894  return from */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n    tag_133:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      tag_200\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1939  _msgSender */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1925  owner() */\n      tag_201\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1923  owner */\n      tag_71\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1925  owner() */\n      jump\t// in\n    tag_201:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n      tag_202\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      tag_203\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2002  _msgSender */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n    tag_202:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10936:11038  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_138:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      tag_206\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11014:11016  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11018:11025  tokenId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11013  _safeMint */\n      tag_207\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_206:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10936:11038  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_146:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3125:3133  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3122  _owner */\n      0x06\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3180:3188  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_158:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16152:16153  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16140  operator */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16200:16208  operator */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n    tag_210:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16269:16277  approved */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16249  _operatorApprovals */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16250:16255  owner */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16257:16265  operator */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16277  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16315:16323  operator */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16308:16313  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16325:16333  approved */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_162:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17516:17517  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17501  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17513  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17517  to.code.length > 0 */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17554:17556  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17574  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      tag_215\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17575:17585  _msgSender */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17589:17593  from */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17595:17602  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17604:17608  data */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      0x01\n    tag_218:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_221\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_226:\n      0x60\n      swap2\n      pop\n    tag_225:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17869:17870  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17858  reason */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17865  reason.length */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17870  reason.length == 0 */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n      tag_227\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17924:17926  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n    tag_227:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18098:18104  reason */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18092:18105  mload(reason) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18083:18089  reason */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18079:18081  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18075:18090  add(32, reason) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18068:18106  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_221:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17667:17708  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17663  retval */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_231\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17762:17764  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_231:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17610:17800  returns (bytes4 retval) {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n    tag_214:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_166:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3324:3337  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3350:3359  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_170:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":716:729  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":767:781  uint256 length */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":804:805  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      tag_235\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":795:800  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:794  Math.log10 */\n      tag_236\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      jump\t// in\n    tag_235:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":784:805  Math.log10(value) + 1 */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":767:805  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":820:840  string memory buffer */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":854:860  length */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":843:861  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      tag_238\n      tag_239\n      jump\t// in\n    tag_238:\n    tag_237:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_240\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_240:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":820:861  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":876:887  uint256 ptr */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1005:1011  length */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1001:1003  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":997:1012  add(32, length) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":989:995  buffer */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":985:1013  add(buffer, add(32, length)) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":978:1013  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_241:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1049:1053  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1074:1079  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1216:1226  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1211:1213  10 */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1204:1209  value */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1200:1214  mod(value, 10) */\n      mod\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1195:1227  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1190:1193  ptr */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1182:1228  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1274:1276  10 */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1265:1276  value /= 10 */\n      dup6\n      dup2\n      tag_243\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_244:\n    tag_243:\n      div\n      swap5\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1308:1309  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1299:1304  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1299:1309  value == 0 */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      tag_241\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1295:1316  if (value == 0) break */\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_242:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1353:1359  buffer */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":1346:1359  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_183:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5944:5951  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5978  _owners */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5979:5986  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5964:5987  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_190:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15298  emitEvent */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n      dup1\n      tag_249\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15318:15319  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15306  auth */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n    tag_249:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15337:15350  address owner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      tag_251\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15367:15374  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15366  _requireOwned */\n      tag_110\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      jump\t// in\n    tag_251:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15337:15375  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15522:15523  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15510  auth */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15537:15541  auth */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15533  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n    tag_252:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_253\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      tag_254\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15563:15568  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15570:15574  auth */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15562  isApprovedForAll */\n      tag_91\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_254:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15545:15575  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_253:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15625:15629  auth */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_255:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15666:15675  emitEvent */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15721:15728  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15717:15719  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15710:15715  owner */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n    tag_257:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15322:15756  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n    tag_250:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15795:15797  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15783  _tokenApprovals */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15784:15791  tokenId */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15797  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_195:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      tag_259\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7412:7417  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7419:7426  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7428:7435  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7411  _isAuthorized */\n      tag_260\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_261\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7474:7475  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7462  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7527:7534  tokenId */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7504:7535  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n    tag_262:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7610:7617  spender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7619:7626  tokenId */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_261:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11265:11450  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_207:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11360:11378  _mint(to, tokenId) */\n      tag_268\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11366:11368  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11370:11377  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11360:11365  _mint */\n      tag_269\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11360:11378  _mint(to, tokenId) */\n      jump\t// in\n    tag_268:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11389:11442  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_270\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11420:11421  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11424:11426  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11428:11435  tokenId */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11437:11441  data */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11389:11411  _checkOnERC721Received */\n      tag_162\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11389:11442  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_270:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":11265:11450  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12587:12594  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12607:12621  uint256 result */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12624:12625  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12607:12625  uint256 result = 0 */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12674:12682  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12665:12670  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12665:12682  value >= 10 ** 64 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n      tag_272\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12712:12720  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12703:12720  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_273\n      jumpi\n      tag_274\n      tag_245\n      jump\t// in\n    tag_274:\n    tag_273:\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12749:12751  64 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12739:12751  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n    tag_272:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12794:12802  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12785:12790  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12785:12802  value >= 10 ** 32 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n      tag_275\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12832:12840  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12823:12840  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_276\n      jumpi\n      tag_277\n      tag_245\n      jump\t// in\n    tag_277:\n    tag_276:\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12869:12871  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12859:12871  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n    tag_275:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12914:12922  10 ** 16 */\n      0x2386f26fc10000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12905:12910  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12905:12922  value >= 10 ** 16 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n      tag_278\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12952:12960  10 ** 16 */\n      0x2386f26fc10000\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12943:12960  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_279\n      jumpi\n      tag_280\n      tag_245\n      jump\t// in\n    tag_280:\n    tag_279:\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12989:12991  16 */\n      0x10\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12979:12991  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n    tag_278:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13034:13041  10 ** 8 */\n      0x05f5e100\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13025:13030  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13025:13041  value >= 10 ** 8 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n      tag_281\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13071:13078  10 ** 8 */\n      0x05f5e100\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13062:13078  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_282\n      jumpi\n      tag_283\n      tag_245\n      jump\t// in\n    tag_283:\n    tag_282:\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13107:13108  8 */\n      0x08\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13097:13108  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n    tag_281:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13151:13158  10 ** 4 */\n      0x2710\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13142:13147  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13142:13158  value >= 10 ** 4 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n      tag_284\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13188:13195  10 ** 4 */\n      0x2710\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13179:13195  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_285\n      jumpi\n      tag_286\n      tag_245\n      jump\t// in\n    tag_286:\n    tag_285:\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13224:13225  4 */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13214:13225  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n    tag_284:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13268:13275  10 ** 2 */\n      0x64\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13259:13264  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13259:13275  value >= 10 ** 2 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n      tag_287\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13305:13312  10 ** 2 */\n      0x64\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13296:13312  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_288\n      jumpi\n      tag_289\n      tag_245\n      jump\t// in\n    tag_289:\n    tag_288:\n      div\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13341:13342  2 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13331:13342  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n    tag_287:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13385:13392  10 ** 1 */\n      0x0a\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13376:13381  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13376:13392  value >= 10 ** 1 */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n      tag_290\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13423:13424  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13413:13424  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n    tag_290:\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13468:13474  result */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":13461:13474  return result */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_260:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6668:6672  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6724:6725  0 */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6712  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_292\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6753:6760  spender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6749  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_293\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      tag_294\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6781:6786  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6788:6795  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6780  isApprovedForAll */\n      tag_91\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_294:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n    tag_293:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_295\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6825:6832  spender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      tag_296\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6813:6820  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6812  _getApproved */\n      tag_112\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      jump\t// in\n    tag_296:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_295:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n    tag_292:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6685:6833  return... */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n    tag_269:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10320:10321  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10306:10308  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10376:10377  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10346:10379  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n    tag_298:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10401:10422  address previousOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      tag_300\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10433:10435  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10437:10444  tokenId */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10454:10455  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10425:10432  _update */\n      tag_123\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_300:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10401:10457  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10497:10498  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10472:10485  previousOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n      tag_301\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10551:10552  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10523:10554  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n    tag_301:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10291:10573  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_303:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_304:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_305:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_306:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_307:\n        /* \"#utility.yul\":561:584   */\n      tag_349\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_306\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_350:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_308:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_352\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_307\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_355\n      tag_304\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":833:952   */\n    tag_354:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_356\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_308\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_309:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_310:\n        /* \"#utility.yul\":1268:1289   */\n      tag_359\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_309\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_361\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_310\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_311:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_312:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_313:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_314:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_315:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_367\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_311\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2222:2293   */\n      tag_368\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_312\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_369\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_313\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2392:2421   */\n      tag_370\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_314\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_372\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_315\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_316:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_317:\n        /* \"#utility.yul\":2909:2933   */\n      tag_375\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_316\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_376:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_318:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_378\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_317\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_36:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_381\n      tag_304\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3185:3304   */\n    tag_380:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_382\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_318\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_319:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_320:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_385\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_319\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_321:\n        /* \"#utility.yul\":3765:3789   */\n      tag_387\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_320\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_39:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_389\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_321\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_322:\n        /* \"#utility.yul\":4103:4127   */\n      tag_391\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_320\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_392:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_323:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_394\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_322\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_42:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_397\n      tag_304\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4396:4515   */\n    tag_396:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_398\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_323\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_399\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_318\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_46:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_402\n      tag_304\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4893:5012   */\n    tag_401:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_403\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_323\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_404\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_323\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_405\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_318\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_57:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_408\n      tag_304\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5484:5603   */\n    tag_407:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_409\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_323\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_324:\n        /* \"#utility.yul\":5830:5854   */\n      tag_411\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_316\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_60:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_413\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_324\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_325:\n        /* \"#utility.yul\":6165:6186   */\n      tag_415\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_309\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      dup1\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_416:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_326:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_418\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_325\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_78:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      dup1\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_421\n      tag_304\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6446:6565   */\n    tag_420:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_422\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_323\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_423\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_326\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_327:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      dup1\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_328:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      dup1\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_239:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_329:\n        /* \"#utility.yul\":7345:7372   */\n      tag_428\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_314\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_430\n      tag_239\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7418:7506   */\n    tag_429:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_330:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_432\n      tag_303\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_433\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_329\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_331:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_436\n      tag_239\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7821:7877   */\n    tag_435:\n        /* \"#utility.yul\":7895:7924   */\n      tag_437\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_314\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_332:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_333:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_440\n        /* \"#utility.yul\":8269:8317   */\n      tag_441\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_331\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8253:8318   */\n      tag_330\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_443\n      tag_328\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8393:8505   */\n    tag_442:\n        /* \"#utility.yul\":8514:8568   */\n      tag_444\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_332\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_334:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_447\n      tag_327\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8664:8786   */\n    tag_446:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_448\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_333\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_82:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      dup1\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      dup1\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_451\n      tag_304\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9073:9193   */\n    tag_450:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_452\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_323\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_453\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_323\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_454\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_318\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_456\n      tag_305\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9660:9777   */\n    tag_455:\n        /* \"#utility.yul\":9801:9863   */\n      tag_457\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_334\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_90:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      dup1\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_460\n      tag_304\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9979:10098   */\n    tag_459:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_461\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_323\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_462\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_323\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_335:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_103:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_465:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_467\n      tag_335\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10782:10866   */\n    tag_466:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11320   */\n    tag_126:\n        /* \"#utility.yul\":11027:11031   */\n      0x00\n        /* \"#utility.yul\":11065:11067   */\n      0x60\n        /* \"#utility.yul\":11054:11063   */\n      dup3\n        /* \"#utility.yul\":11050:11068   */\n      add\n        /* \"#utility.yul\":11042:11068   */\n      swap1\n      pop\n        /* \"#utility.yul\":11078:11149   */\n      tag_469\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11135:11144   */\n      dup4\n        /* \"#utility.yul\":11131:11148   */\n      add\n        /* \"#utility.yul\":11122:11128   */\n      dup7\n        /* \"#utility.yul\":11078:11149   */\n      tag_321\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11159:11231   */\n      tag_470\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11216:11225   */\n      dup4\n        /* \"#utility.yul\":11212:11230   */\n      add\n        /* \"#utility.yul\":11203:11209   */\n      dup6\n        /* \"#utility.yul\":11159:11231   */\n      tag_324\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11241:11313   */\n      tag_471\n        /* \"#utility.yul\":11309:11311   */\n      0x40\n        /* \"#utility.yul\":11298:11307   */\n      dup4\n        /* \"#utility.yul\":11294:11312   */\n      add\n        /* \"#utility.yul\":11285:11291   */\n      dup5\n        /* \"#utility.yul\":11241:11313   */\n      tag_321\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10878:11320   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11506   */\n    tag_336:\n        /* \"#utility.yul\":11374:11451   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11371:11372   */\n      0x00\n        /* \"#utility.yul\":11364:11452   */\n      mstore\n        /* \"#utility.yul\":11471:11475   */\n      0x11\n        /* \"#utility.yul\":11468:11469   */\n      0x04\n        /* \"#utility.yul\":11461:11476   */\n      mstore\n        /* \"#utility.yul\":11495:11499   */\n      0x24\n        /* \"#utility.yul\":11492:11493   */\n      0x00\n        /* \"#utility.yul\":11485:11500   */\n      revert\n        /* \"#utility.yul\":11512:11745   */\n    tag_136:\n        /* \"#utility.yul\":11551:11554   */\n      0x00\n        /* \"#utility.yul\":11574:11598   */\n      tag_474\n        /* \"#utility.yul\":11592:11597   */\n      dup3\n        /* \"#utility.yul\":11574:11598   */\n      tag_316\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11565:11598   */\n      swap2\n      pop\n        /* \"#utility.yul\":11620:11686   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11613:11618   */\n      dup3\n        /* \"#utility.yul\":11610:11687   */\n      sub\n        /* \"#utility.yul\":11607:11710   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":11690:11708   */\n      tag_476\n      tag_336\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11607:11710   */\n    tag_475:\n        /* \"#utility.yul\":11737:11738   */\n      0x01\n        /* \"#utility.yul\":11730:11735   */\n      dup3\n        /* \"#utility.yul\":11726:11739   */\n      add\n        /* \"#utility.yul\":11719:11739   */\n      swap1\n      pop\n        /* \"#utility.yul\":11512:11745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11751:11899   */\n    tag_337:\n        /* \"#utility.yul\":11853:11864   */\n      0x00\n        /* \"#utility.yul\":11890:11893   */\n      dup2\n        /* \"#utility.yul\":11875:11893   */\n      swap1\n      pop\n        /* \"#utility.yul\":11751:11899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12295   */\n    tag_338:\n        /* \"#utility.yul\":12011:12014   */\n      0x00\n        /* \"#utility.yul\":12039:12078   */\n      tag_479\n        /* \"#utility.yul\":12072:12077   */\n      dup3\n        /* \"#utility.yul\":12039:12078   */\n      tag_311\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12094:12183   */\n      tag_480\n        /* \"#utility.yul\":12176:12182   */\n      dup2\n        /* \"#utility.yul\":12171:12174   */\n      dup6\n        /* \"#utility.yul\":12094:12183   */\n      tag_337\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12087:12183   */\n      swap4\n      pop\n        /* \"#utility.yul\":12192:12257   */\n      tag_481\n        /* \"#utility.yul\":12250:12256   */\n      dup2\n        /* \"#utility.yul\":12245:12248   */\n      dup6\n        /* \"#utility.yul\":12238:12242   */\n      0x20\n        /* \"#utility.yul\":12231:12236   */\n      dup7\n        /* \"#utility.yul\":12227:12243   */\n      add\n        /* \"#utility.yul\":12192:12257   */\n      tag_313\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12282:12288   */\n      dup1\n        /* \"#utility.yul\":12277:12280   */\n      dup5\n        /* \"#utility.yul\":12273:12289   */\n      add\n        /* \"#utility.yul\":12266:12289   */\n      swap2\n      pop\n        /* \"#utility.yul\":12015:12295   */\n      pop\n        /* \"#utility.yul\":11905:12295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12301:12736   */\n    tag_172:\n        /* \"#utility.yul\":12481:12484   */\n      0x00\n        /* \"#utility.yul\":12503:12598   */\n      tag_483\n        /* \"#utility.yul\":12594:12597   */\n      dup3\n        /* \"#utility.yul\":12585:12591   */\n      dup6\n        /* \"#utility.yul\":12503:12598   */\n      tag_338\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12496:12598   */\n      swap2\n      pop\n        /* \"#utility.yul\":12615:12710   */\n      tag_484\n        /* \"#utility.yul\":12706:12709   */\n      dup3\n        /* \"#utility.yul\":12697:12703   */\n      dup5\n        /* \"#utility.yul\":12615:12710   */\n      tag_338\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12608:12710   */\n      swap2\n      pop\n        /* \"#utility.yul\":12727:12730   */\n      dup2\n        /* \"#utility.yul\":12720:12730   */\n      swap1\n      pop\n        /* \"#utility.yul\":12301:12736   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12742:12840   */\n    tag_339:\n        /* \"#utility.yul\":12793:12799   */\n      0x00\n        /* \"#utility.yul\":12827:12832   */\n      dup2\n        /* \"#utility.yul\":12821:12833   */\n      mload\n        /* \"#utility.yul\":12811:12833   */\n      swap1\n      pop\n        /* \"#utility.yul\":12742:12840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12846:13014   */\n    tag_340:\n        /* \"#utility.yul\":12929:12940   */\n      0x00\n        /* \"#utility.yul\":12963:12969   */\n      dup3\n        /* \"#utility.yul\":12958:12961   */\n      dup3\n        /* \"#utility.yul\":12951:12970   */\n      mstore\n        /* \"#utility.yul\":13003:13007   */\n      0x20\n        /* \"#utility.yul\":12998:13001   */\n      dup3\n        /* \"#utility.yul\":12994:13008   */\n      add\n        /* \"#utility.yul\":12979:13008   */\n      swap1\n      pop\n        /* \"#utility.yul\":12846:13014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13020:13393   */\n    tag_341:\n        /* \"#utility.yul\":13106:13109   */\n      0x00\n        /* \"#utility.yul\":13134:13172   */\n      tag_488\n        /* \"#utility.yul\":13166:13171   */\n      dup3\n        /* \"#utility.yul\":13134:13172   */\n      tag_339\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13188:13258   */\n      tag_489\n        /* \"#utility.yul\":13251:13257   */\n      dup2\n        /* \"#utility.yul\":13246:13249   */\n      dup6\n        /* \"#utility.yul\":13188:13258   */\n      tag_340\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13181:13258   */\n      swap4\n      pop\n        /* \"#utility.yul\":13267:13332   */\n      tag_490\n        /* \"#utility.yul\":13325:13331   */\n      dup2\n        /* \"#utility.yul\":13320:13323   */\n      dup6\n        /* \"#utility.yul\":13313:13317   */\n      0x20\n        /* \"#utility.yul\":13306:13311   */\n      dup7\n        /* \"#utility.yul\":13302:13318   */\n      add\n        /* \"#utility.yul\":13267:13332   */\n      tag_313\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13357:13386   */\n      tag_491\n        /* \"#utility.yul\":13379:13385   */\n      dup2\n        /* \"#utility.yul\":13357:13386   */\n      tag_314\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13352:13355   */\n      dup5\n        /* \"#utility.yul\":13348:13387   */\n      add\n        /* \"#utility.yul\":13341:13387   */\n      swap2\n      pop\n        /* \"#utility.yul\":13110:13393   */\n      pop\n        /* \"#utility.yul\":13020:13393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:14039   */\n    tag_217:\n        /* \"#utility.yul\":13594:13598   */\n      0x00\n        /* \"#utility.yul\":13632:13635   */\n      0x80\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13617:13636   */\n      add\n        /* \"#utility.yul\":13609:13636   */\n      swap1\n      pop\n        /* \"#utility.yul\":13646:13717   */\n      tag_493\n        /* \"#utility.yul\":13714:13715   */\n      0x00\n        /* \"#utility.yul\":13703:13712   */\n      dup4\n        /* \"#utility.yul\":13699:13716   */\n      add\n        /* \"#utility.yul\":13690:13696   */\n      dup8\n        /* \"#utility.yul\":13646:13717   */\n      tag_321\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13727:13799   */\n      tag_494\n        /* \"#utility.yul\":13795:13797   */\n      0x20\n        /* \"#utility.yul\":13784:13793   */\n      dup4\n        /* \"#utility.yul\":13780:13798   */\n      add\n        /* \"#utility.yul\":13771:13777   */\n      dup7\n        /* \"#utility.yul\":13727:13799   */\n      tag_321\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13809:13881   */\n      tag_495\n        /* \"#utility.yul\":13877:13879   */\n      0x40\n        /* \"#utility.yul\":13866:13875   */\n      dup4\n        /* \"#utility.yul\":13862:13880   */\n      add\n        /* \"#utility.yul\":13853:13859   */\n      dup6\n        /* \"#utility.yul\":13809:13881   */\n      tag_324\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13928:13937   */\n      dup2\n        /* \"#utility.yul\":13922:13926   */\n      dup2\n        /* \"#utility.yul\":13918:13938   */\n      sub\n        /* \"#utility.yul\":13913:13915   */\n      0x60\n        /* \"#utility.yul\":13902:13911   */\n      dup4\n        /* \"#utility.yul\":13898:13916   */\n      add\n        /* \"#utility.yul\":13891:13939   */\n      mstore\n        /* \"#utility.yul\":13956:14032   */\n      tag_496\n        /* \"#utility.yul\":14027:14031   */\n      dup2\n        /* \"#utility.yul\":14018:14024   */\n      dup5\n        /* \"#utility.yul\":13956:14032   */\n      tag_341\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13948:14032   */\n      swap1\n      pop\n        /* \"#utility.yul\":13399:14039   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14045:14186   */\n    tag_342:\n        /* \"#utility.yul\":14101:14106   */\n      0x00\n        /* \"#utility.yul\":14132:14138   */\n      dup2\n        /* \"#utility.yul\":14126:14139   */\n      mload\n        /* \"#utility.yul\":14117:14139   */\n      swap1\n      pop\n        /* \"#utility.yul\":14148:14180   */\n      tag_498\n        /* \"#utility.yul\":14174:14179   */\n      dup2\n        /* \"#utility.yul\":14148:14180   */\n      tag_307\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14045:14186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14192:14541   */\n    tag_220:\n        /* \"#utility.yul\":14261:14267   */\n      0x00\n        /* \"#utility.yul\":14310:14312   */\n      0x20\n        /* \"#utility.yul\":14298:14307   */\n      dup3\n        /* \"#utility.yul\":14289:14296   */\n      dup5\n        /* \"#utility.yul\":14285:14308   */\n      sub\n        /* \"#utility.yul\":14281:14313   */\n      slt\n        /* \"#utility.yul\":14278:14397   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":14316:14395   */\n      tag_501\n      tag_304\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14278:14397   */\n    tag_500:\n        /* \"#utility.yul\":14436:14437   */\n      0x00\n        /* \"#utility.yul\":14461:14524   */\n      tag_502\n        /* \"#utility.yul\":14516:14523   */\n      dup5\n        /* \"#utility.yul\":14507:14513   */\n      dup3\n        /* \"#utility.yul\":14496:14505   */\n      dup6\n        /* \"#utility.yul\":14492:14514   */\n      add\n        /* \"#utility.yul\":14461:14524   */\n      tag_342\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14451:14524   */\n      swap2\n      pop\n        /* \"#utility.yul\":14407:14534   */\n      pop\n        /* \"#utility.yul\":14192:14541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14547:14727   */\n    tag_245:\n        /* \"#utility.yul\":14595:14672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14592:14593   */\n      0x00\n        /* \"#utility.yul\":14585:14673   */\n      mstore\n        /* \"#utility.yul\":14692:14696   */\n      0x12\n        /* \"#utility.yul\":14689:14690   */\n      0x04\n        /* \"#utility.yul\":14682:14697   */\n      mstore\n        /* \"#utility.yul\":14716:14720   */\n      0x24\n        /* \"#utility.yul\":14713:14714   */\n      0x00\n        /* \"#utility.yul\":14706:14721   */\n      revert\n        /* \"#utility.yul\":14733:15065   */\n    tag_266:\n        /* \"#utility.yul\":14854:14858   */\n      0x00\n        /* \"#utility.yul\":14892:14894   */\n      0x40\n        /* \"#utility.yul\":14881:14890   */\n      dup3\n        /* \"#utility.yul\":14877:14895   */\n      add\n        /* \"#utility.yul\":14869:14895   */\n      swap1\n      pop\n        /* \"#utility.yul\":14905:14976   */\n      tag_505\n        /* \"#utility.yul\":14973:14974   */\n      0x00\n        /* \"#utility.yul\":14962:14971   */\n      dup4\n        /* \"#utility.yul\":14958:14975   */\n      add\n        /* \"#utility.yul\":14949:14955   */\n      dup6\n        /* \"#utility.yul\":14905:14976   */\n      tag_321\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14986:15058   */\n      tag_506\n        /* \"#utility.yul\":15054:15056   */\n      0x20\n        /* \"#utility.yul\":15043:15052   */\n      dup4\n        /* \"#utility.yul\":15039:15057   */\n      add\n        /* \"#utility.yul\":15030:15036   */\n      dup5\n        /* \"#utility.yul\":14986:15058   */\n      tag_324\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14733:15065   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122082572f8e88a171b3197afc7aa57144d35ac067daffe0630c889093a0a705a53e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2962": {
									"entryPoint": null,
									"id": 2962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 298,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:13",
										"nodeType": "YulBlock",
										"src": "0:5817:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:13",
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nativeSrc": "77:22:13",
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nativeSrc": "87:12:13",
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:13",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:13",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nativeSrc": "140:152:13",
													"nodeType": "YulBlock",
													"src": "140:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "157:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:13",
																		"nodeType": "YulLiteral",
																		"src": "160:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:13"
																},
																"nativeSrc": "150:88:13",
																"nodeType": "YulFunctionCall",
																"src": "150:88:13"
															},
															"nativeSrc": "150:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:13",
																		"nodeType": "YulLiteral",
																		"src": "254:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:13",
																		"nodeType": "YulLiteral",
																		"src": "257:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:13"
																},
																"nativeSrc": "247:15:13",
																"nodeType": "YulFunctionCall",
																"src": "247:15:13"
															},
															"nativeSrc": "247:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:13",
																		"nodeType": "YulLiteral",
																		"src": "281:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:13"
																},
																"nativeSrc": "271:15:13",
																"nodeType": "YulFunctionCall",
																"src": "271:15:13"
															},
															"nativeSrc": "271:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:13"
											},
											{
												"body": {
													"nativeSrc": "326:152:13",
													"nodeType": "YulBlock",
													"src": "326:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:13",
																		"nodeType": "YulLiteral",
																		"src": "346:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:13"
																},
																"nativeSrc": "336:88:13",
																"nodeType": "YulFunctionCall",
																"src": "336:88:13"
															},
															"nativeSrc": "336:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:13",
																		"nodeType": "YulLiteral",
																		"src": "443:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:15:13",
																"nodeType": "YulFunctionCall",
																"src": "433:15:13"
															},
															"nativeSrc": "433:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:13",
																		"nodeType": "YulLiteral",
																		"src": "464:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:13",
																		"nodeType": "YulLiteral",
																		"src": "467:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:13"
																},
																"nativeSrc": "457:15:13",
																"nodeType": "YulFunctionCall",
																"src": "457:15:13"
															},
															"nativeSrc": "457:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:13"
											},
											{
												"body": {
													"nativeSrc": "535:269:13",
													"nodeType": "YulBlock",
													"src": "535:269:13",
													"statements": [
														{
															"nativeSrc": "545:22:13",
															"nodeType": "YulAssignment",
															"src": "545:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "565:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:13"
																},
																"nativeSrc": "555:12:13",
																"nodeType": "YulFunctionCall",
																"src": "555:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:13"
																}
															]
														},
														{
															"nativeSrc": "576:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "612:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:13"
																},
																"nativeSrc": "602:12:13",
																"nodeType": "YulFunctionCall",
																"src": "602:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:13",
																	"nodeType": "YulTypedName",
																	"src": "580:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:13",
																"nodeType": "YulBlock",
																"src": "653:51:13",
																"statements": [
																	{
																		"nativeSrc": "667:27:13",
																		"nodeType": "YulAssignment",
																		"src": "667:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:13",
																					"nodeType": "YulLiteral",
																					"src": "689:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:13"
																			},
																			"nativeSrc": "677:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:13"
																},
																"nativeSrc": "626:26:13",
																"nodeType": "YulFunctionCall",
																"src": "626:26:13"
															},
															"nativeSrc": "623:81:13",
															"nodeType": "YulIf",
															"src": "623:81:13"
														},
														{
															"body": {
																"nativeSrc": "756:42:13",
																"nodeType": "YulBlock",
																"src": "756:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:13"
																			},
																			"nativeSrc": "770:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:13"
																		},
																		"nativeSrc": "770:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:13",
																				"nodeType": "YulLiteral",
																				"src": "751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:13"
																		},
																		"nativeSrc": "740:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:13"
																},
																"nativeSrc": "717:38:13",
																"nodeType": "YulFunctionCall",
																"src": "717:38:13"
															},
															"nativeSrc": "714:84:13",
															"nodeType": "YulIf",
															"src": "714:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:13",
														"nodeType": "YulTypedName",
														"src": "519:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:13",
														"nodeType": "YulTypedName",
														"src": "528:6:13",
														"type": ""
													}
												],
												"src": "484:320:13"
											},
											{
												"body": {
													"nativeSrc": "864:87:13",
													"nodeType": "YulBlock",
													"src": "864:87:13",
													"statements": [
														{
															"nativeSrc": "874:11:13",
															"nodeType": "YulAssignment",
															"src": "874:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:13",
																"nodeType": "YulIdentifier",
																"src": "882:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:13",
																		"nodeType": "YulLiteral",
																		"src": "902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:13"
																},
																"nativeSrc": "895:14:13",
																"nodeType": "YulFunctionCall",
																"src": "895:14:13"
															},
															"nativeSrc": "895:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:13"
														},
														{
															"nativeSrc": "918:26:13",
															"nodeType": "YulAssignment",
															"src": "918:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "936:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:13",
																		"nodeType": "YulLiteral",
																		"src": "939:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:13"
																},
																"nativeSrc": "926:18:13",
																"nodeType": "YulFunctionCall",
																"src": "926:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:13",
														"nodeType": "YulTypedName",
														"src": "851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:13",
														"nodeType": "YulTypedName",
														"src": "859:4:13",
														"type": ""
													}
												],
												"src": "810:141:13"
											},
											{
												"body": {
													"nativeSrc": "1001:49:13",
													"nodeType": "YulBlock",
													"src": "1001:49:13",
													"statements": [
														{
															"nativeSrc": "1011:33:13",
															"nodeType": "YulAssignment",
															"src": "1011:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:13"
																		},
																		"nativeSrc": "1025:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:13"
																},
																"nativeSrc": "1021:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:13",
														"nodeType": "YulTypedName",
														"src": "984:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:13",
														"nodeType": "YulTypedName",
														"src": "994:6:13",
														"type": ""
													}
												],
												"src": "957:93:13"
											},
											{
												"body": {
													"nativeSrc": "1109:54:13",
													"nodeType": "YulBlock",
													"src": "1109:54:13",
													"statements": [
														{
															"nativeSrc": "1119:37:13",
															"nodeType": "YulAssignment",
															"src": "1119:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:13"
																},
																"nativeSrc": "1140:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:13",
														"nodeType": "YulTypedName",
														"src": "1084:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:13",
														"nodeType": "YulTypedName",
														"src": "1090:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:13",
														"nodeType": "YulTypedName",
														"src": "1100:8:13",
														"type": ""
													}
												],
												"src": "1056:107:13"
											},
											{
												"body": {
													"nativeSrc": "1245:317:13",
													"nodeType": "YulBlock",
													"src": "1245:317:13",
													"statements": [
														{
															"nativeSrc": "1255:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:13"
																},
																"nativeSrc": "1311:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:13",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:13",
															"nodeType": "YulAssignment",
															"src": "1417:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:13"
																},
																"nativeSrc": "1429:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:13"
																}
															]
														},
														{
															"nativeSrc": "1477:30:13",
															"nodeType": "YulAssignment",
															"src": "1477:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:13"
																		},
																		"nativeSrc": "1497:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:13"
																},
																"nativeSrc": "1486:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:13"
																}
															]
														},
														{
															"nativeSrc": "1516:40:13",
															"nodeType": "YulAssignment",
															"src": "1516:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nativeSrc": "1536:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:13"
																},
																"nativeSrc": "1526:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:13",
														"nodeType": "YulTypedName",
														"src": "1206:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:13",
														"nodeType": "YulTypedName",
														"src": "1213:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:13",
														"nodeType": "YulTypedName",
														"src": "1225:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:13",
														"nodeType": "YulTypedName",
														"src": "1238:6:13",
														"type": ""
													}
												],
												"src": "1169:393:13"
											},
											{
												"body": {
													"nativeSrc": "1613:32:13",
													"nodeType": "YulBlock",
													"src": "1613:32:13",
													"statements": [
														{
															"nativeSrc": "1623:16:13",
															"nodeType": "YulAssignment",
															"src": "1623:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:13",
																"nodeType": "YulIdentifier",
																"src": "1634:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:13",
														"nodeType": "YulTypedName",
														"src": "1595:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:13",
														"nodeType": "YulTypedName",
														"src": "1605:7:13",
														"type": ""
													}
												],
												"src": "1568:77:13"
											},
											{
												"body": {
													"nativeSrc": "1683:28:13",
													"nodeType": "YulBlock",
													"src": "1683:28:13",
													"statements": [
														{
															"nativeSrc": "1693:12:13",
															"nodeType": "YulAssignment",
															"src": "1693:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:13",
																"nodeType": "YulIdentifier",
																"src": "1700:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:13",
														"nodeType": "YulTypedName",
														"src": "1669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:13",
														"nodeType": "YulTypedName",
														"src": "1679:3:13",
														"type": ""
													}
												],
												"src": "1651:60:13"
											},
											{
												"body": {
													"nativeSrc": "1777:82:13",
													"nodeType": "YulBlock",
													"src": "1777:82:13",
													"statements": [
														{
															"nativeSrc": "1787:66:13",
															"nodeType": "YulAssignment",
															"src": "1787:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:13"
																				},
																				"nativeSrc": "1827:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:13"
																		},
																		"nativeSrc": "1818:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:13"
																},
																"nativeSrc": "1800:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:13",
														"nodeType": "YulTypedName",
														"src": "1757:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:13",
														"nodeType": "YulTypedName",
														"src": "1767:9:13",
														"type": ""
													}
												],
												"src": "1717:142:13"
											},
											{
												"body": {
													"nativeSrc": "1912:28:13",
													"nodeType": "YulBlock",
													"src": "1912:28:13",
													"statements": [
														{
															"nativeSrc": "1922:12:13",
															"nodeType": "YulAssignment",
															"src": "1922:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:13",
																"nodeType": "YulIdentifier",
																"src": "1929:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:13",
														"nodeType": "YulTypedName",
														"src": "1898:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:13",
														"nodeType": "YulTypedName",
														"src": "1908:3:13",
														"type": ""
													}
												],
												"src": "1865:75:13"
											},
											{
												"body": {
													"nativeSrc": "2022:193:13",
													"nodeType": "YulBlock",
													"src": "2022:193:13",
													"statements": [
														{
															"nativeSrc": "2032:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:13"
																},
																"nativeSrc": "2056:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:13",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:13"
																				},
																				"nativeSrc": "2145:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:13"
																				},
																				"nativeSrc": "2166:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:13"
																		},
																		"nativeSrc": "2117:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:13"
																},
																"nativeSrc": "2104:105:13",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:13"
															},
															"nativeSrc": "2104:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:13",
														"nodeType": "YulTypedName",
														"src": "1999:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:13",
														"nodeType": "YulTypedName",
														"src": "2005:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:13",
														"nodeType": "YulTypedName",
														"src": "2013:7:13",
														"type": ""
													}
												],
												"src": "1946:269:13"
											},
											{
												"body": {
													"nativeSrc": "2270:24:13",
													"nodeType": "YulBlock",
													"src": "2270:24:13",
													"statements": [
														{
															"nativeSrc": "2280:8:13",
															"nodeType": "YulAssignment",
															"src": "2280:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:13",
																"nodeType": "YulLiteral",
																"src": "2287:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:13",
														"nodeType": "YulTypedName",
														"src": "2266:3:13",
														"type": ""
													}
												],
												"src": "2221:73:13"
											},
											{
												"body": {
													"nativeSrc": "2353:136:13",
													"nodeType": "YulBlock",
													"src": "2353:136:13",
													"statements": [
														{
															"nativeSrc": "2363:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:13"
																},
																"nativeSrc": "2377:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:13"
																},
																"nativeSrc": "2418:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:13"
															},
															"nativeSrc": "2418:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:13",
														"nodeType": "YulTypedName",
														"src": "2339:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:13",
														"nodeType": "YulTypedName",
														"src": "2345:6:13",
														"type": ""
													}
												],
												"src": "2300:189:13"
											},
											{
												"body": {
													"nativeSrc": "2545:136:13",
													"nodeType": "YulBlock",
													"src": "2545:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:13",
																"nodeType": "YulBlock",
																"src": "2612:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:13"
																			},
																			"nativeSrc": "2626:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:13"
																		},
																		"nativeSrc": "2626:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:13"
																},
																"nativeSrc": "2562:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:13"
															},
															"nativeSrc": "2555:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:13",
																"nodeType": "YulBlock",
																"src": "2577:26:13",
																"statements": [
																	{
																		"nativeSrc": "2579:22:13",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:13"
																			},
																			"nativeSrc": "2588:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:13",
																"nodeType": "YulBlock",
																"src": "2559:2:13",
																"statements": []
															},
															"src": "2555:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:13",
														"nodeType": "YulTypedName",
														"src": "2533:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:13",
														"nodeType": "YulTypedName",
														"src": "2540:3:13",
														"type": ""
													}
												],
												"src": "2495:186:13"
											},
											{
												"body": {
													"nativeSrc": "2766:464:13",
													"nodeType": "YulBlock",
													"src": "2766:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:13",
																"nodeType": "YulBlock",
																"src": "2792:431:13",
																"statements": [
																	{
																		"nativeSrc": "2806:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:13"
																			},
																			"nativeSrc": "2822:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:13",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:13"
																					},
																					"nativeSrc": "2906:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:13"
																			},
																			"nativeSrc": "2892:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:13",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:13",
																			"nodeType": "YulBlock",
																			"src": "3093:27:13",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:13",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:13"
																			},
																			"nativeSrc": "3074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:13"
																		},
																		"nativeSrc": "3071:49:13",
																		"nodeType": "YulIf",
																		"src": "3071:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:13"
																							},
																							"nativeSrc": "3189:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:13"
																					},
																					"nativeSrc": "3175:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:13"
																			},
																			"nativeSrc": "3133:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:13"
																		},
																		"nativeSrc": "3133:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:13"
																},
																"nativeSrc": "2780:11:13",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:13"
															},
															"nativeSrc": "2777:446:13",
															"nodeType": "YulIf",
															"src": "2777:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:13",
														"nodeType": "YulTypedName",
														"src": "2742:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:13",
														"nodeType": "YulTypedName",
														"src": "2749:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:13",
														"nodeType": "YulTypedName",
														"src": "2754:10:13",
														"type": ""
													}
												],
												"src": "2687:543:13"
											},
											{
												"body": {
													"nativeSrc": "3299:54:13",
													"nodeType": "YulBlock",
													"src": "3299:54:13",
													"statements": [
														{
															"nativeSrc": "3309:37:13",
															"nodeType": "YulAssignment",
															"src": "3309:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:13"
																},
																"nativeSrc": "3330:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:13",
														"nodeType": "YulTypedName",
														"src": "3274:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:13",
														"nodeType": "YulTypedName",
														"src": "3280:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:13",
														"nodeType": "YulTypedName",
														"src": "3290:8:13",
														"type": ""
													}
												],
												"src": "3236:117:13"
											},
											{
												"body": {
													"nativeSrc": "3410:118:13",
													"nodeType": "YulBlock",
													"src": "3410:118:13",
													"statements": [
														{
															"nativeSrc": "3420:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:13"
																				},
																				"nativeSrc": "3465:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:13"
																				},
																				"nativeSrc": "3480:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:13"
																		},
																		"nativeSrc": "3436:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:13"
																},
																"nativeSrc": "3432:56:13",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:13",
															"nodeType": "YulAssignment",
															"src": "3497:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:13"
																},
																"nativeSrc": "3507:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:13",
														"nodeType": "YulTypedName",
														"src": "3387:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:13",
														"nodeType": "YulTypedName",
														"src": "3393:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:13",
														"nodeType": "YulTypedName",
														"src": "3403:6:13",
														"type": ""
													}
												],
												"src": "3359:169:13"
											},
											{
												"body": {
													"nativeSrc": "3614:214:13",
													"nodeType": "YulBlock",
													"src": "3614:214:13",
													"statements": [
														{
															"nativeSrc": "3747:37:13",
															"nodeType": "YulAssignment",
															"src": "3747:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:13"
																},
																"nativeSrc": "3755:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:13"
																}
															]
														},
														{
															"nativeSrc": "3793:29:13",
															"nodeType": "YulAssignment",
															"src": "3793:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:13"
																		},
																		"nativeSrc": "3810:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:13"
																},
																"nativeSrc": "3801:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:13",
														"nodeType": "YulTypedName",
														"src": "3595:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:13",
														"nodeType": "YulTypedName",
														"src": "3601:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:13",
														"nodeType": "YulTypedName",
														"src": "3609:4:13",
														"type": ""
													}
												],
												"src": "3533:295:13"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:13",
													"nodeType": "YulBlock",
													"src": "3925:1303:13",
													"statements": [
														{
															"nativeSrc": "3936:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:13"
																},
																"nativeSrc": "3950:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:13",
																"nodeType": "YulBlock",
																"src": "4072:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:13"
																			},
																			"nativeSrc": "4074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:13"
																		},
																		"nativeSrc": "4074:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:13"
																},
																"nativeSrc": "4041:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:13"
															},
															"nativeSrc": "4038:56:13",
															"nodeType": "YulIf",
															"src": "4038:56:13"
														},
														{
															"nativeSrc": "4104:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:13"
																		},
																		"nativeSrc": "4144:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:13"
																},
																"nativeSrc": "4118:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:13"
																},
																"nativeSrc": "4203:67:13",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:13"
															},
															"nativeSrc": "4203:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:13"
														},
														{
															"nativeSrc": "4280:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:13",
																"nodeType": "YulLiteral",
																"src": "4297:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:13",
															"nodeType": "YulAssignment",
															"src": "4308:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:13",
																"nodeType": "YulLiteral",
																"src": "4321:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:13",
																		"nodeType": "YulBlock",
																		"src": "4372:611:13",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:13",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:13"
																							},
																							"nativeSrc": "4413:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:13"
																					},
																					"nativeSrc": "4401:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:13",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:13"
																					},
																					"nativeSrc": "4451:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:13",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:13",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:13",
																					"nodeType": "YulBlock",
																					"src": "4569:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:13"
																												},
																												"nativeSrc": "4608:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:13"
																										},
																										"nativeSrc": "4602:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:13"
																								},
																								"nativeSrc": "4587:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:13"
																							},
																							"nativeSrc": "4587:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:13"
																						},
																						{
																							"nativeSrc": "4646:24:13",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:13",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:13"
																								},
																								"nativeSrc": "4656:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:13",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:13",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:13"
																								},
																								"nativeSrc": "4700:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:13"
																					},
																					"nativeSrc": "4532:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:13"
																				},
																				"nativeSrc": "4524:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:13",
																					"nodeType": "YulBlock",
																					"src": "4547:21:13",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:13",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:13"
																								},
																								"nativeSrc": "4554:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:13",
																					"nodeType": "YulBlock",
																					"src": "4528:3:13",
																					"statements": []
																				},
																				"src": "4524:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:13",
																					"nodeType": "YulBlock",
																					"src": "4768:156:13",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:13"
																										},
																										"nativeSrc": "4809:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:13"
																								},
																								"nativeSrc": "4803:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:13",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:13",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:13"
																												},
																												"nativeSrc": "4891:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:13"
																										},
																										"nativeSrc": "4861:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:13"
																								},
																								"nativeSrc": "4846:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:13"
																							},
																							"nativeSrc": "4846:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:13"
																					},
																					"nativeSrc": "4748:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:13"
																				},
																				"nativeSrc": "4745:179:13",
																				"nodeType": "YulIf",
																				"src": "4745:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:13",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:13"
																									},
																									"nativeSrc": "4954:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:13",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:13"
																							},
																							"nativeSrc": "4950:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:13"
																					},
																					"nativeSrc": "4937:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:13"
																				},
																				"nativeSrc": "4937:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:13"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:13",
																	"nodeType": "YulCase",
																	"src": "4365:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:13",
																		"nodeType": "YulBlock",
																		"src": "5000:222:13",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:13",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:13",
																					"nodeType": "YulBlock",
																					"src": "5051:67:13",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:13",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:13"
																										},
																										"nativeSrc": "5084:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:13"
																								},
																								"nativeSrc": "5078:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:13"
																				},
																				"nativeSrc": "5041:77:13",
																				"nodeType": "YulIf",
																				"src": "5041:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:13"
																							},
																							"nativeSrc": "5144:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:13"
																					},
																					"nativeSrc": "5131:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:13"
																				},
																				"nativeSrc": "5131:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:13"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:13",
																	"nodeType": "YulCase",
																	"src": "4992:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:13"
																},
																"nativeSrc": "4342:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:13"
															},
															"nativeSrc": "4335:887:13",
															"nodeType": "YulSwitch",
															"src": "4335:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:13",
														"nodeType": "YulTypedName",
														"src": "3914:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:13",
														"nodeType": "YulTypedName",
														"src": "3920:3:13",
														"type": ""
													}
												],
												"src": "3833:1395:13"
											},
											{
												"body": {
													"nativeSrc": "5279:81:13",
													"nodeType": "YulBlock",
													"src": "5279:81:13",
													"statements": [
														{
															"nativeSrc": "5289:65:13",
															"nodeType": "YulAssignment",
															"src": "5289:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:13",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:13"
																},
																"nativeSrc": "5300:54:13",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:13",
														"nodeType": "YulTypedName",
														"src": "5261:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:13",
														"nodeType": "YulTypedName",
														"src": "5271:7:13",
														"type": ""
													}
												],
												"src": "5234:126:13"
											},
											{
												"body": {
													"nativeSrc": "5411:51:13",
													"nodeType": "YulBlock",
													"src": "5411:51:13",
													"statements": [
														{
															"nativeSrc": "5421:35:13",
															"nodeType": "YulAssignment",
															"src": "5421:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:13"
																},
																"nativeSrc": "5432:24:13",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:13",
														"nodeType": "YulTypedName",
														"src": "5393:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:13",
														"nodeType": "YulTypedName",
														"src": "5403:7:13",
														"type": ""
													}
												],
												"src": "5366:96:13"
											},
											{
												"body": {
													"nativeSrc": "5533:53:13",
													"nodeType": "YulBlock",
													"src": "5533:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:13"
																		},
																		"nativeSrc": "5555:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:13"
																},
																"nativeSrc": "5543:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:13"
															},
															"nativeSrc": "5543:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:13",
														"nodeType": "YulTypedName",
														"src": "5521:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:13",
														"nodeType": "YulTypedName",
														"src": "5528:3:13",
														"type": ""
													}
												],
												"src": "5468:118:13"
											},
											{
												"body": {
													"nativeSrc": "5690:124:13",
													"nodeType": "YulBlock",
													"src": "5690:124:13",
													"statements": [
														{
															"nativeSrc": "5700:26:13",
															"nodeType": "YulAssignment",
															"src": "5700:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:13"
																},
																"nativeSrc": "5708:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:13"
																		},
																		"nativeSrc": "5789:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:13"
																},
																"nativeSrc": "5736:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:13"
															},
															"nativeSrc": "5736:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:13",
														"nodeType": "YulTypedName",
														"src": "5662:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:13",
														"nodeType": "YulTypedName",
														"src": "5674:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:13",
														"nodeType": "YulTypedName",
														"src": "5685:4:13",
														"type": ""
													}
												],
												"src": "5592:222:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50336040518060400160405280600381526020017f464c5800000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f464c580000000000000000000000000000000000000000000000000000000000815250815f908161008b9190610427565b50806001908161009b9190610427565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010e575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101059190610535565b60405180910390fd5b61011d8161012a60201b60201c565b505f60078190555061054e565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026857607f821691505b60208210810361027b5761027a610224565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a2565b6102e786836102a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032b610326610321846102ff565b610308565b6102ff565b9050919050565b5f819050919050565b61034483610311565b61035861035082610332565b8484546102ae565b825550505050565b5f90565b61036c610360565b61037781848461033b565b505050565b5b8181101561039a5761038f5f82610364565b60018101905061037d565b5050565b601f8211156103df576103b081610281565b6103b984610293565b810160208510156103c8578190505b6103dc6103d485610293565b83018261037c565b50505b505050565b5f82821c905092915050565b5f6103ff5f19846008026103e4565b1980831691505092915050565b5f61041783836103f0565b9150826002028217905092915050565b610430826101ed565b67ffffffffffffffff811115610449576104486101f7565b5b6104538254610251565b61045e82828561039e565b5f60209050601f83116001811461048f575f841561047d578287015190505b610487858261040c565b8655506104ee565b601f19841661049d86610281565b5f5b828110156104c45784890151825560018201915060208501945060208101905061049f565b868310156104e157848901516104dd601f8916826103f0565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051f826104f6565b9050919050565b61052f81610515565b82525050565b5f6020820190506105485f830184610526565b92915050565b6120878061055b5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c8063715018a6116100a0578063a22cb4651161006f578063a22cb465146102de578063b88d4fde146102fa578063c87b56dd14610316578063e985e9c514610346578063f2fde38b1461037657610114565b8063715018a61461027a5780638ada066e146102845780638da5cb5b146102a257806395d89b41146102c057610114565b806323b872dd116100e757806323b872dd146101b257806342842e0e146101ce5780636352211e146101ea5780636a6278421461021a57806370a082311461024a57610114565b806301ffc9a71461011857806306fdde0314610148578063081812fc14610166578063095ea7b314610196575b5f80fd5b610132600480360381019061012d91906118be565b610392565b60405161013f9190611903565b60405180910390f35b610150610473565b60405161015d919061198c565b60405180910390f35b610180600480360381019061017b91906119df565b610502565b60405161018d9190611a49565b60405180910390f35b6101b060048036038101906101ab9190611a8c565b61051d565b005b6101cc60048036038101906101c79190611aca565b610533565b005b6101e860048036038101906101e39190611aca565b610632565b005b61020460048036038101906101ff91906119df565b610651565b6040516102119190611a49565b60405180910390f35b610234600480360381019061022f9190611b1a565b610662565b6040516102419190611b54565b60405180910390f35b610264600480360381019061025f9190611b1a565b61069b565b6040516102719190611b54565b60405180910390f35b610282610751565b005b61028c610764565b6040516102999190611b54565b60405180910390f35b6102aa61076d565b6040516102b79190611a49565b60405180910390f35b6102c8610795565b6040516102d5919061198c565b60405180910390f35b6102f860048036038101906102f39190611b97565b610825565b005b610314600480360381019061030f9190611d01565b61083b565b005b610330600480360381019061032b91906119df565b610858565b60405161033d919061198c565b60405180910390f35b610360600480360381019061035b9190611d81565b6108be565b60405161036d9190611903565b60405180910390f35b610390600480360381019061038b9190611b1a565b61094c565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046c575061046b826109d0565b5b9050919050565b60605f805461048190611dec565b80601f01602080910402602001604051908101604052809291908181526020018280546104ad90611dec565b80156104f85780601f106104cf576101008083540402835291602001916104f8565b820191905f5260205f20905b8154815290600101906020018083116104db57829003601f168201915b5050505050905090565b5f61050c82610a39565b5061051682610abf565b9050919050565b61052f828261052a610af8565b610aff565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105a3575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161059a9190611a49565b60405180910390fd5b5f6105b683836105b1610af8565b610b11565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062c578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062393929190611e1c565b60405180910390fd5b50505050565b61064c83838360405180602001604052805f81525061083b565b505050565b5f61065b82610a39565b9050919050565b5f61066b610d1c565b60075f81548092919061067d90611e7e565b91905055505f60075490506106928382610da3565b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361070c575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107039190611a49565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610759610d1c565b6107625f610dc0565b565b5f600754905090565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107a490611dec565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090611dec565b801561081b5780601f106107f25761010080835404028352916020019161081b565b820191905f5260205f20905b8154815290600101906020018083116107fe57829003601f168201915b5050505050905090565b610837610830610af8565b8383610e83565b5050565b610846848484610533565b61085284848484610fec565b50505050565b606061086382610a39565b505f61086d61119e565b90505f81511161088b5760405180602001604052805f8152506108b6565b80610895846111b4565b6040516020016108a6929190611eff565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610954610d1c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109bb9190611a49565b60405180910390fd5b6109cd81610dc0565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610a448361127e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ab657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610aad9190611b54565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b0c83838360016112b7565b505050565b5f80610b1c8461127e565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b5d57610b5c818486611476565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610be857610b9c5f855f806112b7565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c6757600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610d24610af8565b73ffffffffffffffffffffffffffffffffffffffff16610d4261076d565b73ffffffffffffffffffffffffffffffffffffffff1614610da157610d65610af8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d989190611a49565b60405180910390fd5b565b610dbc828260405180602001604052805f815250611539565b5050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef357816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610eea9190611a49565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fdf9190611903565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611198578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261102f610af8565b8685856040518563ffffffff1660e01b81526004016110519493929190611f74565b6020604051808303815f875af192505050801561108c57506040513d601f19601f820116820180604052508101906110899190611fd2565b60015b61110d573d805f81146110ba576040519150601f19603f3d011682016040523d82523d5f602084013e6110bf565b606091505b505f81510361110557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110fc9190611a49565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461119657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161118d9190611a49565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016111c284611554565b0190505f8167ffffffffffffffff8111156111e0576111df611bdd565b5b6040519080825280601f01601f1916602001820160405280156112125781602001600182028036833780820191505090505b5090505f82602001820190505b600115611273578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161126857611267611ffd565b5b0494505f850361121f575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112ef57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611421575f6112fe84610a39565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561136857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561137b575061137981846108be565b155b156113bd57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113b49190611a49565b60405180910390fd5b811561141f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114818383836116a5565b611534575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114f557806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114ec9190611b54565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161152b92919061202a565b60405180910390fd5b505050565b6115438383611765565b61154f5f848484610fec565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115b0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115a6576115a5611ffd565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106115ed576d04ee2d6d415b85acef810000000083816115e3576115e2611ffd565b5b0492506020810190505b662386f26fc10000831061161c57662386f26fc10000838161161257611611611ffd565b5b0492506010810190505b6305f5e1008310611645576305f5e100838161163b5761163a611ffd565b5b0492506008810190505b612710831061166a5761271083816116605761165f611ffd565b5b0492506004810190505b6064831061168d576064838161168357611682611ffd565b5b0492506002810190505b600a831061169c576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561175c57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171d575061171c84846108be565b5b8061175b57508273ffffffffffffffffffffffffffffffffffffffff1661174383610abf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117d5575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117cc9190611a49565b60405180910390fd5b5f6117e183835f610b11565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611853575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161184a9190611a49565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61189d81611869565b81146118a7575f80fd5b50565b5f813590506118b881611894565b92915050565b5f602082840312156118d3576118d2611861565b5b5f6118e0848285016118aa565b91505092915050565b5f8115159050919050565b6118fd816118e9565b82525050565b5f6020820190506119165f8301846118f4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61195e8261191c565b6119688185611926565b9350611978818560208601611936565b61198181611944565b840191505092915050565b5f6020820190508181035f8301526119a48184611954565b905092915050565b5f819050919050565b6119be816119ac565b81146119c8575f80fd5b50565b5f813590506119d9816119b5565b92915050565b5f602082840312156119f4576119f3611861565b5b5f611a01848285016119cb565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a3382611a0a565b9050919050565b611a4381611a29565b82525050565b5f602082019050611a5c5f830184611a3a565b92915050565b611a6b81611a29565b8114611a75575f80fd5b50565b5f81359050611a8681611a62565b92915050565b5f8060408385031215611aa257611aa1611861565b5b5f611aaf85828601611a78565b9250506020611ac0858286016119cb565b9150509250929050565b5f805f60608486031215611ae157611ae0611861565b5b5f611aee86828701611a78565b9350506020611aff86828701611a78565b9250506040611b10868287016119cb565b9150509250925092565b5f60208284031215611b2f57611b2e611861565b5b5f611b3c84828501611a78565b91505092915050565b611b4e816119ac565b82525050565b5f602082019050611b675f830184611b45565b92915050565b611b76816118e9565b8114611b80575f80fd5b50565b5f81359050611b9181611b6d565b92915050565b5f8060408385031215611bad57611bac611861565b5b5f611bba85828601611a78565b9250506020611bcb85828601611b83565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611c1382611944565b810181811067ffffffffffffffff82111715611c3257611c31611bdd565b5b80604052505050565b5f611c44611858565b9050611c508282611c0a565b919050565b5f67ffffffffffffffff821115611c6f57611c6e611bdd565b5b611c7882611944565b9050602081019050919050565b828183375f83830152505050565b5f611ca5611ca084611c55565b611c3b565b905082815260208101848484011115611cc157611cc0611bd9565b5b611ccc848285611c85565b509392505050565b5f82601f830112611ce857611ce7611bd5565b5b8135611cf8848260208601611c93565b91505092915050565b5f805f8060808587031215611d1957611d18611861565b5b5f611d2687828801611a78565b9450506020611d3787828801611a78565b9350506040611d48878288016119cb565b925050606085013567ffffffffffffffff811115611d6957611d68611865565b5b611d7587828801611cd4565b91505092959194509250565b5f8060408385031215611d9757611d96611861565b5b5f611da485828601611a78565b9250506020611db585828601611a78565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e0357607f821691505b602082108103611e1657611e15611dbf565b5b50919050565b5f606082019050611e2f5f830186611a3a565b611e3c6020830185611b45565b611e496040830184611a3a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e88826119ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611eba57611eb9611e51565b5b600182019050919050565b5f81905092915050565b5f611ed98261191c565b611ee38185611ec5565b9350611ef3818560208601611936565b80840191505092915050565b5f611f0a8285611ecf565b9150611f168284611ecf565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611f4682611f22565b611f508185611f2c565b9350611f60818560208601611936565b611f6981611944565b840191505092915050565b5f608082019050611f875f830187611a3a565b611f946020830186611a3a565b611fa16040830185611b45565b8181036060830152611fb38184611f3c565b905095945050505050565b5f81519050611fcc81611894565b92915050565b5f60208284031215611fe757611fe6611861565b5b5f611ff484828501611fbe565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f60408201905061203d5f830185611a3a565b61204a6020830184611b45565b939250505056fea264697066735822122082572f8e88a171b3197afc7aa57144d35ac067daffe0630c889093a0a705a53e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x464C580000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x464C580000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x427 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x427 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x54E JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x268 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x224 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x2E7 DUP7 DUP4 PUSH2 0x2A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32B PUSH2 0x326 PUSH2 0x321 DUP5 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP4 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x350 DUP3 PUSH2 0x332 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x360 JUMP JUMPDEST PUSH2 0x377 DUP2 DUP5 DUP5 PUSH2 0x33B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH2 0x38F PUSH0 DUP3 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3DF JUMPI PUSH2 0x3B0 DUP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x3B9 DUP5 PUSH2 0x293 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3DC PUSH2 0x3D4 DUP6 PUSH2 0x293 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x417 DUP4 DUP4 PUSH2 0x3F0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x430 DUP3 PUSH2 0x1ED JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x449 JUMPI PUSH2 0x448 PUSH2 0x1F7 JUMP JUMPDEST JUMPDEST PUSH2 0x453 DUP3 SLOAD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x45E DUP3 DUP3 DUP6 PUSH2 0x39E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x48F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x47D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x487 DUP6 DUP3 PUSH2 0x40C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x49D DUP7 PUSH2 0x281 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4DD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51F DUP3 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F DUP2 PUSH2 0x515 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x548 PUSH0 DUP4 ADD DUP5 PUSH2 0x526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2087 DUP1 PUSH2 0x55B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x376 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x8ADA066E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46C JUMPI POP PUSH2 0x46B DUP3 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x481 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x50C DUP3 PUSH2 0xA39 JUMP JUMPDEST POP PUSH2 0x516 DUP3 PUSH2 0xABF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F DUP3 DUP3 PUSH2 0x52A PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5B6 DUP4 DUP4 PUSH2 0x5B1 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x64C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x83B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65B DUP3 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x66B PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x67D SWAP1 PUSH2 0x1E7E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x692 DUP4 DUP3 PUSH2 0xDA3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x759 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x762 PUSH0 PUSH2 0xDC0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0x830 PUSH2 0xAF8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x846 DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH2 0x852 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFEC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x863 DUP3 PUSH2 0xA39 JUMP JUMPDEST POP PUSH0 PUSH2 0x86D PUSH2 0x119E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x8B6 JUMP JUMPDEST DUP1 PUSH2 0x895 DUP5 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x954 PUSH2 0xD1C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0xDC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA44 DUP4 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB1C DUP5 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5D JUMPI PUSH2 0xB5C DUP2 DUP5 DUP7 PUSH2 0x1476 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE8 JUMPI PUSH2 0xB9C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC67 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD24 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD42 PUSH2 0x76D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA1 JUMPI PUSH2 0xD65 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xDBC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1539 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1198 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x102F PUSH2 0xAF8 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x108C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x110D JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1105 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1196 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x11C2 DUP5 PUSH2 0x1554 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11DF PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1212 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1273 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x121F JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x12EF JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1421 JUMPI PUSH0 PUSH2 0x12FE DUP5 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1368 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x137B JUMPI POP PUSH2 0x1379 DUP2 DUP5 PUSH2 0x8BE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x13BD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x141F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1481 DUP4 DUP4 DUP4 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x1534 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14F5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152B SWAP3 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1543 DUP4 DUP4 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x154F PUSH0 DUP5 DUP5 DUP5 PUSH2 0xFEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x15B0 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15ED JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x15E3 JUMPI PUSH2 0x15E2 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x161C JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1612 JUMPI PUSH2 0x1611 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1645 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x163B JUMPI PUSH2 0x163A PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x166A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x168D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x169C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x175C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x171D JUMPI POP PUSH2 0x171C DUP5 DUP5 PUSH2 0x8BE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x175B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1743 DUP4 PUSH2 0xABF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x17E1 DUP4 DUP4 PUSH0 PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1853 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189D DUP2 PUSH2 0x1869 JUMP JUMPDEST DUP2 EQ PUSH2 0x18A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B8 DUP2 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E0 DUP5 DUP3 DUP6 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18FD DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1916 PUSH0 DUP4 ADD DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x195E DUP3 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x1968 DUP2 DUP6 PUSH2 0x1926 JUMP JUMPDEST SWAP4 POP PUSH2 0x1978 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x1981 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A4 DUP2 DUP5 PUSH2 0x1954 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BE DUP2 PUSH2 0x19AC JUMP JUMPDEST DUP2 EQ PUSH2 0x19C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D9 DUP2 PUSH2 0x19B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A01 DUP5 DUP3 DUP6 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A33 DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A43 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A86 DUP2 PUSH2 0x1A62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH2 0x1AA1 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAF DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AC0 DUP6 DUP3 DUP7 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AEE DUP7 DUP3 DUP8 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AFF DUP7 DUP3 DUP8 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B10 DUP7 DUP3 DUP8 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2E PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3C DUP5 DUP3 DUP6 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4E DUP2 PUSH2 0x19AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B67 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B76 DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B91 DUP2 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAC PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBA DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BCB DUP6 DUP3 DUP7 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C13 DUP3 PUSH2 0x1944 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C32 JUMPI PUSH2 0x1C31 PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C44 PUSH2 0x1858 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 DUP3 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST PUSH2 0x1C78 DUP3 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA5 PUSH2 0x1CA0 DUP5 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x1BD9 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCC DUP5 DUP3 DUP6 PUSH2 0x1C85 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CF8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH2 0x1D18 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D26 DUP8 DUP3 DUP9 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D37 DUP8 DUP3 DUP9 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D48 DUP8 DUP3 DUP9 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1865 JUMP JUMPDEST JUMPDEST PUSH2 0x1D75 DUP8 DUP3 DUP9 ADD PUSH2 0x1CD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D97 JUMPI PUSH2 0x1D96 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E03 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x1DBF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E2F PUSH0 DUP4 ADD DUP7 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1E3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B45 JUMP JUMPDEST PUSH2 0x1E49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A3A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E88 DUP3 PUSH2 0x19AC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1E51 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED9 DUP3 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x1EE3 DUP2 DUP6 PUSH2 0x1EC5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1936 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0A DUP3 DUP6 PUSH2 0x1ECF JUMP JUMPDEST SWAP2 POP PUSH2 0x1F16 DUP3 DUP5 PUSH2 0x1ECF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F46 DUP3 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1F50 DUP2 DUP6 PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1F60 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x1F69 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F87 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1F94 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1FA1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B45 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FB3 DUP2 DUP5 PUSH2 0x1F3C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FCC DUP2 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE7 JUMPI PUSH2 0x1FE6 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x203D PUSH0 DUP4 ADD DUP6 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x204A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 JUMPI 0x2F DUP15 DUP9 LOG1 PUSH18 0xB3197AFC7AA57144D35AC067DAFFE0630C88 SWAP1 SWAP4 LOG0 0xA7 SDIV 0xA5 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "176:463:12:-:0;;;249:87;;;;;;;;;;292:10;1419:116:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:5;1486;:13;;;;;;:::i;:::-;;1520:7;1510;:17;;;;;;:::i;:::-;;1419:116;;1335:1:0;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;327:1:12::2;315:9;:13;;;;176:463:::0;;3006:191:0;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;176:463:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1096": {
									"entryPoint": 2815,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 4791,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_489": {
									"entryPoint": 4510,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 5238,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 4076,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3356,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": 2751,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 5797,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 5989,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 2808,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": 4734,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1228": {
									"entryPoint": 2617,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_915": {
									"entryPoint": 3491,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_941": {
									"entryPoint": 5433,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 3715,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3520,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_850": {
									"entryPoint": 2833,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_505": {
									"entryPoint": 1309,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 1691,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 1282,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCounter_2994": {
									"entryPoint": 1892,
									"id": 2994,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 2238,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2651": {
									"entryPoint": 5460,
									"id": 2651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2986": {
									"entryPoint": 1634,
									"id": 2986,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_435": {
									"entryPoint": 1139,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_426": {
									"entryPoint": 1617,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1901,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1873,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 1586,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 2107,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 2085,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1764": {
									"entryPoint": 2512,
									"id": 1764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 914,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 1941,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1554": {
									"entryPoint": 4532,
									"id": 1554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 2136,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 1331,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2380,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6454,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15068:13",
										"nodeType": "YulBlock",
										"src": "0:15068:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:32:13",
													"nodeType": "YulBlock",
													"src": "2798:32:13",
													"statements": [
														{
															"nativeSrc": "2808:16:13",
															"nodeType": "YulAssignment",
															"src": "2808:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:13",
																"nodeType": "YulIdentifier",
																"src": "2819:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:77:13"
											},
											{
												"body": {
													"nativeSrc": "2879:79:13",
													"nodeType": "YulBlock",
													"src": "2879:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:13",
																"nodeType": "YulBlock",
																"src": "2936:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:13"
																			},
																			"nativeSrc": "2938:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:13"
																		},
																		"nativeSrc": "2938:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:13"
																				},
																				"nativeSrc": "2909:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:13"
																		},
																		"nativeSrc": "2899:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:13"
																},
																"nativeSrc": "2892:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:13"
															},
															"nativeSrc": "2889:63:13",
															"nodeType": "YulIf",
															"src": "2889:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:13",
														"nodeType": "YulTypedName",
														"src": "2872:5:13",
														"type": ""
													}
												],
												"src": "2836:122:13"
											},
											{
												"body": {
													"nativeSrc": "3016:87:13",
													"nodeType": "YulBlock",
													"src": "3016:87:13",
													"statements": [
														{
															"nativeSrc": "3026:29:13",
															"nodeType": "YulAssignment",
															"src": "3026:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:13"
																},
																"nativeSrc": "3035:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:13"
																},
																"nativeSrc": "3064:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:13"
															},
															"nativeSrc": "3064:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:13",
														"nodeType": "YulTypedName",
														"src": "2994:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:13",
														"nodeType": "YulTypedName",
														"src": "3002:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:13",
														"nodeType": "YulTypedName",
														"src": "3010:5:13",
														"type": ""
													}
												],
												"src": "2964:139:13"
											},
											{
												"body": {
													"nativeSrc": "3175:263:13",
													"nodeType": "YulBlock",
													"src": "3175:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:13",
																"nodeType": "YulBlock",
																"src": "3221:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:13"
																			},
																			"nativeSrc": "3223:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:13"
																		},
																		"nativeSrc": "3223:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:13"
																		},
																		"nativeSrc": "3192:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:13"
																},
																"nativeSrc": "3188:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:13"
															},
															"nativeSrc": "3185:119:13",
															"nodeType": "YulIf",
															"src": "3185:119:13"
														},
														{
															"nativeSrc": "3314:117:13",
															"nodeType": "YulBlock",
															"src": "3314:117:13",
															"statements": [
																{
																	"nativeSrc": "3329:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:13"
																				},
																				"nativeSrc": "3389:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:13"
																		},
																		"nativeSrc": "3368:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:13",
														"nodeType": "YulTypedName",
														"src": "3145:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:13",
														"nodeType": "YulTypedName",
														"src": "3156:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:13",
														"nodeType": "YulTypedName",
														"src": "3168:6:13",
														"type": ""
													}
												],
												"src": "3109:329:13"
											},
											{
												"body": {
													"nativeSrc": "3489:81:13",
													"nodeType": "YulBlock",
													"src": "3489:81:13",
													"statements": [
														{
															"nativeSrc": "3499:65:13",
															"nodeType": "YulAssignment",
															"src": "3499:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:13"
																},
																"nativeSrc": "3510:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:13",
														"nodeType": "YulTypedName",
														"src": "3471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:13",
														"nodeType": "YulTypedName",
														"src": "3481:7:13",
														"type": ""
													}
												],
												"src": "3444:126:13"
											},
											{
												"body": {
													"nativeSrc": "3621:51:13",
													"nodeType": "YulBlock",
													"src": "3621:51:13",
													"statements": [
														{
															"nativeSrc": "3631:35:13",
															"nodeType": "YulAssignment",
															"src": "3631:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:13"
																},
																"nativeSrc": "3642:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:13",
														"nodeType": "YulTypedName",
														"src": "3603:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:13",
														"nodeType": "YulTypedName",
														"src": "3613:7:13",
														"type": ""
													}
												],
												"src": "3576:96:13"
											},
											{
												"body": {
													"nativeSrc": "3743:53:13",
													"nodeType": "YulBlock",
													"src": "3743:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:13"
																		},
																		"nativeSrc": "3765:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:13"
																},
																"nativeSrc": "3753:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:13"
															},
															"nativeSrc": "3753:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:13",
														"nodeType": "YulTypedName",
														"src": "3731:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:13",
														"nodeType": "YulTypedName",
														"src": "3738:3:13",
														"type": ""
													}
												],
												"src": "3678:118:13"
											},
											{
												"body": {
													"nativeSrc": "3900:124:13",
													"nodeType": "YulBlock",
													"src": "3900:124:13",
													"statements": [
														{
															"nativeSrc": "3910:26:13",
															"nodeType": "YulAssignment",
															"src": "3910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:13"
																},
																"nativeSrc": "3918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:13"
																		},
																		"nativeSrc": "3999:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:13"
																},
																"nativeSrc": "3946:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:13"
															},
															"nativeSrc": "3946:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:13",
														"nodeType": "YulTypedName",
														"src": "3872:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:13",
														"nodeType": "YulTypedName",
														"src": "3884:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:13",
														"nodeType": "YulTypedName",
														"src": "3895:4:13",
														"type": ""
													}
												],
												"src": "3802:222:13"
											},
											{
												"body": {
													"nativeSrc": "4073:79:13",
													"nodeType": "YulBlock",
													"src": "4073:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:13",
																"nodeType": "YulBlock",
																"src": "4130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:13"
																			},
																			"nativeSrc": "4132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:13"
																		},
																		"nativeSrc": "4132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:13"
																				},
																				"nativeSrc": "4103:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:13"
																		},
																		"nativeSrc": "4093:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nativeSrc": "4086:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:13"
															},
															"nativeSrc": "4083:63:13",
															"nodeType": "YulIf",
															"src": "4083:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:13",
														"nodeType": "YulTypedName",
														"src": "4066:5:13",
														"type": ""
													}
												],
												"src": "4030:122:13"
											},
											{
												"body": {
													"nativeSrc": "4210:87:13",
													"nodeType": "YulBlock",
													"src": "4210:87:13",
													"statements": [
														{
															"nativeSrc": "4220:29:13",
															"nodeType": "YulAssignment",
															"src": "4220:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:13"
																},
																"nativeSrc": "4229:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:13"
																},
																"nativeSrc": "4258:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:13"
															},
															"nativeSrc": "4258:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:13",
														"nodeType": "YulTypedName",
														"src": "4188:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:13",
														"nodeType": "YulTypedName",
														"src": "4196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:13",
														"nodeType": "YulTypedName",
														"src": "4204:5:13",
														"type": ""
													}
												],
												"src": "4158:139:13"
											},
											{
												"body": {
													"nativeSrc": "4386:391:13",
													"nodeType": "YulBlock",
													"src": "4386:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:13",
																"nodeType": "YulBlock",
																"src": "4432:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:13"
																			},
																			"nativeSrc": "4434:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:13"
																		},
																		"nativeSrc": "4434:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:13"
																		},
																		"nativeSrc": "4403:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:13"
																},
																"nativeSrc": "4399:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:13"
															},
															"nativeSrc": "4396:119:13",
															"nodeType": "YulIf",
															"src": "4396:119:13"
														},
														{
															"nativeSrc": "4525:117:13",
															"nodeType": "YulBlock",
															"src": "4525:117:13",
															"statements": [
																{
																	"nativeSrc": "4540:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:13"
																				},
																				"nativeSrc": "4600:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:13"
																		},
																		"nativeSrc": "4579:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:13",
															"nodeType": "YulBlock",
															"src": "4652:118:13",
															"statements": [
																{
																	"nativeSrc": "4667:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:13"
																				},
																				"nativeSrc": "4728:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:13"
																		},
																		"nativeSrc": "4707:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:13",
														"nodeType": "YulTypedName",
														"src": "4348:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:13",
														"nodeType": "YulTypedName",
														"src": "4359:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:13",
														"nodeType": "YulTypedName",
														"src": "4371:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:13",
														"nodeType": "YulTypedName",
														"src": "4379:6:13",
														"type": ""
													}
												],
												"src": "4303:474:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5474:263:13",
													"nodeType": "YulBlock",
													"src": "5474:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:13",
																"nodeType": "YulBlock",
																"src": "5520:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:13"
																			},
																			"nativeSrc": "5522:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:13"
																		},
																		"nativeSrc": "5522:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:13"
																		},
																		"nativeSrc": "5491:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:13"
																},
																"nativeSrc": "5487:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:13"
															},
															"nativeSrc": "5484:119:13",
															"nodeType": "YulIf",
															"src": "5484:119:13"
														},
														{
															"nativeSrc": "5613:117:13",
															"nodeType": "YulBlock",
															"src": "5613:117:13",
															"statements": [
																{
																	"nativeSrc": "5628:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:13"
																				},
																				"nativeSrc": "5688:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:13"
																		},
																		"nativeSrc": "5667:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:13",
														"nodeType": "YulTypedName",
														"src": "5444:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:13",
														"nodeType": "YulTypedName",
														"src": "5455:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:13",
														"nodeType": "YulTypedName",
														"src": "5467:6:13",
														"type": ""
													}
												],
												"src": "5408:329:13"
											},
											{
												"body": {
													"nativeSrc": "5808:53:13",
													"nodeType": "YulBlock",
													"src": "5808:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:13"
																		},
																		"nativeSrc": "5830:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:13"
																},
																"nativeSrc": "5818:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:13"
															},
															"nativeSrc": "5818:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:13",
														"nodeType": "YulTypedName",
														"src": "5796:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:13",
														"nodeType": "YulTypedName",
														"src": "5803:3:13",
														"type": ""
													}
												],
												"src": "5743:118:13"
											},
											{
												"body": {
													"nativeSrc": "5965:124:13",
													"nodeType": "YulBlock",
													"src": "5965:124:13",
													"statements": [
														{
															"nativeSrc": "5975:26:13",
															"nodeType": "YulAssignment",
															"src": "5975:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:13"
																},
																"nativeSrc": "5983:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:13"
																		},
																		"nativeSrc": "6064:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:13"
																},
																"nativeSrc": "6011:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:13"
															},
															"nativeSrc": "6011:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:13",
														"nodeType": "YulTypedName",
														"src": "5937:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:13",
														"nodeType": "YulTypedName",
														"src": "5949:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:13",
														"nodeType": "YulTypedName",
														"src": "5960:4:13",
														"type": ""
													}
												],
												"src": "5867:222:13"
											},
											{
												"body": {
													"nativeSrc": "6135:76:13",
													"nodeType": "YulBlock",
													"src": "6135:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:13",
																"nodeType": "YulBlock",
																"src": "6189:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:13"
																			},
																			"nativeSrc": "6191:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:13"
																		},
																		"nativeSrc": "6191:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:13"
																				},
																				"nativeSrc": "6165:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:13"
																		},
																		"nativeSrc": "6155:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:13"
																},
																"nativeSrc": "6148:40:13",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:13"
															},
															"nativeSrc": "6145:60:13",
															"nodeType": "YulIf",
															"src": "6145:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:13",
														"nodeType": "YulTypedName",
														"src": "6128:5:13",
														"type": ""
													}
												],
												"src": "6095:116:13"
											},
											{
												"body": {
													"nativeSrc": "6266:84:13",
													"nodeType": "YulBlock",
													"src": "6266:84:13",
													"statements": [
														{
															"nativeSrc": "6276:29:13",
															"nodeType": "YulAssignment",
															"src": "6276:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:13"
																},
																"nativeSrc": "6285:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:13"
																},
																"nativeSrc": "6314:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:13"
															},
															"nativeSrc": "6314:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:13",
														"nodeType": "YulTypedName",
														"src": "6244:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:13",
														"nodeType": "YulTypedName",
														"src": "6252:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:13",
														"nodeType": "YulTypedName",
														"src": "6260:5:13",
														"type": ""
													}
												],
												"src": "6217:133:13"
											},
											{
												"body": {
													"nativeSrc": "6436:388:13",
													"nodeType": "YulBlock",
													"src": "6436:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:13",
																"nodeType": "YulBlock",
																"src": "6482:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:13"
																			},
																			"nativeSrc": "6484:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:13"
																		},
																		"nativeSrc": "6484:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:13"
																		},
																		"nativeSrc": "6453:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:13"
																},
																"nativeSrc": "6449:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:13"
															},
															"nativeSrc": "6446:119:13",
															"nodeType": "YulIf",
															"src": "6446:119:13"
														},
														{
															"nativeSrc": "6575:117:13",
															"nodeType": "YulBlock",
															"src": "6575:117:13",
															"statements": [
																{
																	"nativeSrc": "6590:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:13"
																				},
																				"nativeSrc": "6650:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:13"
																		},
																		"nativeSrc": "6629:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:13",
															"nodeType": "YulBlock",
															"src": "6702:115:13",
															"statements": [
																{
																	"nativeSrc": "6717:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:13",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:13"
																				},
																				"nativeSrc": "6775:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:13"
																		},
																		"nativeSrc": "6757:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:13",
														"nodeType": "YulTypedName",
														"src": "6398:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:13",
														"nodeType": "YulTypedName",
														"src": "6409:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:13",
														"nodeType": "YulTypedName",
														"src": "6421:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:13",
														"nodeType": "YulTypedName",
														"src": "6429:6:13",
														"type": ""
													}
												],
												"src": "6356:468:13"
											},
											{
												"body": {
													"nativeSrc": "6919:28:13",
													"nodeType": "YulBlock",
													"src": "6919:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:13"
																},
																"nativeSrc": "6929:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:13"
															},
															"nativeSrc": "6929:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:13"
											},
											{
												"body": {
													"nativeSrc": "7042:28:13",
													"nodeType": "YulBlock",
													"src": "7042:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:13"
																},
																"nativeSrc": "7052:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:13"
															},
															"nativeSrc": "7052:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:13"
											},
											{
												"body": {
													"nativeSrc": "7104:152:13",
													"nodeType": "YulBlock",
													"src": "7104:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:13"
																},
																"nativeSrc": "7114:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:13"
															},
															"nativeSrc": "7114:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:13"
																},
																"nativeSrc": "7211:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:13"
															},
															"nativeSrc": "7211:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:13"
																},
																"nativeSrc": "7235:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:13"
															},
															"nativeSrc": "7235:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:13"
											},
											{
												"body": {
													"nativeSrc": "7305:238:13",
													"nodeType": "YulBlock",
													"src": "7305:238:13",
													"statements": [
														{
															"nativeSrc": "7315:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:13"
																		},
																		"nativeSrc": "7345:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:13"
																},
																"nativeSrc": "7333:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:13",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:13",
																"nodeType": "YulBlock",
																"src": "7484:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:13"
																			},
																			"nativeSrc": "7486:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:13"
																		},
																		"nativeSrc": "7486:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:13"
																		},
																		"nativeSrc": "7424:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:13"
																		},
																		"nativeSrc": "7460:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:13"
																},
																"nativeSrc": "7421:62:13",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:13"
															},
															"nativeSrc": "7418:88:13",
															"nodeType": "YulIf",
															"src": "7418:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:13"
																},
																"nativeSrc": "7515:22:13",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:13"
															},
															"nativeSrc": "7515:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:13",
														"nodeType": "YulTypedName",
														"src": "7291:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:13",
														"nodeType": "YulTypedName",
														"src": "7299:4:13",
														"type": ""
													}
												],
												"src": "7262:281:13"
											},
											{
												"body": {
													"nativeSrc": "7590:88:13",
													"nodeType": "YulBlock",
													"src": "7590:88:13",
													"statements": [
														{
															"nativeSrc": "7600:30:13",
															"nodeType": "YulAssignment",
															"src": "7600:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:13"
																},
																"nativeSrc": "7610:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:13"
																},
																"nativeSrc": "7639:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:13"
															},
															"nativeSrc": "7639:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:13",
														"nodeType": "YulTypedName",
														"src": "7574:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:13",
														"nodeType": "YulTypedName",
														"src": "7583:6:13",
														"type": ""
													}
												],
												"src": "7549:129:13"
											},
											{
												"body": {
													"nativeSrc": "7750:241:13",
													"nodeType": "YulBlock",
													"src": "7750:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:13",
																"nodeType": "YulBlock",
																"src": "7855:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:13"
																			},
																			"nativeSrc": "7857:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:13"
																		},
																		"nativeSrc": "7857:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:13"
																},
																"nativeSrc": "7824:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:13"
															},
															"nativeSrc": "7821:56:13",
															"nodeType": "YulIf",
															"src": "7821:56:13"
														},
														{
															"nativeSrc": "7887:37:13",
															"nodeType": "YulAssignment",
															"src": "7887:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:13"
																},
																"nativeSrc": "7895:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:13"
																}
															]
														},
														{
															"nativeSrc": "7961:23:13",
															"nodeType": "YulAssignment",
															"src": "7961:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:13"
																},
																"nativeSrc": "7969:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:13",
														"nodeType": "YulTypedName",
														"src": "7734:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:13",
														"nodeType": "YulTypedName",
														"src": "7745:4:13",
														"type": ""
													}
												],
												"src": "7684:307:13"
											},
											{
												"body": {
													"nativeSrc": "8061:84:13",
													"nodeType": "YulBlock",
													"src": "8061:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:13"
																},
																"nativeSrc": "8072:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:13"
															},
															"nativeSrc": "8072:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:13"
																		},
																		"nativeSrc": "8118:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:13"
																},
																"nativeSrc": "8111:27:13",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:13"
															},
															"nativeSrc": "8111:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:13",
														"nodeType": "YulTypedName",
														"src": "8043:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:13",
														"nodeType": "YulTypedName",
														"src": "8048:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:13",
														"nodeType": "YulTypedName",
														"src": "8053:6:13",
														"type": ""
													}
												],
												"src": "7997:148:13"
											},
											{
												"body": {
													"nativeSrc": "8234:340:13",
													"nodeType": "YulBlock",
													"src": "8234:340:13",
													"statements": [
														{
															"nativeSrc": "8244:74:13",
															"nodeType": "YulAssignment",
															"src": "8244:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:13"
																		},
																		"nativeSrc": "8269:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:13"
																},
																"nativeSrc": "8253:65:13",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:13"
																},
																"nativeSrc": "8327:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:13"
															},
															"nativeSrc": "8327:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:13"
														},
														{
															"nativeSrc": "8357:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:13"
																},
																"nativeSrc": "8368:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:13",
																"nodeType": "YulBlock",
																"src": "8422:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:13"
																			},
																			"nativeSrc": "8424:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:13"
																		},
																		"nativeSrc": "8424:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:13"
																		},
																		"nativeSrc": "8399:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:13"
																},
																"nativeSrc": "8396:25:13",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:13"
															},
															"nativeSrc": "8393:112:13",
															"nodeType": "YulIf",
															"src": "8393:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:13"
																},
																"nativeSrc": "8514:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:13"
															},
															"nativeSrc": "8514:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:13",
														"nodeType": "YulTypedName",
														"src": "8207:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:13",
														"nodeType": "YulTypedName",
														"src": "8212:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:13",
														"nodeType": "YulTypedName",
														"src": "8220:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:13",
														"nodeType": "YulTypedName",
														"src": "8228:5:13",
														"type": ""
													}
												],
												"src": "8151:423:13"
											},
											{
												"body": {
													"nativeSrc": "8654:277:13",
													"nodeType": "YulBlock",
													"src": "8654:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:13",
																"nodeType": "YulBlock",
																"src": "8703:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:13"
																			},
																			"nativeSrc": "8705:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:13"
																		},
																		"nativeSrc": "8705:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:13",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:13"
																				},
																				"nativeSrc": "8678:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:13"
																		},
																		"nativeSrc": "8674:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:13"
																},
																"nativeSrc": "8667:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:13"
															},
															"nativeSrc": "8664:122:13",
															"nodeType": "YulIf",
															"src": "8664:122:13"
														},
														{
															"nativeSrc": "8795:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:13"
																},
																"nativeSrc": "8809:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:13",
															"nodeType": "YulAssignment",
															"src": "8838:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:13",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:13"
																		},
																		"nativeSrc": "8894:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:13"
																},
																"nativeSrc": "8847:78:13",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:13",
														"nodeType": "YulTypedName",
														"src": "8632:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:13",
														"nodeType": "YulTypedName",
														"src": "8640:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:13",
														"nodeType": "YulTypedName",
														"src": "8648:5:13",
														"type": ""
													}
												],
												"src": "8593:338:13"
											},
											{
												"body": {
													"nativeSrc": "9063:817:13",
													"nodeType": "YulBlock",
													"src": "9063:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:13",
																"nodeType": "YulBlock",
																"src": "9110:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:13"
																			},
																			"nativeSrc": "9112:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:13"
																		},
																		"nativeSrc": "9112:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:13"
																		},
																		"nativeSrc": "9080:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:13"
																},
																"nativeSrc": "9076:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:13"
															},
															"nativeSrc": "9073:120:13",
															"nodeType": "YulIf",
															"src": "9073:120:13"
														},
														{
															"nativeSrc": "9203:117:13",
															"nodeType": "YulBlock",
															"src": "9203:117:13",
															"statements": [
																{
																	"nativeSrc": "9218:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:13"
																				},
																				"nativeSrc": "9278:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:13"
																		},
																		"nativeSrc": "9257:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:13",
															"nodeType": "YulBlock",
															"src": "9330:118:13",
															"statements": [
																{
																	"nativeSrc": "9345:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:13"
																				},
																				"nativeSrc": "9406:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:13"
																		},
																		"nativeSrc": "9385:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:13",
															"nodeType": "YulBlock",
															"src": "9458:118:13",
															"statements": [
																{
																	"nativeSrc": "9473:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:13"
																				},
																				"nativeSrc": "9534:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:13"
																		},
																		"nativeSrc": "9513:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:13",
															"nodeType": "YulBlock",
															"src": "9586:287:13",
															"statements": [
																{
																	"nativeSrc": "9601:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:13"
																				},
																				"nativeSrc": "9628:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:13"
																		},
																		"nativeSrc": "9615:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:13",
																		"nodeType": "YulBlock",
																		"src": "9694:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:13"
																					},
																					"nativeSrc": "9696:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:13"
																				},
																				"nativeSrc": "9696:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:13"
																		},
																		"nativeSrc": "9663:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:13"
																	},
																	"nativeSrc": "9660:117:13",
																	"nodeType": "YulIf",
																	"src": "9660:117:13"
																},
																{
																	"nativeSrc": "9791:72:13",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:13"
																				},
																				"nativeSrc": "9831:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:13"
																		},
																		"nativeSrc": "9801:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:13",
														"nodeType": "YulTypedName",
														"src": "9009:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:13",
														"nodeType": "YulTypedName",
														"src": "9020:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:13",
														"nodeType": "YulTypedName",
														"src": "9032:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:13",
														"nodeType": "YulTypedName",
														"src": "9040:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:13",
														"nodeType": "YulTypedName",
														"src": "9048:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:13",
														"nodeType": "YulTypedName",
														"src": "9056:6:13",
														"type": ""
													}
												],
												"src": "8937:943:13"
											},
											{
												"body": {
													"nativeSrc": "9969:391:13",
													"nodeType": "YulBlock",
													"src": "9969:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:13",
																"nodeType": "YulBlock",
																"src": "10015:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:13"
																			},
																			"nativeSrc": "10017:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:13"
																		},
																		"nativeSrc": "10017:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:13"
																		},
																		"nativeSrc": "9986:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:13"
																},
																"nativeSrc": "9982:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:13"
															},
															"nativeSrc": "9979:119:13",
															"nodeType": "YulIf",
															"src": "9979:119:13"
														},
														{
															"nativeSrc": "10108:117:13",
															"nodeType": "YulBlock",
															"src": "10108:117:13",
															"statements": [
																{
																	"nativeSrc": "10123:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:13"
																				},
																				"nativeSrc": "10183:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:13"
																		},
																		"nativeSrc": "10162:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:13",
															"nodeType": "YulBlock",
															"src": "10235:118:13",
															"statements": [
																{
																	"nativeSrc": "10250:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:13"
																				},
																				"nativeSrc": "10311:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:13"
																		},
																		"nativeSrc": "10290:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:13",
														"nodeType": "YulTypedName",
														"src": "9931:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:13",
														"nodeType": "YulTypedName",
														"src": "9942:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:13",
														"nodeType": "YulTypedName",
														"src": "9954:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:13",
														"nodeType": "YulTypedName",
														"src": "9962:6:13",
														"type": ""
													}
												],
												"src": "9886:474:13"
											},
											{
												"body": {
													"nativeSrc": "10394:152:13",
													"nodeType": "YulBlock",
													"src": "10394:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:13"
																},
																"nativeSrc": "10404:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:13"
															},
															"nativeSrc": "10404:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:13"
																},
																"nativeSrc": "10501:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:13"
															},
															"nativeSrc": "10501:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:13"
																},
																"nativeSrc": "10525:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:13"
															},
															"nativeSrc": "10525:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:13"
											},
											{
												"body": {
													"nativeSrc": "10603:269:13",
													"nodeType": "YulBlock",
													"src": "10603:269:13",
													"statements": [
														{
															"nativeSrc": "10613:22:13",
															"nodeType": "YulAssignment",
															"src": "10613:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:13"
																},
																"nativeSrc": "10623:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:13"
																}
															]
														},
														{
															"nativeSrc": "10644:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:13"
																},
																"nativeSrc": "10670:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:13",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:13",
																"nodeType": "YulBlock",
																"src": "10721:51:13",
																"statements": [
																	{
																		"nativeSrc": "10735:27:13",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:13"
																			},
																			"nativeSrc": "10745:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:13"
																},
																"nativeSrc": "10694:26:13",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:13"
															},
															"nativeSrc": "10691:81:13",
															"nodeType": "YulIf",
															"src": "10691:81:13"
														},
														{
															"body": {
																"nativeSrc": "10824:42:13",
																"nodeType": "YulBlock",
																"src": "10824:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:13"
																			},
																			"nativeSrc": "10838:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:13"
																		},
																		"nativeSrc": "10838:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:13"
																		},
																		"nativeSrc": "10808:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:13"
																},
																"nativeSrc": "10785:38:13",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:13"
															},
															"nativeSrc": "10782:84:13",
															"nodeType": "YulIf",
															"src": "10782:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:13",
														"nodeType": "YulTypedName",
														"src": "10587:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:13",
														"nodeType": "YulTypedName",
														"src": "10596:6:13",
														"type": ""
													}
												],
												"src": "10552:320:13"
											},
											{
												"body": {
													"nativeSrc": "11032:288:13",
													"nodeType": "YulBlock",
													"src": "11032:288:13",
													"statements": [
														{
															"nativeSrc": "11042:26:13",
															"nodeType": "YulAssignment",
															"src": "11042:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11054:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11054:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11050:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:13"
																},
																"nativeSrc": "11050:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11050:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11042:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11042:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11122:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11146:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:13"
																		},
																		"nativeSrc": "11131:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11078:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11078:43:13"
																},
																"nativeSrc": "11078:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11078:71:13"
															},
															"nativeSrc": "11078:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11078:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11203:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11203:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11227:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11227:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11212:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:13"
																		},
																		"nativeSrc": "11212:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11159:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11159:43:13"
																},
																"nativeSrc": "11159:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11159:72:13"
															},
															"nativeSrc": "11159:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11159:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11285:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11285:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11298:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11298:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11309:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11309:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11294:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11294:3:13"
																		},
																		"nativeSrc": "11294:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11294:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11241:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11241:43:13"
																},
																"nativeSrc": "11241:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11241:72:13"
															},
															"nativeSrc": "11241:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11241:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10878:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10988:9:13",
														"nodeType": "YulTypedName",
														"src": "10988:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11000:6:13",
														"nodeType": "YulTypedName",
														"src": "11000:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11008:6:13",
														"nodeType": "YulTypedName",
														"src": "11008:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11016:6:13",
														"nodeType": "YulTypedName",
														"src": "11016:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11027:4:13",
														"nodeType": "YulTypedName",
														"src": "11027:4:13",
														"type": ""
													}
												],
												"src": "10878:442:13"
											},
											{
												"body": {
													"nativeSrc": "11354:152:13",
													"nodeType": "YulBlock",
													"src": "11354:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11371:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11371:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11374:77:13",
																		"nodeType": "YulLiteral",
																		"src": "11374:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11364:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11364:6:13"
																},
																"nativeSrc": "11364:88:13",
																"nodeType": "YulFunctionCall",
																"src": "11364:88:13"
															},
															"nativeSrc": "11364:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "11364:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11468:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11468:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11471:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11471:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11461:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11461:6:13"
																},
																"nativeSrc": "11461:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11461:15:13"
															},
															"nativeSrc": "11461:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11461:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11492:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11492:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11495:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11495:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11485:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11485:6:13"
																},
																"nativeSrc": "11485:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11485:15:13"
															},
															"nativeSrc": "11485:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11485:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11326:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11326:180:13"
											},
											{
												"body": {
													"nativeSrc": "11555:190:13",
													"nodeType": "YulBlock",
													"src": "11555:190:13",
													"statements": [
														{
															"nativeSrc": "11565:33:13",
															"nodeType": "YulAssignment",
															"src": "11565:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11592:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11592:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11574:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11574:17:13"
																},
																"nativeSrc": "11574:24:13",
																"nodeType": "YulFunctionCall",
																"src": "11574:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11565:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11565:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11688:22:13",
																"nodeType": "YulBlock",
																"src": "11688:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11690:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11690:16:13"
																			},
																			"nativeSrc": "11690:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11690:18:13"
																		},
																		"nativeSrc": "11690:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11690:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11613:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11613:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11620:66:13",
																		"nodeType": "YulLiteral",
																		"src": "11620:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11610:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11610:2:13"
																},
																"nativeSrc": "11610:77:13",
																"nodeType": "YulFunctionCall",
																"src": "11610:77:13"
															},
															"nativeSrc": "11607:103:13",
															"nodeType": "YulIf",
															"src": "11607:103:13"
														},
														{
															"nativeSrc": "11719:20:13",
															"nodeType": "YulAssignment",
															"src": "11719:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11730:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11730:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11737:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11737:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11726:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11726:3:13"
																},
																"nativeSrc": "11726:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11726:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11719:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11512:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11541:5:13",
														"nodeType": "YulTypedName",
														"src": "11541:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11551:3:13",
														"nodeType": "YulTypedName",
														"src": "11551:3:13",
														"type": ""
													}
												],
												"src": "11512:233:13"
											},
											{
												"body": {
													"nativeSrc": "11865:34:13",
													"nodeType": "YulBlock",
													"src": "11865:34:13",
													"statements": [
														{
															"nativeSrc": "11875:18:13",
															"nodeType": "YulAssignment",
															"src": "11875:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "11890:3:13",
																"nodeType": "YulIdentifier",
																"src": "11890:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11875:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "11875:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11751:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11837:3:13",
														"nodeType": "YulTypedName",
														"src": "11837:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11842:6:13",
														"nodeType": "YulTypedName",
														"src": "11842:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11853:11:13",
														"nodeType": "YulTypedName",
														"src": "11853:11:13",
														"type": ""
													}
												],
												"src": "11751:148:13"
											},
											{
												"body": {
													"nativeSrc": "12015:280:13",
													"nodeType": "YulBlock",
													"src": "12015:280:13",
													"statements": [
														{
															"nativeSrc": "12025:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12025:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12072:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12072:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12039:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "12039:32:13"
																},
																"nativeSrc": "12039:39:13",
																"nodeType": "YulFunctionCall",
																"src": "12039:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12029:6:13",
																	"nodeType": "YulTypedName",
																	"src": "12029:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12087:96:13",
															"nodeType": "YulAssignment",
															"src": "12087:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12171:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12171:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12176:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12176:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12094:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "12094:76:13"
																},
																"nativeSrc": "12094:89:13",
																"nodeType": "YulFunctionCall",
																"src": "12094:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12087:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12231:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12231:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12238:4:13",
																				"nodeType": "YulLiteral",
																				"src": "12238:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12227:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12227:3:13"
																		},
																		"nativeSrc": "12227:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12227:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12245:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12245:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12250:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12250:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12192:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "12192:34:13"
																},
																"nativeSrc": "12192:65:13",
																"nodeType": "YulFunctionCall",
																"src": "12192:65:13"
															},
															"nativeSrc": "12192:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "12192:65:13"
														},
														{
															"nativeSrc": "12266:23:13",
															"nodeType": "YulAssignment",
															"src": "12266:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12277:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12277:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12282:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12282:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12273:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12273:3:13"
																},
																"nativeSrc": "12273:16:13",
																"nodeType": "YulFunctionCall",
																"src": "12273:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12266:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12266:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11905:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11996:5:13",
														"nodeType": "YulTypedName",
														"src": "11996:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12003:3:13",
														"nodeType": "YulTypedName",
														"src": "12003:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12011:3:13",
														"nodeType": "YulTypedName",
														"src": "12011:3:13",
														"type": ""
													}
												],
												"src": "11905:390:13"
											},
											{
												"body": {
													"nativeSrc": "12485:251:13",
													"nodeType": "YulBlock",
													"src": "12485:251:13",
													"statements": [
														{
															"nativeSrc": "12496:102:13",
															"nodeType": "YulAssignment",
															"src": "12496:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12585:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12585:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12594:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12594:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12503:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "12503:81:13"
																},
																"nativeSrc": "12503:95:13",
																"nodeType": "YulFunctionCall",
																"src": "12503:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12496:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:13"
																}
															]
														},
														{
															"nativeSrc": "12608:102:13",
															"nodeType": "YulAssignment",
															"src": "12608:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12697:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12697:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12706:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12706:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12615:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "12615:81:13"
																},
																"nativeSrc": "12615:95:13",
																"nodeType": "YulFunctionCall",
																"src": "12615:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12608:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:13"
																}
															]
														},
														{
															"nativeSrc": "12720:10:13",
															"nodeType": "YulAssignment",
															"src": "12720:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "12727:3:13",
																"nodeType": "YulIdentifier",
																"src": "12727:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12720:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12720:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12301:435:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12456:3:13",
														"nodeType": "YulTypedName",
														"src": "12456:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12462:6:13",
														"nodeType": "YulTypedName",
														"src": "12462:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12470:6:13",
														"nodeType": "YulTypedName",
														"src": "12470:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12481:3:13",
														"nodeType": "YulTypedName",
														"src": "12481:3:13",
														"type": ""
													}
												],
												"src": "12301:435:13"
											},
											{
												"body": {
													"nativeSrc": "12800:40:13",
													"nodeType": "YulBlock",
													"src": "12800:40:13",
													"statements": [
														{
															"nativeSrc": "12811:22:13",
															"nodeType": "YulAssignment",
															"src": "12811:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12827:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12821:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12821:5:13"
																},
																"nativeSrc": "12821:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12821:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12811:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12742:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12783:5:13",
														"nodeType": "YulTypedName",
														"src": "12783:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12793:6:13",
														"nodeType": "YulTypedName",
														"src": "12793:6:13",
														"type": ""
													}
												],
												"src": "12742:98:13"
											},
											{
												"body": {
													"nativeSrc": "12941:73:13",
													"nodeType": "YulBlock",
													"src": "12941:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12958:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12958:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12963:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12963:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12951:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12951:6:13"
																},
																"nativeSrc": "12951:19:13",
																"nodeType": "YulFunctionCall",
																"src": "12951:19:13"
															},
															"nativeSrc": "12951:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "12951:19:13"
														},
														{
															"nativeSrc": "12979:29:13",
															"nodeType": "YulAssignment",
															"src": "12979:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12998:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12998:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13003:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13003:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12994:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12994:3:13"
																},
																"nativeSrc": "12994:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12994:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12979:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "12979:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12846:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12913:3:13",
														"nodeType": "YulTypedName",
														"src": "12913:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12918:6:13",
														"nodeType": "YulTypedName",
														"src": "12918:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12929:11:13",
														"nodeType": "YulTypedName",
														"src": "12929:11:13",
														"type": ""
													}
												],
												"src": "12846:168:13"
											},
											{
												"body": {
													"nativeSrc": "13110:283:13",
													"nodeType": "YulBlock",
													"src": "13110:283:13",
													"statements": [
														{
															"nativeSrc": "13120:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13120:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13166:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13166:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13134:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "13134:31:13"
																},
																"nativeSrc": "13134:38:13",
																"nodeType": "YulFunctionCall",
																"src": "13134:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13124:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13124:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13181:77:13",
															"nodeType": "YulAssignment",
															"src": "13181:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13246:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13246:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13251:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13251:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13188:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "13188:57:13"
																},
																"nativeSrc": "13188:70:13",
																"nodeType": "YulFunctionCall",
																"src": "13188:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13181:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13181:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13306:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13306:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13313:4:13",
																				"nodeType": "YulLiteral",
																				"src": "13313:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13302:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13302:3:13"
																		},
																		"nativeSrc": "13302:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13302:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13320:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13320:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13325:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13325:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13267:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "13267:34:13"
																},
																"nativeSrc": "13267:65:13",
																"nodeType": "YulFunctionCall",
																"src": "13267:65:13"
															},
															"nativeSrc": "13267:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "13267:65:13"
														},
														{
															"nativeSrc": "13341:46:13",
															"nodeType": "YulAssignment",
															"src": "13341:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13352:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13352:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13379:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13379:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "13357:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "13357:21:13"
																		},
																		"nativeSrc": "13357:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13357:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13348:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13348:3:13"
																},
																"nativeSrc": "13348:39:13",
																"nodeType": "YulFunctionCall",
																"src": "13348:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13341:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13341:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "13020:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13091:5:13",
														"nodeType": "YulTypedName",
														"src": "13091:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13098:3:13",
														"nodeType": "YulTypedName",
														"src": "13098:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13106:3:13",
														"nodeType": "YulTypedName",
														"src": "13106:3:13",
														"type": ""
													}
												],
												"src": "13020:373:13"
											},
											{
												"body": {
													"nativeSrc": "13599:440:13",
													"nodeType": "YulBlock",
													"src": "13599:440:13",
													"statements": [
														{
															"nativeSrc": "13609:27:13",
															"nodeType": "YulAssignment",
															"src": "13609:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13621:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13621:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13632:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13632:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13617:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:13"
																},
																"nativeSrc": "13617:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13617:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13609:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13609:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13690:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13690:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13703:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13703:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13714:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13714:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13699:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13699:3:13"
																		},
																		"nativeSrc": "13699:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13699:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13646:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13646:43:13"
																},
																"nativeSrc": "13646:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13646:71:13"
															},
															"nativeSrc": "13646:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13646:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13771:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13771:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13784:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13784:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13795:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13795:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13780:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:13"
																		},
																		"nativeSrc": "13780:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13780:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13727:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13727:43:13"
																},
																"nativeSrc": "13727:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13727:72:13"
															},
															"nativeSrc": "13727:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13727:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13853:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13853:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13866:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13866:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13877:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13877:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13862:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13862:3:13"
																		},
																		"nativeSrc": "13862:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13862:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13809:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13809:43:13"
																},
																"nativeSrc": "13809:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13809:72:13"
															},
															"nativeSrc": "13809:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13809:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13902:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13902:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13913:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13913:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13898:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13898:3:13"
																		},
																		"nativeSrc": "13898:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13898:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13922:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13922:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13928:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13928:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13918:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13918:3:13"
																		},
																		"nativeSrc": "13918:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13918:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13891:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13891:6:13"
																},
																"nativeSrc": "13891:48:13",
																"nodeType": "YulFunctionCall",
																"src": "13891:48:13"
															},
															"nativeSrc": "13891:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "13891:48:13"
														},
														{
															"nativeSrc": "13948:84:13",
															"nodeType": "YulAssignment",
															"src": "13948:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14018:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14018:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14027:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14027:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13956:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "13956:61:13"
																},
																"nativeSrc": "13956:76:13",
																"nodeType": "YulFunctionCall",
																"src": "13956:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13948:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13948:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13399:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13547:9:13",
														"nodeType": "YulTypedName",
														"src": "13547:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13559:6:13",
														"nodeType": "YulTypedName",
														"src": "13559:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13567:6:13",
														"nodeType": "YulTypedName",
														"src": "13567:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13575:6:13",
														"nodeType": "YulTypedName",
														"src": "13575:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13583:6:13",
														"nodeType": "YulTypedName",
														"src": "13583:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13594:4:13",
														"nodeType": "YulTypedName",
														"src": "13594:4:13",
														"type": ""
													}
												],
												"src": "13399:640:13"
											},
											{
												"body": {
													"nativeSrc": "14107:79:13",
													"nodeType": "YulBlock",
													"src": "14107:79:13",
													"statements": [
														{
															"nativeSrc": "14117:22:13",
															"nodeType": "YulAssignment",
															"src": "14117:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14132:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14132:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14126:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14126:5:13"
																},
																"nativeSrc": "14126:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14126:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14117:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14117:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14174:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14174:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "14148:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "14148:25:13"
																},
																"nativeSrc": "14148:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14148:32:13"
															},
															"nativeSrc": "14148:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "14148:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "14045:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14085:6:13",
														"nodeType": "YulTypedName",
														"src": "14085:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14093:3:13",
														"nodeType": "YulTypedName",
														"src": "14093:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14101:5:13",
														"nodeType": "YulTypedName",
														"src": "14101:5:13",
														"type": ""
													}
												],
												"src": "14045:141:13"
											},
											{
												"body": {
													"nativeSrc": "14268:273:13",
													"nodeType": "YulBlock",
													"src": "14268:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14314:83:13",
																"nodeType": "YulBlock",
																"src": "14314:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14316:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "14316:77:13"
																			},
																			"nativeSrc": "14316:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14316:79:13"
																		},
																		"nativeSrc": "14316:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14316:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14289:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14289:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14298:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14298:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14285:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14285:3:13"
																		},
																		"nativeSrc": "14285:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14285:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14310:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14310:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14281:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14281:3:13"
																},
																"nativeSrc": "14281:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14281:32:13"
															},
															"nativeSrc": "14278:119:13",
															"nodeType": "YulIf",
															"src": "14278:119:13"
														},
														{
															"nativeSrc": "14407:127:13",
															"nodeType": "YulBlock",
															"src": "14407:127:13",
															"statements": [
																{
																	"nativeSrc": "14422:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14422:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14436:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14436:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14426:6:13",
																			"nodeType": "YulTypedName",
																			"src": "14426:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14451:73:13",
																	"nodeType": "YulAssignment",
																	"src": "14451:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14496:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "14496:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14507:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "14507:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14492:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14492:3:13"
																				},
																				"nativeSrc": "14492:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14492:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14516:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14516:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "14461:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "14461:30:13"
																		},
																		"nativeSrc": "14461:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14461:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14451:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "14451:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "14192:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14238:9:13",
														"nodeType": "YulTypedName",
														"src": "14238:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14249:7:13",
														"nodeType": "YulTypedName",
														"src": "14249:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14261:6:13",
														"nodeType": "YulTypedName",
														"src": "14261:6:13",
														"type": ""
													}
												],
												"src": "14192:349:13"
											},
											{
												"body": {
													"nativeSrc": "14575:152:13",
													"nodeType": "YulBlock",
													"src": "14575:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14592:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14592:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14595:77:13",
																		"nodeType": "YulLiteral",
																		"src": "14595:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14585:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14585:6:13"
																},
																"nativeSrc": "14585:88:13",
																"nodeType": "YulFunctionCall",
																"src": "14585:88:13"
															},
															"nativeSrc": "14585:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "14585:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14689:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14689:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14692:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14692:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14682:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14682:6:13"
																},
																"nativeSrc": "14682:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14682:15:13"
															},
															"nativeSrc": "14682:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14682:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14713:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14713:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14716:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14716:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14706:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14706:6:13"
																},
																"nativeSrc": "14706:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14706:15:13"
															},
															"nativeSrc": "14706:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14706:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14547:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14547:180:13"
											},
											{
												"body": {
													"nativeSrc": "14859:206:13",
													"nodeType": "YulBlock",
													"src": "14859:206:13",
													"statements": [
														{
															"nativeSrc": "14869:26:13",
															"nodeType": "YulAssignment",
															"src": "14869:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14881:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14881:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14892:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14892:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14877:3:13"
																},
																"nativeSrc": "14877:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14877:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14869:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14869:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14949:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14962:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14962:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14973:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14973:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14958:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14958:3:13"
																		},
																		"nativeSrc": "14958:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14958:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14905:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14905:43:13"
																},
																"nativeSrc": "14905:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14905:71:13"
															},
															"nativeSrc": "14905:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14905:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15030:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15030:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15043:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15043:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15054:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15054:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15039:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15039:3:13"
																		},
																		"nativeSrc": "15039:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15039:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14986:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14986:43:13"
																},
																"nativeSrc": "14986:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14986:72:13"
															},
															"nativeSrc": "14986:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14986:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14733:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14823:9:13",
														"nodeType": "YulTypedName",
														"src": "14823:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14835:6:13",
														"nodeType": "YulTypedName",
														"src": "14835:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14843:6:13",
														"nodeType": "YulTypedName",
														"src": "14843:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14854:4:13",
														"nodeType": "YulTypedName",
														"src": "14854:4:13",
														"type": ""
													}
												],
												"src": "14733:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x376 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x8ADA066E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46C JUMPI POP PUSH2 0x46B DUP3 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x481 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x50C DUP3 PUSH2 0xA39 JUMP JUMPDEST POP PUSH2 0x516 DUP3 PUSH2 0xABF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F DUP3 DUP3 PUSH2 0x52A PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5B6 DUP4 DUP4 PUSH2 0x5B1 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x64C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x83B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65B DUP3 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x66B PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x67D SWAP1 PUSH2 0x1E7E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x692 DUP4 DUP3 PUSH2 0xDA3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x759 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x762 PUSH0 PUSH2 0xDC0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0x830 PUSH2 0xAF8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x846 DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH2 0x852 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFEC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x863 DUP3 PUSH2 0xA39 JUMP JUMPDEST POP PUSH0 PUSH2 0x86D PUSH2 0x119E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x8B6 JUMP JUMPDEST DUP1 PUSH2 0x895 DUP5 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x954 PUSH2 0xD1C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0xDC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA44 DUP4 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB1C DUP5 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5D JUMPI PUSH2 0xB5C DUP2 DUP5 DUP7 PUSH2 0x1476 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE8 JUMPI PUSH2 0xB9C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC67 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD24 PUSH2 0xAF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD42 PUSH2 0x76D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA1 JUMPI PUSH2 0xD65 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xDBC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1539 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1198 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x102F PUSH2 0xAF8 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x108C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x110D JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1105 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1196 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x11C2 DUP5 PUSH2 0x1554 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11DF PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1212 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1273 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x121F JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x12EF JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1421 JUMPI PUSH0 PUSH2 0x12FE DUP5 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1368 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x137B JUMPI POP PUSH2 0x1379 DUP2 DUP5 PUSH2 0x8BE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x13BD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x141F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1481 DUP4 DUP4 DUP4 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x1534 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14F5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152B SWAP3 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1543 DUP4 DUP4 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x154F PUSH0 DUP5 DUP5 DUP5 PUSH2 0xFEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x15B0 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15ED JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x15E3 JUMPI PUSH2 0x15E2 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x161C JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1612 JUMPI PUSH2 0x1611 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1645 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x163B JUMPI PUSH2 0x163A PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x166A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x168D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x169C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x175C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x171D JUMPI POP PUSH2 0x171C DUP5 DUP5 PUSH2 0x8BE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x175B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1743 DUP4 PUSH2 0xABF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x17E1 DUP4 DUP4 PUSH0 PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1853 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189D DUP2 PUSH2 0x1869 JUMP JUMPDEST DUP2 EQ PUSH2 0x18A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B8 DUP2 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E0 DUP5 DUP3 DUP6 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18FD DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1916 PUSH0 DUP4 ADD DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x195E DUP3 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x1968 DUP2 DUP6 PUSH2 0x1926 JUMP JUMPDEST SWAP4 POP PUSH2 0x1978 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x1981 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A4 DUP2 DUP5 PUSH2 0x1954 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BE DUP2 PUSH2 0x19AC JUMP JUMPDEST DUP2 EQ PUSH2 0x19C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D9 DUP2 PUSH2 0x19B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A01 DUP5 DUP3 DUP6 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A33 DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A43 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A86 DUP2 PUSH2 0x1A62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH2 0x1AA1 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAF DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AC0 DUP6 DUP3 DUP7 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AEE DUP7 DUP3 DUP8 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AFF DUP7 DUP3 DUP8 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B10 DUP7 DUP3 DUP8 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2E PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3C DUP5 DUP3 DUP6 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4E DUP2 PUSH2 0x19AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B67 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B76 DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B91 DUP2 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAC PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBA DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BCB DUP6 DUP3 DUP7 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C13 DUP3 PUSH2 0x1944 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C32 JUMPI PUSH2 0x1C31 PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C44 PUSH2 0x1858 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 DUP3 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST PUSH2 0x1C78 DUP3 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA5 PUSH2 0x1CA0 DUP5 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x1BD9 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCC DUP5 DUP3 DUP6 PUSH2 0x1C85 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CF8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH2 0x1D18 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D26 DUP8 DUP3 DUP9 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D37 DUP8 DUP3 DUP9 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D48 DUP8 DUP3 DUP9 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1865 JUMP JUMPDEST JUMPDEST PUSH2 0x1D75 DUP8 DUP3 DUP9 ADD PUSH2 0x1CD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D97 JUMPI PUSH2 0x1D96 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E03 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x1DBF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E2F PUSH0 DUP4 ADD DUP7 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1E3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B45 JUMP JUMPDEST PUSH2 0x1E49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A3A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E88 DUP3 PUSH2 0x19AC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1E51 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED9 DUP3 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x1EE3 DUP2 DUP6 PUSH2 0x1EC5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1936 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0A DUP3 DUP6 PUSH2 0x1ECF JUMP JUMPDEST SWAP2 POP PUSH2 0x1F16 DUP3 DUP5 PUSH2 0x1ECF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F46 DUP3 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1F50 DUP2 DUP6 PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1F60 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x1F69 DUP2 PUSH2 0x1944 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F87 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1F94 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1FA1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B45 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FB3 DUP2 DUP5 PUSH2 0x1F3C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FCC DUP2 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE7 JUMPI PUSH2 0x1FE6 PUSH2 0x1861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x203D PUSH0 DUP4 ADD DUP6 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x204A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 JUMPI 0x2F DUP15 DUP9 LOG1 PUSH18 0xB3197AFC7AA57144D35AC067DAFFE0630C88 SWAP1 SWAP4 LOG0 0xA7 SDIV 0xA5 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "176:463:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:305:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2438:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3429:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4279:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4938:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2251:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:196:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1976:213:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:0;;;:::i;:::-;;548:88:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1693:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2598:95:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3840:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5143:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2764:260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4057:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2626:220:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1607:305:2;1709:4;1761:25;1746:40;;;:11;:40;;;;:105;;;;1818:33;1803:48;;;:11;:48;;;;1746:105;:158;;;;1868:36;1892:11;1868:23;:36::i;:::-;1746:158;1726:178;;1607:305;;;:::o;2438:91::-;2483:13;2516:5;2509:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:91;:::o;3610:158::-;3677:7;3697:22;3711:7;3697:13;:22::i;:::-;;3739:21;3752:7;3739:12;:21::i;:::-;3732:28;;3610:158;;;:::o;3429:115::-;3501:35;3510:2;3514:7;3523:12;:10;:12::i;:::-;3501:8;:35::i;:::-;3429:115;;:::o;4279:588::-;4388:1;4374:16;;:2;:16;;;4370:89;;4444:1;4414:33;;;;;;;;;;;:::i;:::-;;;;;;;;4370:89;4680:21;4704:34;4712:2;4716:7;4725:12;:10;:12::i;:::-;4704:7;:34::i;:::-;4680:58;;4770:4;4753:21;;:13;:21;;;4749:111;;4819:4;4825:7;4834:13;4798:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4749:111;4359:508;4279:588;;;:::o;4938:134::-;5025:39;5042:4;5048:2;5052:7;5025:39;;;;;;;;;;;;:16;:39::i;:::-;4938:134;;;:::o;2251:120::-;2314:7;2341:22;2355:7;2341:13;:22::i;:::-;2334:29;;2251:120;;;:::o;344:196:12:-;396:7;1579:13:0;:11;:13::i;:::-;416:9:12::1;;:11;;;;;;;;;:::i;:::-;;;;;;438:18;459:9;;438:30;;479:25;489:2;493:10;479:9;:25::i;:::-;522:10;515:17;;;344:196:::0;;;:::o;1976:213:2:-;2039:7;2080:1;2063:19;;:5;:19;;;2059:89;;2133:1;2106:30;;;;;;;;;;;:::i;:::-;;;;;;;;2059:89;2165:9;:16;2175:5;2165:16;;;;;;;;;;;;;;;;2158:23;;1976:213;;;:::o;2368:103:0:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;548:88:12:-;593:7;619:9;;612:16;;548:88;:::o;1693:87:0:-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;2598:95:2:-;2645:13;2678:7;2671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:95;:::o;3840:146::-;3926:52;3945:12;:10;:12::i;:::-;3959:8;3969;3926:18;:52::i;:::-;3840:146;;:::o;5143:211::-;5257:31;5270:4;5276:2;5280:7;5257:12;:31::i;:::-;5299:47;5322:4;5328:2;5332:7;5341:4;5299:22;:47::i;:::-;5143:211;;;;:::o;2764:260::-;2828:13;2854:22;2868:7;2854:13;:22::i;:::-;;2889:21;2913:10;:8;:10::i;:::-;2889:34;;2965:1;2947:7;2941:21;:25;:75;;;;;;;;;;;;;;;;;2983:7;2992:18;:7;:16;:18::i;:::-;2969:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2941:75;2934:82;;;2764:260;;;:::o;4057:155::-;4145:4;4169:18;:25;4188:5;4169:25;;;;;;;;;;;;;;;:35;4195:8;4169:35;;;;;;;;;;;;;;;;;;;;;;;;;4162:42;;4057:155;;;;:::o;2626:220:0:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;785:148:8:-;861:4;900:25;885:40;;;:11;:40;;;;878:47;;785:148;;;:::o;16585:247:2:-;16648:7;16668:13;16684:17;16693:7;16684:8;:17::i;:::-;16668:33;;16733:1;16716:19;;:5;:19;;;16712:90;;16782:7;16759:31;;;;;;;;;;;:::i;:::-;;;;;;;;16712:90;16819:5;16812:12;;;16585:247;;;:::o;6116:129::-;6186:7;6213:15;:24;6229:7;6213:24;;;;;;;;;;;;;;;;;;;;;6206:31;;6116:129;;;:::o;672:98:6:-;725:7;752:10;745:17;;672:98;:::o;14817:122:2:-;14898:33;14907:2;14911:7;14920:4;14926;14898:8;:33::i;:::-;14817:122;;;:::o;9078:824::-;9164:7;9184:12;9199:17;9208:7;9199:8;:17::i;:::-;9184:32;;9295:1;9279:18;;:4;:18;;;9275:88;;9314:37;9331:4;9337;9343:7;9314:16;:37::i;:::-;9275:88;9426:1;9410:18;;:4;:18;;;9406:263;;9528:48;9545:1;9549:7;9566:1;9570:5;9528:8;:48::i;:::-;9641:1;9622:9;:15;9632:4;9622:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9406:263;9699:1;9685:16;;:2;:16;;;9681:111;;9764:1;9747:9;:13;9757:2;9747:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9681:111;9823:2;9804:7;:16;9812:7;9804:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9862:7;9858:2;9843:27;;9852:4;9843:27;;;;;;;;;;;;9890:4;9883:11;;;9078:824;;;;;:::o;1858:166:0:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;10936:102:2:-;11004:26;11014:2;11018:7;11004:26;;;;;;;;;;;;:9;:26::i;:::-;10936:102;;:::o;3006:191:0:-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;16024:318:2:-;16152:1;16132:22;;:8;:22;;;16128:93;;16200:8;16178:31;;;;;;;;;;;:::i;:::-;;;;;;;;16128:93;16269:8;16231:18;:25;16250:5;16231:25;;;;;;;;;;;;;;;:35;16257:8;16231:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;16315:8;16293:41;;16308:5;16293:41;;;16325:8;16293:41;;;;;;:::i;:::-;;;;;;;;16024:318;;;:::o;17382:799::-;17516:1;17499:2;:14;;;:18;17495:679;;;17554:2;17538:36;;;17575:12;:10;:12::i;:::-;17589:4;17595:7;17604:4;17538:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17534:629;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17869:1;17852:6;:13;:18;17848:300;;17924:2;17902:25;;;;;;;;;;;:::i;:::-;;;;;;;;17848:300;18098:6;18092:13;18083:6;18079:2;18075:15;18068:38;17534:629;17667:41;;;17657:51;;;:6;:51;;;;17653:132;;17762:2;17740:25;;;;;;;;;;;:::i;:::-;;;;;;;;17653:132;17610:190;17495:679;17382:799;;;;:::o;3273:94::-;3324:13;3350:9;;;;;;;;;;;;;;3273:94;:::o;660:718:7:-;716:13;767:14;804:1;784:17;795:5;784:10;:17::i;:::-;:21;767:38;;820:20;854:6;843:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:41;;876:11;1005:6;1001:2;997:15;989:6;985:28;978:35;;1042:290;1049:4;1042:290;;;1074:5;;;;;;;;1216:10;1211:2;1204:5;1200:14;1195:32;1190:3;1182:46;1274:2;1265:11;;;;;;:::i;:::-;;;;;1308:1;1299:5;:10;1042:290;1295:21;1042:290;1353:6;1346:13;;;;;660:718;;;:::o;5878:117:2:-;5944:7;5971;:16;5979:7;5971:16;;;;;;;;;;;;;;;;;;;;;5964:23;;5878:117;;;:::o;15127:678::-;15289:9;:31;;;;15318:1;15302:18;;:4;:18;;;;15289:31;15285:471;;;15337:13;15353:22;15367:7;15353:13;:22::i;:::-;15337:38;;15522:1;15506:18;;:4;:18;;;;:35;;;;;15537:4;15528:13;;:5;:13;;;;15506:35;:69;;;;;15546:29;15563:5;15570:4;15546:16;:29::i;:::-;15545:30;15506:69;15502:144;;;15625:4;15603:27;;;;;;;;;;;:::i;:::-;;;;;;;;15502:144;15666:9;15662:83;;;15721:7;15717:2;15701:28;;15710:5;15701:28;;;;;;;;;;;;15662:83;15322:434;15285:471;15795:2;15768:15;:24;15784:7;15768:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15127:678;;;;:::o;7285:376::-;7398:38;7412:5;7419:7;7428;7398:13;:38::i;:::-;7393:261;;7474:1;7457:19;;:5;:19;;;7453:190;;7527:7;7504:31;;;;;;;;;;;:::i;:::-;;;;;;;;7453:190;7610:7;7619;7583:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7393:261;7285:376;;;:::o;11265:185::-;11360:18;11366:2;11370:7;11360:5;:18::i;:::-;11389:53;11420:1;11424:2;11428:7;11437:4;11389:22;:53::i;:::-;11265:185;;;:::o;12534:948:10:-;12587:7;12607:14;12624:1;12607:18;;12674:8;12665:5;:17;12661:106;;12712:8;12703:17;;;;;;:::i;:::-;;;;;12749:2;12739:12;;;;12661:106;12794:8;12785:5;:17;12781:106;;12832:8;12823:17;;;;;;:::i;:::-;;;;;12869:2;12859:12;;;;12781:106;12914:8;12905:5;:17;12901:106;;12952:8;12943:17;;;;;;:::i;:::-;;;;;12989:2;12979:12;;;;12901:106;13034:7;13025:5;:16;13021:103;;13071:7;13062:16;;;;;;:::i;:::-;;;;;13107:1;13097:11;;;;13021:103;13151:7;13142:5;:16;13138:103;;13188:7;13179:16;;;;;;:::i;:::-;;;;;13224:1;13214:11;;;;13138:103;13268:7;13259:5;:16;13255:103;;13305:7;13296:16;;;;;;:::i;:::-;;;;;13341:1;13331:11;;;;13255:103;13385:7;13376:5;:16;13372:68;;13423:1;13413:11;;;;13372:68;13468:6;13461:13;;;12534:948;;;:::o;6565:276:2:-;6668:4;6724:1;6705:21;;:7;:21;;;;:128;;;;;6753:7;6744:16;;:5;:16;;;:52;;;;6764:32;6781:5;6788:7;6764:16;:32::i;:::-;6744:52;:88;;;;6825:7;6800:32;;:21;6813:7;6800:12;:21::i;:::-;:32;;;6744:88;6705:128;6685:148;;6565:276;;;;;:::o;10238:335::-;10320:1;10306:16;;:2;:16;;;10302:89;;10376:1;10346:33;;;;;;;;;;;:::i;:::-;;;;;;;;10302:89;10401:21;10425:32;10433:2;10437:7;10454:1;10425:7;:32::i;:::-;10401:56;;10497:1;10472:27;;:13;:27;;;10468:98;;10551:1;10523:31;;;;;;;;;;;:::i;:::-;;;;;;;;10468:98;10291:282;10238:335;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:442::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:71;11146:1;11135:9;11131:17;11122:6;11078:71;:::i;:::-;11159:72;11227:2;11216:9;11212:18;11203:6;11159:72;:::i;:::-;11241;11309:2;11298:9;11294:18;11285:6;11241:72;:::i;:::-;10878:442;;;;;;:::o;11326:180::-;11374:77;11371:1;11364:88;11471:4;11468:1;11461:15;11495:4;11492:1;11485:15;11512:233;11551:3;11574:24;11592:5;11574:24;:::i;:::-;11565:33;;11620:66;11613:5;11610:77;11607:103;;11690:18;;:::i;:::-;11607:103;11737:1;11730:5;11726:13;11719:20;;11512:233;;;:::o;11751:148::-;11853:11;11890:3;11875:18;;11751:148;;;;:::o;11905:390::-;12011:3;12039:39;12072:5;12039:39;:::i;:::-;12094:89;12176:6;12171:3;12094:89;:::i;:::-;12087:96;;12192:65;12250:6;12245:3;12238:4;12231:5;12227:16;12192:65;:::i;:::-;12282:6;12277:3;12273:16;12266:23;;12015:280;11905:390;;;;:::o;12301:435::-;12481:3;12503:95;12594:3;12585:6;12503:95;:::i;:::-;12496:102;;12615:95;12706:3;12697:6;12615:95;:::i;:::-;12608:102;;12727:3;12720:10;;12301:435;;;;;:::o;12742:98::-;12793:6;12827:5;12821:12;12811:22;;12742:98;;;:::o;12846:168::-;12929:11;12963:6;12958:3;12951:19;13003:4;12998:3;12994:14;12979:29;;12846:168;;;;:::o;13020:373::-;13106:3;13134:38;13166:5;13134:38;:::i;:::-;13188:70;13251:6;13246:3;13188:70;:::i;:::-;13181:77;;13267:65;13325:6;13320:3;13313:4;13306:5;13302:16;13267:65;:::i;:::-;13357:29;13379:6;13357:29;:::i;:::-;13352:3;13348:39;13341:46;;13110:283;13020:373;;;;:::o;13399:640::-;13594:4;13632:3;13621:9;13617:19;13609:27;;13646:71;13714:1;13703:9;13699:17;13690:6;13646:71;:::i;:::-;13727:72;13795:2;13784:9;13780:18;13771:6;13727:72;:::i;:::-;13809;13877:2;13866:9;13862:18;13853:6;13809:72;:::i;:::-;13928:9;13922:4;13918:20;13913:2;13902:9;13898:18;13891:48;13956:76;14027:4;14018:6;13956:76;:::i;:::-;13948:84;;13399:640;;;;;;;:::o;14045:141::-;14101:5;14132:6;14126:13;14117:22;;14148:32;14174:5;14148:32;:::i;:::-;14045:141;;;;:::o;14192:349::-;14261:6;14310:2;14298:9;14289:7;14285:23;14281:32;14278:119;;;14316:79;;:::i;:::-;14278:119;14436:1;14461:63;14516:7;14507:6;14496:9;14492:22;14461:63;:::i;:::-;14451:73;;14407:127;14192:349;;;;:::o;14547:180::-;14595:77;14592:1;14585:88;14692:4;14689:1;14682:15;14716:4;14713:1;14706:15;14733:332;14854:4;14892:2;14881:9;14877:18;14869:26;;14905:71;14973:1;14962:9;14958:17;14949:6;14905:71;:::i;:::-;14986:72;15054:2;15043:9;15039:18;15030:6;14986:72;:::i;:::-;14733:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1665400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getCounter()": "2477",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 336,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 336,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 336,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 249,
									"end": 336,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 292,
									"end": 302,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "464C580000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 2,
									"value": "464C580000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1494,
									"end": 1499,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1486,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1527,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1517,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1510,
									"end": 1527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1390,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1361,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1262,
									"end": 1454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 324,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 315,
									"end": 328,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 315,
									"end": 328,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 315,
									"end": 328,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 315,
									"end": 328,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3096,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3125,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 176,
									"end": 639,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 176,
									"end": 639,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 639,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082572f8e88a171b3197afc7aa57144d35ac067daffe0630c889093a0a705a53e64736f6c634300081a0033",
									".code": [
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "8ADA066E"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "6A627842"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 176,
											"end": 639,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 344,
											"end": 540,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 344,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 344,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 344,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 636,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 548,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 548,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1892,
											"end": 1903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1868,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3697,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3752,
											"end": 3759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3523,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3501,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4414,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4725,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4725,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4704,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4798,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5025,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2341,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 344,
											"end": 540,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 344,
											"end": 540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 416,
											"end": 427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 416,
											"end": 427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 438,
											"end": 456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 459,
											"end": 468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 438,
											"end": 468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 438,
											"end": 468,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 479,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 489,
											"end": 491,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 493,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 479,
											"end": 488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 479,
											"end": 504,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 479,
											"end": 504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 479,
											"end": 504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 522,
											"end": 532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 515,
											"end": 532,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 515,
											"end": 532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 515,
											"end": 532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 344,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2106,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2460,
											"end": 2461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2433,
											"end": 2463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 636,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 548,
											"end": 636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 628,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 619,
											"end": 628,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 612,
											"end": 628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 612,
											"end": 628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 548,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3945,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3945,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 3967,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5257,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5299,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2913,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2966,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2992,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2969,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2731,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2757,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2829,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2810,
											"end": 2838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 933,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 785,
											"end": 933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 885,
											"end": 896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 885,
											"end": 925,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 878,
											"end": 925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16648,
											"end": 16655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16668,
											"end": 16681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16693,
											"end": 16700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16684,
											"end": 16701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 16734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16716,
											"end": 16721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16782,
											"end": 16789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16819,
											"end": 16824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16585,
											"end": 16832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6236,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14911,
											"end": 14918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14926,
											"end": 14930,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14898,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 14898,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14817,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9208,
											"end": 9215,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9199,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9314,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9528,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9862,
											"end": 9869,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1929,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1929,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1918,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1992,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1965,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 11004,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 11038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16140,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16200,
											"end": 16208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 16178,
											"end": 16209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16269,
											"end": 16277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16249,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16250,
											"end": 16255,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16315,
											"end": 16323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16308,
											"end": 16313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 16325,
											"end": 16333,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 16293,
											"end": 16334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17554,
											"end": 17556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 17575,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 17575,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17589,
											"end": 17593,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17595,
											"end": 17602,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17604,
											"end": 17608,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17869,
											"end": 17870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17852,
											"end": 17858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17852,
											"end": 17865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17852,
											"end": 17870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17924,
											"end": 17926,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 17902,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18098,
											"end": 18104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18092,
											"end": 18105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18083,
											"end": 18089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18079,
											"end": 18081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18075,
											"end": 18090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18106,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17762,
											"end": 17764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 17740,
											"end": 17765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17610,
											"end": 17800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17382,
											"end": 18181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3337,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 716,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 784,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 784,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 801,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 784,
											"end": 805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 767,
											"end": 805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 767,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 843,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 876,
											"end": 887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1053,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1265,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15318,
											"end": 15319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 15367,
											"end": 15374,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15353,
											"end": 15366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 15353,
											"end": 15375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15510,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 15563,
											"end": 15568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15570,
											"end": 15574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 15546,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15545,
											"end": 15575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15625,
											"end": 15629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 15603,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15666,
											"end": 15675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15721,
											"end": 15728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15710,
											"end": 15715,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15322,
											"end": 15756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15795,
											"end": 15797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15783,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15784,
											"end": 15791,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15127,
											"end": 15805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7398,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7504,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7610,
											"end": 7617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7583,
											"end": 7627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11370,
											"end": 11377,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11360,
											"end": 11378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11426,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11428,
											"end": 11435,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11437,
											"end": 11441,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11389,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 11389,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11265,
											"end": 11450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12682,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12665,
											"end": 12670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12665,
											"end": 12682,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12712,
											"end": 12720,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12703,
											"end": 12720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12751,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12802,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12785,
											"end": 12790,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12785,
											"end": 12802,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12840,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12823,
											"end": 12840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12869,
											"end": 12871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12914,
											"end": 12922,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12905,
											"end": 12910,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12960,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12943,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 12991,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13034,
											"end": 13041,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 13025,
											"end": 13030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13041,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13062,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13107,
											"end": 13108,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13151,
											"end": 13158,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 13142,
											"end": 13147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13158,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13179,
											"end": 13195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13268,
											"end": 13275,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13259,
											"end": 13264,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13275,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13312,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13296,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13342,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13376,
											"end": 13392,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13468,
											"end": 13474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12534,
											"end": 13482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6781,
											"end": 6786,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6764,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6825,
											"end": 6832,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6813,
											"end": 6820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6800,
											"end": 6821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10306,
											"end": 10308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10346,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 10425,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10472,
											"end": 10485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10523,
											"end": 10554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10291,
											"end": 10573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11027,
											"end": 11031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11067,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11054,
											"end": 11063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11131,
											"end": 11148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 11078,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 11159,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 11309,
											"end": 11311,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11307,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 11241,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10878,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11506,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 11326,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11451,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11364,
											"end": 11452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11461,
											"end": 11476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11499,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11492,
											"end": 11493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11500,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11551,
											"end": 11554,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 11592,
											"end": 11597,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 11574,
											"end": 11598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11565,
											"end": 11598,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11565,
											"end": 11598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11620,
											"end": 11686,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11613,
											"end": 11618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11610,
											"end": 11687,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 11690,
											"end": 11708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 11738,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11730,
											"end": 11735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11726,
											"end": 11739,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11853,
											"end": 11864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11875,
											"end": 11893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11875,
											"end": 11893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12011,
											"end": 12014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 12039,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12171,
											"end": 12174,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 12094,
											"end": 12183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12087,
											"end": 12183,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12087,
											"end": 12183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 12250,
											"end": 12256,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12245,
											"end": 12248,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12238,
											"end": 12242,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12231,
											"end": 12236,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12227,
											"end": 12243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 12192,
											"end": 12257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12282,
											"end": 12288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12280,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12273,
											"end": 12289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12266,
											"end": 12289,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12266,
											"end": 12289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 12295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12481,
											"end": 12484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 12594,
											"end": 12597,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12591,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 12503,
											"end": 12598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12598,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 12706,
											"end": 12709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12697,
											"end": 12703,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 12615,
											"end": 12710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12710,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12730,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12793,
											"end": 12799,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12821,
											"end": 12833,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12811,
											"end": 12833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12811,
											"end": 12833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12929,
											"end": 12940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12969,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12958,
											"end": 12961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12951,
											"end": 12970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13001,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12994,
											"end": 13008,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 13008,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 13008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 13014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13106,
											"end": 13109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 13166,
											"end": 13171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 13134,
											"end": 13172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 13251,
											"end": 13257,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13246,
											"end": 13249,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13188,
											"end": 13258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13181,
											"end": 13258,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13181,
											"end": 13258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 13325,
											"end": 13331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13320,
											"end": 13323,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13311,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 13267,
											"end": 13332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 13379,
											"end": 13385,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 13357,
											"end": 13386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13352,
											"end": 13355,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13387,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13594,
											"end": 13598,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13635,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13617,
											"end": 13636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13609,
											"end": 13636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13609,
											"end": 13636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 13714,
											"end": 13715,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13703,
											"end": 13712,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13699,
											"end": 13716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13690,
											"end": 13696,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 13646,
											"end": 13717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 13795,
											"end": 13797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13784,
											"end": 13793,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 13777,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 13727,
											"end": 13799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 13877,
											"end": 13879,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13866,
											"end": 13875,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13862,
											"end": 13880,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13853,
											"end": 13859,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 13809,
											"end": 13881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13928,
											"end": 13937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 13926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13918,
											"end": 13938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13913,
											"end": 13915,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13902,
											"end": 13911,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13891,
											"end": 13939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 14027,
											"end": 14031,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14024,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 13956,
											"end": 14032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13948,
											"end": 14032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13948,
											"end": 14032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14101,
											"end": 14106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14132,
											"end": 14138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14126,
											"end": 14139,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14117,
											"end": 14139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14117,
											"end": 14139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14174,
											"end": 14179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 14148,
											"end": 14180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14261,
											"end": 14267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14312,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14298,
											"end": 14307,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14289,
											"end": 14296,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14285,
											"end": 14308,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14281,
											"end": 14313,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 14316,
											"end": 14395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 14516,
											"end": 14523,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14507,
											"end": 14513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14505,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 14461,
											"end": 14524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14451,
											"end": 14524,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14451,
											"end": 14524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14547,
											"end": 14727,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 14547,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14672,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14592,
											"end": 14593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14585,
											"end": 14673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14692,
											"end": 14696,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 14689,
											"end": 14690,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14716,
											"end": 14720,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14713,
											"end": 14714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14721,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14854,
											"end": 14858,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14894,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14881,
											"end": 14890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14877,
											"end": 14895,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14869,
											"end": 14895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14869,
											"end": 14895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 14973,
											"end": 14974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14962,
											"end": 14971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 14975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14949,
											"end": 14955,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 14905,
											"end": 14976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 15054,
											"end": 15056,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15043,
											"end": 15052,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15030,
											"end": 15036,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 14986,
											"end": 15058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 15065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/FLX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getCounter()": "8ada066e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FLX.sol\":\"FLX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]},\"src/FLX.sol\":{\"keccak256\":\"0x46ec90036679b6337239813cd3ece0e29fd6ba9b42569230ddfbe36cc536ce51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9039ede5c965bea114c537604dc3a87c3fa9f61ff290635401f312d6d76981ec\",\"dweb:/ipfs/QmUbvoknDMhygqixDLKX6G2MgtB2uW4gt46YcshomAX91x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "src/FLX.sol:FLX",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "src/FLX.sol:FLX",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "src/FLX.sol:FLX",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "src/FLX.sol:FLX",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "src/FLX.sol:FLX",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "src/FLX.sol:FLX",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "src/FLX.sol:FLX",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2946,
								"contract": "src/FLX.sol:FLX",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1487,
							"src": "133:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "141:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"711:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "711:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "711:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "182:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1486
							],
							"name": "Ownable",
							"nameLocation": "700:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "742:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "726:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "757:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "856:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:17:0"
									},
									"src": "850:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "908:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1004:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:15:0"
									},
									"src": "998:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1053:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1090:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1074:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1121:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1105:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:57:0"
									},
									"src": "1047:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1296:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1311:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1327:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1327:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1307:97:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1339:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1389:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1381:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1381:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1381:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1361:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1354:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1433:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1414:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1414:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1139:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1282:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1274:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:0"
									},
									"scope": 147,
									"src": "1262:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1568:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1579:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1579:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1603:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1462:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1556:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:0"
									},
									"src": "1547:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1748:32:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1759:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1620:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1702:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:0"
									},
									"scope": 147,
									"src": "1693:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1903:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1918:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1918:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1929:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1929:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1918:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1914:103:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1943:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1992:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1992:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1965:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1965:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1958:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1788:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1867:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:0"
									},
									"scope": 147,
									"src": "1858:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2422:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2452:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2452:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2433:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2433:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2032:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2412:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2412:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2412:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2377:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:0:0"
									},
									"scope": 147,
									"src": "2368:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2696:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2723:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2711:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2707:93:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2735:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2777:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2777:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2777:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2757:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2757:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2750:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2810:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2810:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2479:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2686:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2686:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2635:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:0"
									},
									"scope": 147,
									"src": "2626:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3069:128:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3088:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "3080:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3080:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3080:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3116:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3116:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3116:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3180:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3149:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3144:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2854:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3015:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3069:0:0"
									},
									"scope": 147,
									"src": "3006:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "682:2518:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "105:3097:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "667:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "700:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:1"
									},
									"src": "636:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "910:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:1"
									},
									"src": "885:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1129:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:1"
									},
									"src": "1102:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1544:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1561:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1580:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:1"
									},
									"src": "1511:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1814:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:1"
									},
									"src": "1787:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2070:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:1"
									},
									"src": "2044:43:1"
								}
							],
							"scope": 285,
							"src": "286:1804:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2525:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:1"
									},
									"src": "2500:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2718:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:1"
									},
									"src": "2689:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3070:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3086:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:1"
									},
									"src": "3043:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3313:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:1"
									},
									"src": "3287:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3533:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:1"
									},
									"src": "3505:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3849:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:1"
									},
									"src": "3816:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4103:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:1"
									},
									"src": "4075:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4363:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:1"
									},
									"src": "4335:46:1"
								}
							],
							"scope": 285,
							"src": "2240:2144:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4974:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4990:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5007:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:1"
									},
									"src": "4941:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5236:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:1"
									},
									"src": "5209:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5457:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:1"
									},
									"src": "5428:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5784:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5802:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:1"
									},
									"src": "5749:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "6037:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:1"
									},
									"src": "6008:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:1"
									},
									"src": "6269:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6647:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6666:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:1"
									},
									"src": "6615:73:1"
								}
							],
							"scope": 285,
							"src": "4536:2155:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1741
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "138:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "146:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "178:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "186:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1457,
							"src": "234:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "242:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1487,
							"src": "301:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "309:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1742,
							"src": "351:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1741,
										"src": "359:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1766,
							"src": "401:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "409:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1765,
										"src": "418:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "472:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "480:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"822:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "822:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1765,
										"src": "831:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "831:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"839:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "839:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "839:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"848:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "848:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"865:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "865:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "865:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:250:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "ERC721",
							"nameLocation": "812:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"892:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1741,
										"src": "892:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "886:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "954:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "939:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1004:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "989:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1064:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1020:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1036:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1028:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1020:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1122:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1080:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1096:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1184:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1140:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1156:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1276:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1208:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1224:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1249:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1233:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1475:60:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1486:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1494:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1486:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1486:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1510:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1520:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1510:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1510:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1303:110:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1445:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1431:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1431:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1466:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1452:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1452:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:2"
									},
									"scope": 1293,
									"src": "1419:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1764,
										1776
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1715:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1746:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1766:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1761:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1775:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1761:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1746:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1803:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1823:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1818:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1456",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1840:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1818:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1803:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1746:105:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1892:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1868:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "1868:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1746:158:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1726:178:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1543:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1616:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1683:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1765,
												"src": "1683:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1691:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1777,
												"src": "1691:7:2"
											}
										],
										"src": "1674:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1641:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1634:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1709:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:2"
									},
									"scope": 1293,
									"src": "1607:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2048:141:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2063:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2063:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2059:89:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2084:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2133:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2125:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2125:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2106:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2099:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2165:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2175:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2165:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2158:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1920:50:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1985:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2003:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1995:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2039:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:9:2"
									},
									"scope": 1293,
									"src": "1976:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2323:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2355:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2341:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2334:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2197:48:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2260:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2276:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2268:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2314:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:2"
									},
									"scope": 1293,
									"src": "2251:120:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2498:31:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2516:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2509:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2379:53:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2447:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2483:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2483:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:2"
									},
									"scope": 1293,
									"src": "2438:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2660:33:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2671:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2537:55:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2607:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2645:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2645:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:15:2"
									},
									"scope": 1293,
									"src": "2598:95:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2843:181:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2868:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2854:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2854:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2903:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2889:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2889:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2913:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2947:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2956:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2941:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2941:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2941:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2983:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2992:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3000:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1554,
																	"src": "2992:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2969:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2934:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2701:57:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2773:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2790:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2782:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2828:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:15:2"
									},
									"scope": 1293,
									"src": "2764:260:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3339:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3357:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3350:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3032:235:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3282:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3324:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3324:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:2"
									},
									"scope": 1293,
									"src": "3273:94:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3490:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3510:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3523:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3501:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3501:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3375:48:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3438:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3454:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3446:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3466:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3458:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:2"
									},
									"scope": 1293,
									"src": "3429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3686:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3711:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3697:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3697:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3752:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3739:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3732:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3552:52:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3677:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:9:2"
									},
									"scope": 1293,
									"src": "3610:158:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3915:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3945:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3959:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3969:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3776:58:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3849:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3875:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3867:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3890:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3885:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3885:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3915:0:2"
									},
									"scope": 1293,
									"src": "3840:146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4151:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4169:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4188:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4169:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4195:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4169:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4162:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3994:57:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4066:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4091:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4083:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4098:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:2"
									},
									"scope": 1293,
									"src": "4057:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4359:508:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4374:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4388:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4380:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4380:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4380:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4374:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4370:89:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4392:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4444:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4436:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4436:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4436:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4414:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4407:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4688:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4680:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4680:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4712:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4725:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4725:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4704:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4753:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4770:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4753:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4749:111:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4776:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4819:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4825:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4834:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4798:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4791:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4220:53:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4288:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4309:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4301:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4323:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4315:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:2"
									},
									"scope": 1293,
									"src": "4279:588:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "5014:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5042:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "5048:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5052:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "5025:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5025:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4875:57:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4947:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4972:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4964:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4986:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4978:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4998:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4990:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5014:0:2"
									},
									"scope": 1293,
									"src": "4938:134:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5246:108:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5270:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5276:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5280:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5257:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5257:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5322:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5328:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5332:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5341:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5299:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5299:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "5080:57:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5152:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5191:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5183:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5225:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5212:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5212:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:2"
									},
									"scope": 1293,
									"src": "5143:211:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5953:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5979:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5971:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5964:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5362:510:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5887:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5904:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5896:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5944:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:2"
									},
									"scope": 1293,
									"src": "5878:117:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6195:50:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6213:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6213:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6206:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "6003:107:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6125:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6146:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6138:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6186:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:9:2"
									},
									"scope": 1293,
									"src": "6116:129:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6674:167:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6705:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6705:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6744:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6753:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6744:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6781:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6788:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6764:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6764:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6744:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6813:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6800:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6800:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6825:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6800:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6744:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6743:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6705:128:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6685:148:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6253:306:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6574:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6588:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6611:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6603:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6628:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6620:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 1293,
									"src": "6565:276:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7382:279:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7397:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7412:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7419:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7398:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7398:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7393:261:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7438:216:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7457:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7474:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7466:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7466:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7466:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7457:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7557:86:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7610:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7619:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7583:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7583:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7576:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7453:190:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7478:73:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7527:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7504:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7497:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6849:430:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7294:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7319:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7311:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7351:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7343:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:0:2"
									},
									"scope": 1293,
									"src": "7285:376:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8390:82:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8401:64:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8426:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8436:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8426:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8448:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8426:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8426:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7669:640:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8324:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8349:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8341:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8358:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:2"
									},
									"scope": 1293,
									"src": "8315:157:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "9173:729:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9192:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "9184:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "9199:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9279:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9295:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9287:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9287:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9287:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9279:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9275:88:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9299:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9331:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9337:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9343:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9314:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9314:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9314:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9410:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9426:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9418:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9410:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9406:263:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9430:239:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9545:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9537:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9537:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9537:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9549:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9566:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9558:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9558:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9558:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9570:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9528:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9528:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9528:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9593:65:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9622:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9632:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9622:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9641:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9622:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9622:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9685:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9699:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9691:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9691:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9685:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9681:111:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9703:89:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9718:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9747:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9757:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9747:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9764:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9747:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9747:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9804:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9812:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9804:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9823:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9804:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9804:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9852:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9858:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9862:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9843:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9843:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9838:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9890:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9883:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8480:592:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9087:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9103:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9095:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9115:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9107:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9132:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "9164:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:9:2"
									},
									"scope": 1293,
									"src": "9078:824:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10291:282:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10306:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10320:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10312:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10312:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10312:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10306:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10302:89:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10324:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10376:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10368:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10368:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10368:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10346:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10346:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10339:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10409:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10401:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10401:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10433:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10437:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10446:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10425:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10472:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10497:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10489:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10489:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10489:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10472:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10468:98:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10501:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10543:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10543:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10543:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10523:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10523:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10516:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9910:322:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10247:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10261:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "10253:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10273:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "10265:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:2"
									},
									"scope": 1293,
									"src": "10238:335:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10993:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "11014:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "11018:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "11004:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "11004:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10581:349:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10945:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10963:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10955:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10955:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10975:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10967:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10954:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10993:0:2"
									},
									"scope": 1293,
									"src": "10936:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11349:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11366:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11370:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11360:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11360:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11360:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11420:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11412:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11412:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11412:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11424:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11428:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11437:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11389:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11389:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11389:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "11046:213:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11274:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11292:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11284:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11304:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11296:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11326:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11313:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:0:2"
									},
									"scope": 1293,
									"src": "11265:185:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11830:191:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11849:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11841:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11841:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11881:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11873:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11873:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11873:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11885:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11865:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11841:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11920:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11945:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11937:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11937:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11937:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11920:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11916:98:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11949:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11994:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11971:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11971:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11964:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11458:325:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11798:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11812:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11804:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11803:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11830:0:2"
									},
									"scope": 1293,
									"src": "11789:232:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12429:399:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12444:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12458:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12450:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12450:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12450:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12444:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12440:89:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12462:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12484:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12477:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12547:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12539:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12539:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12571:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12575:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12584:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12584:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12584:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12563:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12563:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12635:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12627:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12627:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12627:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12610:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12714:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12731:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12714:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12710:111:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12737:84:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12780:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12786:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12795:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12759:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12759:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12752:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12606:215:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12639:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12661:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12661:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12654:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "12029:323:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12367:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12385:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12377:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12399:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12391:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12411:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12403:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12403:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12376:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12429:0:2"
									},
									"scope": 1293,
									"src": "12358:470:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13857:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13882:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13888:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13892:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13901:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13868:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13868:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13868:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12836:940:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13791:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13805:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13827:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13819:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13839:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13831:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13804:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13857:0:2"
									},
									"scope": 1293,
									"src": "13782:130:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "14257:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "14278:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "14284:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "14288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "14268:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "14268:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "14330:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "14336:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "14340:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "14349:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "14307:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "14307:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13920:229:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14164:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14234:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "14221:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14221:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14257:0:2"
									},
									"scope": 1293,
									"src": "14155:207:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14887:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14907:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14920:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14898:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14898:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "14370:441:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14826:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14835:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14855:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14872:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14864:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14834:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14887:0:2"
									},
									"scope": 1293,
									"src": "14817:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "15221:584:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "15289:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "15302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15310:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15310:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15310:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15302:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15289:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "15285:471:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "15322:434:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15345:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "15337:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15337:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "15367:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "15353:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15353:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15337:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15506:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15522:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15514:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15514:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15514:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15506:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15528:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15537:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15528:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15506:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15545:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15563:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15570:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15546:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15546:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15506:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15502:144:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15577:69:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15625:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15603:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15603:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15596:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15666:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15662:83:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15677:68:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15710:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15717:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15721:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15701:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15701:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15696:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15768:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15784:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15768:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15795:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15768:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15768:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14947:174:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15136:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15153:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15145:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15145:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15165:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15157:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15182:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15174:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15193:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "15188:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15188:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15144:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:2"
									},
									"scope": 1293,
									"src": "15127:678:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "16117:225:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "16132:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16152:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16144:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16144:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16144:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16132:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "16128:93:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "16156:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "16200:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "16178:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16178:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "16171:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "16231:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "16250:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16231:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "16257:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16231:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "16269:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16231:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "16231:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "16308:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "16315:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "16325:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "16293:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16293:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "16288:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15813:205:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16033:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16060:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16052:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16075:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16067:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16090:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16085:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16117:0:2"
									},
									"scope": 1293,
									"src": "16024:318:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16657:175:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16676:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16668:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16668:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16693:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16684:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16684:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16668:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16716:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16725:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16725:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16725:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16716:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16712:90:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16737:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16782:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16759:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16759:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16752:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16819:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16812:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "16350:229:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16594:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16616:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16608:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16607:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16648:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16647:9:2"
									},
									"scope": 1293,
									"src": "16585:247:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17484:697:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17499:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17502:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17507:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17499:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17516:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17499:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17495:679:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17519:655:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17634:166:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17657:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17667:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17683:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17667:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17700:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17667:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17657:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17653:132:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17710:75:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17762:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17740:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17740:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17733:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17626:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17619:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17619:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17618:15:2"
																	},
																	"src": "17610:190:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17829:334:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17852:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17859:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17852:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17869:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17852:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17953:195:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "18041:88:2",
																								"nodeType": "YulBlock",
																								"src": "18041:88:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18079:2:2",
																															"nodeType": "YulLiteral",
																															"src": "18079:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "18083:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "18083:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18075:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "18075:3:2"
																													},
																													"nativeSrc": "18075:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "18075:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "18098:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "18098:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "18092:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "18092:5:2"
																													},
																													"nativeSrc": "18092:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "18092:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "18068:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "18068:6:2"
																											},
																											"nativeSrc": "18068:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "18068:38:2"
																										},
																										"nativeSrc": "18068:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "18068:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18083:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18098:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "18032:97:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17848:300:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17872:75:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17924:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17902:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17902:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17895:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17821:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17808:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17808:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17807:21:2"
																	},
																	"src": "17801:362:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "17575:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17575:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17595:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17604:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17554:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17538:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17538:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17558:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17538:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17538:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17534:629:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16840:536:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17391:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17414:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17436:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17428:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17448:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17440:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17470:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17457:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17457:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17413:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17484:0:2"
									},
									"scope": 1293,
									"src": "17382:799:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "794:17390:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "110:18076:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 1778,
							"src": "139:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "147:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"297:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "297:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "205:69:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								1777
							],
							"name": "IERC721",
							"nameLocation": "286:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "312:90:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "414:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "423:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "445:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "465:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:67:3"
									},
									"src": "408:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "498:96:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "606:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "631:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "615:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "654:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "638:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "664:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:74:3"
									},
									"src": "600:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "697:119:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "828:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "859:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "843:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "882:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "866:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "897:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "892:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:64:3"
									},
									"src": "822:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "915:78:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1026:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1018:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1064:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1056:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:17:3"
									},
									"scope": 1410,
									"src": "999:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1081:137:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1233:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1249:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1241:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1289:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1281:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:3"
									},
									"scope": 1410,
									"src": "1224:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1304:578:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1897:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1928:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1948:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1940:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1972:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1957:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1957:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:3"
									},
									"scope": 1410,
									"src": "1888:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1995:720:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2730:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2755:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2747:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2761:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2781:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2773:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:0:3"
									},
									"scope": 1410,
									"src": "2721:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2807:747:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3569:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3582:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3596:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3608:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:3"
									},
									"scope": 1410,
									"src": "3560:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3642:464:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4121:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4137:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4129:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4141:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:0:3"
									},
									"scope": 1410,
									"src": "4112:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4175:324:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4514:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4540:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4532:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4555:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4550:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4573:0:3"
									},
									"scope": 1410,
									"src": "4505:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4582:145:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4742:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4802:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4794:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:18:3"
									},
									"scope": 1410,
									"src": "4733:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4820:142:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4977:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5017:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5009:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5050:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:6:3"
									},
									"scope": 1410,
									"src": "4968:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "276:4783:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "111:4950:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "338:509:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "862:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "897:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "889:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "924:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "916:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "947:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "939:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "980:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "965:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "965:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:113:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "1010:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1010:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:8:4"
									},
									"scope": 1428,
									"src": "853:165:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "305:716:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1411,
							"src": "158:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "166:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1434,
										"name": "IERC721",
										"nameLocations": [
											"368:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "368:7:5"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "201:136:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1410,
								1777
							],
							"name": "IERC721Metadata",
							"nameLocation": "349:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "458:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:5"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "488:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:5"
									},
									"scope": 1456,
									"src": "449:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "511:62:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "588:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "620:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:5"
									},
									"scope": 1456,
									"src": "579:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "643:92:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "750:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:17:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "799:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:5"
									},
									"scope": 1456,
									"src": "741:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "339:478:5",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "130:689:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "657:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "734:36:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "745:17:6"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "725:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:6"
									},
									"scope": 1486,
									"src": "672:98:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "845:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "856:15:6"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "829:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:6"
									},
									"scope": 1486,
									"src": "778:101:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "959:27:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "970:8:6"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "950:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:6"
									},
									"scope": 1486,
									"src": "887:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "639:350:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:887:6"
				},
				"id": 6
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2831
						],
						"SignedMath": [
							2936
						],
						"Strings": [
							1741
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:7"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2832,
							"src": "132:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2831,
										"src": "140:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2937,
							"src": "171:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2936,
										"src": "179:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1493,
								"nodeType": "StructuredDocumentation",
								"src": "224:36:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741
							],
							"name": "Strings",
							"nameLocation": "270:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1496,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "310:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "285:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1494,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1499,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "371:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "348:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1497,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "348:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "399:83:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1506,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "494:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "531:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "523:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "546:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "538:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:31:7"
									},
									"src": "488:66:7"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "731:647:7",
										"statements": [
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "742:629:7",
												"statements": [
													{
														"assignments": [
															1515
														],
														"declarations": [
															{
																"constant": false,
																"id": 1515,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "775:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "767:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1522,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1518,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "795:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1516,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2831,
																		"src": "784:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2651,
																	"src": "784:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "784:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "804:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "784:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "767:38:7"
													},
													{
														"assignments": [
															1524
														],
														"declarations": [
															{
																"constant": false,
																"id": 1524,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "834:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "820:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1523,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "854:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "843:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "847:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "843:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "820:41:7"
													},
													{
														"assignments": [
															1531
														],
														"declarations": [
															{
																"constant": false,
																"id": 1531,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "884:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "876:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "876:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"nodeType": "VariableDeclarationStatement",
														"src": "876:11:7"
													},
													{
														"AST": {
															"nativeSrc": "959:69:7",
															"nodeType": "YulBlock",
															"src": "959:69:7",
															"statements": [
																{
																	"nativeSrc": "978:35:7",
																	"nodeType": "YulAssignment",
																	"src": "978:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "989:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1001:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1001:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1005:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "997:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:7"
																				},
																				"nativeSrc": "997:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "997:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:7"
																		},
																		"nativeSrc": "985:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "985:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "989:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1515,
																"isOffset": false,
																"isSlot": false,
																"src": "1005:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1531,
																"isOffset": false,
																"isSlot": false,
																"src": "978:3:7",
																"valueSize": 1
															}
														],
														"id": 1533,
														"nodeType": "InlineAssembly",
														"src": "950:78:7"
													},
													{
														"body": {
															"id": 1548,
															"nodeType": "Block",
															"src": "1055:277:7",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1074:5:7",
																		"subExpression": {
																			"id": 1535,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "1074:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "1074:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1159:88:7",
																		"nodeType": "YulBlock",
																		"src": "1159:88:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1190:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1204:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1204:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1211:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1211:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1200:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1200:3:7"
																									},
																									"nativeSrc": "1200:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1200:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1216:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1195:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1195:4:7"
																							},
																							"nativeSrc": "1195:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1195:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1182:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1182:7:7"
																					},
																					"nativeSrc": "1182:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1182:46:7"
																				},
																				"nativeSrc": "1182:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1182:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1496,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1216:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1531,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1190:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1509,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1204:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1538,
																	"nodeType": "InlineAssembly",
																	"src": "1150:97:7"
																},
																{
																	"expression": {
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1265:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1265:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1542,
																	"nodeType": "ExpressionStatement",
																	"src": "1265:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1299:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1308:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1299:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1547,
																	"nodeType": "IfStatement",
																	"src": "1295:21:7",
																	"trueBody": {
																		"id": 1546,
																		"nodeType": "Break",
																		"src": "1311:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1549,
														"nodeType": "WhileStatement",
														"src": "1042:290:7"
													},
													{
														"expression": {
															"id": 1550,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "1353:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1513,
														"id": 1551,
														"nodeType": "Return",
														"src": "1346:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "562:92:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "669:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "686:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "678:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:15:7"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "716:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:7"
									},
									"scope": 1741,
									"src": "660:718:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1559:94:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "1591:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1599:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1591:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1609:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1591:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1637:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1572,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "1622:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2936_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2935,
																		"src": "1622:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1571,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1613:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1577:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1562,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1577:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1584:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1577:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1561,
												"id": 1578,
												"nodeType": "Return",
												"src": "1570:75:7"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "1386:91:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1492:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1507:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1556,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:14:7"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1544:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:15:7"
									},
									"scope": 1741,
									"src": "1483:170:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "1837:104:7",
										"statements": [
											{
												"id": 1598,
												"nodeType": "UncheckedBlock",
												"src": "1848:86:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1892:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1592,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "1911:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1590,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2831,
																				"src": "1899:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1904:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "1899:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1899:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1588,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1600,
																	1683,
																	1703
																],
																"referencedDeclaration": 1683,
																"src": "1880:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1880:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1587,
														"id": 1597,
														"nodeType": "Return",
														"src": "1873:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1661:96:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1772:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1792:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1784:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:15:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1822:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:7"
									},
									"scope": 1741,
									"src": "1763:178:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "2159:448:7",
										"statements": [
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2178:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2170:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"id": 1612,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1603,
													"src": "2191:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:26:7"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2220:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2207:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1614,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2207:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2239:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1619,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "2243:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2239:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2239:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2229:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2233:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:47:7"
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1627,
														"indexExpression": {
															"hexValue": "30",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2265:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2277:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2265:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "2265:15:7"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1631,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2291:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1633,
														"indexExpression": {
															"hexValue": "31",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2291:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2291:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2291:15:7"
											},
											{
												"body": {
													"id": 1665,
													"nodeType": "Block",
													"src": "2362:98:7",
													"statements": [
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1651,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "2377:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1653,
																	"indexExpression": {
																		"id": 1652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "2384:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2377:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1654,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "2389:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1658,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1655,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "2400:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2400:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2389:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2377:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "2377:40:7"
														},
														{
															"expression": {
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "2432:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2447:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2432:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "2432:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "2350:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2354:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"initializationExpression": {
													"assignments": [
														1638
													],
													"declarations": [
														{
															"constant": false,
															"id": 1638,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2330:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1666,
															"src": "2322:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1637,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2322:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1640,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "2338:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2334:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2322:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2357:3:7",
														"subExpression": {
															"id": 1648,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "2359:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1650,
													"nodeType": "ExpressionStatement",
													"src": "2357:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2317:143:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "2474:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2474:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "2470:98:7",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "2491:77:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1671,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "2542:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1672,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "2549:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1670,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "2513:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2513:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1674,
															"nodeType": "RevertStatement",
															"src": "2506:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2592:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2585:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1677,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2585:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1681,
												"nodeType": "Return",
												"src": "2578:21:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "1949:114:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2078:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2098:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2090:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2113:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2105:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:31:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2144:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:7"
									},
									"scope": 1741,
									"src": "2069:538:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "2845:77:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "2891:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1694,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "2899:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1691,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1600,
															1683,
															1703
														],
														"referencedDeclaration": 1683,
														"src": "2863:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1701,
												"nodeType": "Return",
												"src": "2856:58:7"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "2615:151:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2781:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2801:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2793:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:14:7"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2830:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2830:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:15:7"
									},
									"scope": 1741,
									"src": "2772:150:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "3082:106:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1715,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3106:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1713,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3100:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "3125:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3119:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3119:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3119:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3119:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3100:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1727,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1706,
																			"src": "3154:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1725,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1724,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3138:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1733,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "3177:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3171:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1731,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3171:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3171:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1730,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3161:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3161:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3138:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3100:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1738,
												"nodeType": "Return",
												"src": "3093:87:7"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "2930:68:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3013:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3033:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3019:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3050:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3036:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3036:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:34:7"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3076:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:7"
									},
									"scope": 1741,
									"src": "3004:184:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1742,
							"src": "262:2929:7",
							"usedErrors": [
								1506
							],
							"usedEvents": []
						}
					],
					"src": "104:3089:7"
				},
				"id": 7
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1765
						],
						"IERC165": [
							1777
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:8"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1766,
							"sourceUnit": 1778,
							"src": "145:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1744,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "153:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1747,
										"name": "IERC165",
										"nameLocations": [
											"706:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "706:7:8"
									},
									"id": 1748,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "187:489:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1765,
							"linearizedBaseContracts": [
								1765,
								1777
							],
							"name": "ERC165",
							"nameLocation": "696:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1776
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "867:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "885:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "905:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1757,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "900:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "900:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1777",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "914:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "900:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "885:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1762,
												"nodeType": "Return",
												"src": "878:47:8"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "812:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1765,
									"src": "785:148:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1766,
							"src": "678:258:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:821:8"
				},
				"id": 8
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						]
					},
					"id": 1778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1768,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777
							],
							"name": "IERC165",
							"nameLocation": "445:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "840:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1770,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:9"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "883:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:9"
									},
									"scope": 1777,
									"src": "813:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1778,
							"src": "435:457:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:776:9"
				},
				"id": 9
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2831
						]
					},
					"id": 2832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1780,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2831,
							"linearizedBaseContracts": [
								2831
							],
							"name": "Math",
							"nameLocation": "219:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1783,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:10"
									},
									"src": "289:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1788,
									"members": [
										{
											"id": 1784,
											"name": "Floor",
											"nameLocation": "351:5:10",
											"nodeType": "EnumValue",
											"src": "351:5:10"
										},
										{
											"id": 1785,
											"name": "Ceil",
											"nameLocation": "395:4:10",
											"nodeType": "EnumValue",
											"src": "395:4:10"
										},
										{
											"id": 1786,
											"name": "Trunc",
											"nameLocation": "438:5:10",
											"nodeType": "EnumValue",
											"src": "438:5:10"
										},
										{
											"id": 1787,
											"name": "Expand",
											"nameLocation": "469:6:10",
											"nodeType": "EnumValue",
											"src": "469:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:10",
									"nodeType": "EnumDefinition",
									"src": "326:174:10"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "685:146:10",
										"statements": [
											{
												"id": 1818,
												"nodeType": "UncheckedBlock",
												"src": "696:128:10",
												"statements": [
													{
														"assignments": [
															1801
														],
														"declarations": [
															{
																"constant": false,
																"id": 1801,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1818,
																"src": "721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1805,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "757:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "761:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1813,
														"nodeType": "IfStatement",
														"src": "753:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "772:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "779:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1799,
															"id": 1812,
															"nodeType": "Return",
															"src": "764:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1815,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "810:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1799,
														"id": 1817,
														"nodeType": "Return",
														"src": "796:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "508:95:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "618:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "625:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "636:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "670:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:15:10"
									},
									"scope": 2831,
									"src": "609:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "1019:118:10",
										"statements": [
											{
												"id": 1846,
												"nodeType": "UncheckedBlock",
												"src": "1030:100:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1059:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1833,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "1063:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1059:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1839,
														"nodeType": "IfStatement",
														"src": "1055:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1074:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1073:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1831,
															"id": 1838,
															"nodeType": "Return",
															"src": "1066:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1106:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "1112:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1842,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1116:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1112:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1844,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1105:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1831,
														"id": 1845,
														"nodeType": "Return",
														"src": "1098:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "839:98:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "952:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "967:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "959:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "978:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "970:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:22:10"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1004:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1010:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:15:10"
									},
									"scope": 2831,
									"src": "943:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1328:427:10",
										"statements": [
											{
												"id": 1888,
												"nodeType": "UncheckedBlock",
												"src": "1339:409:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1867,
														"nodeType": "IfStatement",
														"src": "1597:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1616:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1866,
															"nodeType": "Return",
															"src": "1609:16:10"
														}
													},
													{
														"assignments": [
															1869
														],
														"declarations": [
															{
																"constant": false,
																"id": 1869,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1648:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1888,
																"src": "1640:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1640:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1873,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1652:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1656:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1640:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1874,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1676:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1875,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1680:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1685:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1676:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1883,
														"nodeType": "IfStatement",
														"src": "1672:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1882,
															"nodeType": "Return",
															"src": "1688:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1885,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1734:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1727:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1859,
														"id": 1887,
														"nodeType": "Return",
														"src": "1720:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1145:101:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1261:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1276:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1268:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1287:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1279:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:22:10"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1313:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1319:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:10"
									},
									"scope": 2831,
									"src": "1252:503:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "1947:119:10",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "1958:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "1987:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1987:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "1983:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2003:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2002:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1908,
															"nodeType": "Return",
															"src": "1995:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1911,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "2041:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "2045:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2041:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1901,
														"id": 1915,
														"nodeType": "Return",
														"src": "2027:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1763:102:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1880:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1895:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1887:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1906:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1898:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:10"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1932:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1938:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:15:10"
									},
									"scope": 2831,
									"src": "1871:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "2268:119:10",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "2279:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "2308:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2308:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "2304:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2323:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "2316:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "2362:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "2366:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2362:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2355:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "2348:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "2074:112:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2201:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2216:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2208:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2227:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2219:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:22:10"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2253:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2253:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2259:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:15:10"
									},
									"scope": 2831,
									"src": "2192:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2529:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1956,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "2547:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1957,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "2551:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2547:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1960,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "2559:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2547:13:10",
													"trueExpression": {
														"id": 1959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "2555:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1962,
												"nodeType": "Return",
												"src": "2540:20:10"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "2395:61:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2471:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2483:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2475:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2494:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2486:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:22:10"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2520:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:9:10"
									},
									"scope": 2831,
									"src": "2462:106:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "2711:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "2729:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1975,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "2733:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2741:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2729:13:10",
													"trueExpression": {
														"id": 1977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "2737:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1973,
												"id": 1980,
												"nodeType": "Return",
												"src": "2722:20:10"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "2576:62:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2653:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:22:10"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2702:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:9:10"
									},
									"scope": 2831,
									"src": "2644:106:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2940:85:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2997:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1993,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "3001:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2997:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1995,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2996:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1996,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "3007:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1997,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "3011:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3007:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1999,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3006:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3006:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2996:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2003,
												"nodeType": "Return",
												"src": "2989:28:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "2758:105:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2878:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2894:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2886:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2905:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2897:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:22:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2931:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:9:10"
									},
									"scope": 2831,
									"src": "2869:156:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "3325:268:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2015,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "3340:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"nodeType": "IfStatement",
												"src": "3336:130:10",
												"trueBody": {
													"id": 2022,
													"nodeType": "Block",
													"src": "3348:118:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2018,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "3449:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2019,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "3453:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2014,
															"id": 2021,
															"nodeType": "Return",
															"src": "3442:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2024,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3557:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3557:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2028,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "3571:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3575:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3570:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "3580:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3570:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3570:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3557:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2037,
												"nodeType": "Return",
												"src": "3550:35:10"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "3033:215:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3263:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3279:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3271:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3290:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3282:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:22:10"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3316:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:10"
									},
									"scope": 2831,
									"src": "3254:339:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "4023:4097:10",
										"statements": [
											{
												"id": 2163,
												"nodeType": "UncheckedBlock",
												"src": "4034:4079:10",
												"statements": [
													{
														"assignments": [
															2052
														],
														"declarations": [
															{
																"constant": false,
																"id": 2052,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4367:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4359:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2051,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4359:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "4375:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2054,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "4379:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4375:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4359:21:10"
													},
													{
														"assignments": [
															2058
														],
														"declarations": [
															{
																"constant": false,
																"id": 2058,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4448:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4440:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2057,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4440:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2059,
														"nodeType": "VariableDeclarationStatement",
														"src": "4440:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4521:125:10",
															"nodeType": "YulBlock",
															"src": "4521:125:10",
															"statements": [
																{
																	"nativeSrc": "4540:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4557:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4557:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4560:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4560:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4567:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4567:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4563:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:10"
																				},
																				"nativeSrc": "4563:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4550:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4550:6:10"
																		},
																		"nativeSrc": "4550:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4544:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4544:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4588:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4588:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4605:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4605:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4609:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4609:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4601:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:10"
																				},
																				"nativeSrc": "4601:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4601:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4620:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4620:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4624:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4624:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4617:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4617:2:10"
																				},
																				"nativeSrc": "4617:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4617:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4597:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:10"
																		},
																		"nativeSrc": "4597:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4588:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4588:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4609:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4624:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "4588:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "4557:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4560:1:10",
																"valueSize": 1
															}
														],
														"id": 2060,
														"nodeType": "InlineAssembly",
														"src": "4512:134:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "4730:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4739:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4730:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "4726:373:10",
														"trueBody": {
															"id": 2068,
															"nodeType": "Block",
															"src": "4742:357:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2064,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2052,
																			"src": "5064:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2065,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "5072:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5064:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2050,
																	"id": 2067,
																	"nodeType": "Return",
																	"src": "5057:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "5208:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2071,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "5223:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5208:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2077,
														"nodeType": "IfStatement",
														"src": "5204:90:10",
														"trueBody": {
															"id": 2076,
															"nodeType": "Block",
															"src": "5230:64:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2073,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "5256:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5256:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2075,
																	"nodeType": "RevertStatement",
																	"src": "5249:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5564:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "5556:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5556:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"nodeType": "VariableDeclarationStatement",
														"src": "5556:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5597:298:10",
															"nodeType": "YulBlock",
															"src": "5597:298:10",
															"statements": [
																{
																	"nativeSrc": "5668:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5668:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5688:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5688:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5691:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5691:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5694:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5694:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5681:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5681:6:10"
																		},
																		"nativeSrc": "5681:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5668:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5668:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5791:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5791:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5804:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5804:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5814:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5825:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5825:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5811:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5811:2:10"
																				},
																				"nativeSrc": "5811:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5800:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:10"
																		},
																		"nativeSrc": "5800:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5791:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5791:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5850:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5850:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5863:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5859:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:10"
																		},
																		"nativeSrc": "5859:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5850:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5850:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5825:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5850:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5863:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5791:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5804:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5668:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5814:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5870:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "5688:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:1:10",
																"valueSize": 1
															}
														],
														"id": 2081,
														"nodeType": "InlineAssembly",
														"src": "5588:307:10"
													},
													{
														"assignments": [
															2083
														],
														"declarations": [
															{
																"constant": false,
																"id": 2083,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6112:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "6104:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6104:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "6119:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6134:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2086,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "6138:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6134:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6133:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6119:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6104:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6174:371:10",
															"nodeType": "YulBlock",
															"src": "6174:371:10",
															"statements": [
																{
																	"nativeSrc": "6241:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6241:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6260:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6260:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6273:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6273:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6256:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:10"
																		},
																		"nativeSrc": "6256:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6241:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6241:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6348:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6348:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6361:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6368:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:10"
																		},
																		"nativeSrc": "6357:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6357:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6348:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6348:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6491:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6491:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6511:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6514:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6514:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6507:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6507:3:10"
																						},
																						"nativeSrc": "6507:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6507:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6521:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6521:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6503:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6503:3:10"
																				},
																				"nativeSrc": "6503:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:10"
																		},
																		"nativeSrc": "6499:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6491:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6491:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6241:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6260:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6348:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6361:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6368:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6491:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6514:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6521:4:10",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "6165:380:10"
													},
													{
														"expression": {
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2092,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "6614:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "6623:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2094,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "6631:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6614:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "6614:21:10"
													},
													{
														"assignments": [
															2099
														],
														"declarations": [
															{
																"constant": false,
																"id": 2099,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6966:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "6958:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6958:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6977:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2101,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "6981:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6977:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6976:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6996:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6976:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6958:39:10"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7218:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7229:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7233:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2110,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7247:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7233:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "7218:36:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7288:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7299:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7303:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7317:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7303:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7288:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7288:36:10"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7359:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7370:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7374:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7388:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7374:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7370:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7359:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "7359:36:10"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7430:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7441:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7445:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7459:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7445:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7441:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7430:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "7430:36:10"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7501:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7512:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7516:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7530:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7516:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7512:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7501:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "7501:36:10"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7573:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7588:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7602:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7588:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7573:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "7573:36:10"
													},
													{
														"expression": {
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "8049:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "8058:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2157,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8066:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8058:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8049:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2160,
														"nodeType": "ExpressionStatement",
														"src": "8049:24:10"
													},
													{
														"expression": {
															"id": 2161,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "8095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2050,
														"id": 2162,
														"nodeType": "Return",
														"src": "8088:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "3601:318:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3934:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3949:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3941:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3952:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3963:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:43:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4015:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "4007:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:16:10"
									},
									"scope": 2831,
									"src": "3925:4195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "8367:198:10",
										"statements": [
											{
												"assignments": [
													2181
												],
												"declarations": [
													{
														"constant": false,
														"id": 2181,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2207,
														"src": "8378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"arguments": [
														{
															"id": 2183,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "8402:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2184,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "8405:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2185,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8408:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2182,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2165,
															2208
														],
														"referencedDeclaration": 2165,
														"src": "8395:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2189,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "8452:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2188,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "8435:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2192,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "8472:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2193,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "8475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2194,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "8478:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2191,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8465:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8465:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8435:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "8431:103:10",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "8496:38:10",
													"statements": [
														{
															"expression": {
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2199,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "8511:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8521:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8511:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"nodeType": "ExpressionStatement",
															"src": "8511:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2205,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2181,
													"src": "8551:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2206,
												"nodeType": "Return",
												"src": "8544:13:10"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "8128:123:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8266:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8281:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8273:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8292:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8284:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8303:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8295:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8325:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8316:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2173,
														"name": "Rounding",
														"nameLocations": [
															"8316:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "8316:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "8316:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8272:62:10"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8358:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:9:10"
									},
									"scope": 2831,
									"src": "8257:308:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "8864:1616:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "8879:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8884:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8879:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2222,
												"nodeType": "IfStatement",
												"src": "8875:47:10",
												"trueBody": {
													"id": 2221,
													"nodeType": "Block",
													"src": "8887:35:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8909:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2215,
															"id": 2220,
															"nodeType": "Return",
															"src": "8902:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2224
												],
												"declarations": [
													{
														"constant": false,
														"id": 2224,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9621:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2319,
														"src": "9613:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9613:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9630:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2227,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "9641:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2226,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2487,
																			2522
																		],
																		"referencedDeclaration": 2487,
																		"src": "9636:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9636:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9647:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9636:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9635:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9613:36:10"
											},
											{
												"id": 2318,
												"nodeType": "UncheckedBlock",
												"src": "10056:417:10",
												"statements": [
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10081:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2235,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10091:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2236,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10100:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2237,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10104:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10100:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10091:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2240,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10115:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10090:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10081:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "10081:35:10"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10131:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2246,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10141:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2247,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10150:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2248,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10154:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10150:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10141:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10140:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10140:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10131:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "10131:35:10"
													},
													{
														"expression": {
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2256,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10181:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2257,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10191:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2258,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10200:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2259,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10204:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10200:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10191:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2262,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10190:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10190:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10181:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2266,
														"nodeType": "ExpressionStatement",
														"src": "10181:35:10"
													},
													{
														"expression": {
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10231:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2268,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10241:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2269,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10250:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2270,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10254:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10250:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10241:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2273,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10240:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10240:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2277,
														"nodeType": "ExpressionStatement",
														"src": "10231:35:10"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2278,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10281:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2279,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10291:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2280,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10300:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2281,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10304:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10300:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10291:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2284,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10290:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10290:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10281:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "10281:35:10"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10331:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2290,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10341:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2291,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10350:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2292,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10354:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10350:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10341:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2295,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10340:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10340:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10331:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "10331:35:10"
													},
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10381:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2301,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10391:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2302,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10400:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2303,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10404:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10400:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10391:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10390:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10415:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10390:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "10381:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2312,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "10442:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2313,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "10450:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2314,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "10454:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10450:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2311,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "10438:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2215,
														"id": 2317,
														"nodeType": "Return",
														"src": "10431:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "8573:228:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8816:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8829:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8821:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:11:10"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8855:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:10"
									},
									"scope": 2831,
									"src": "8807:1673:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "10661:169:10",
										"statements": [
											{
												"id": 2353,
												"nodeType": "UncheckedBlock",
												"src": "10672:151:10",
												"statements": [
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10705:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2353,
																"src": "10697:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10697:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2336,
														"initialValue": {
															"arguments": [
																{
																	"id": 2334,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "10719:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2333,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2320,
																	2355
																],
																"referencedDeclaration": 2320,
																"src": "10714:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10714:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10697:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2337,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "10743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2339,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2326,
																						"src": "10770:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2338,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "10753:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10753:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2341,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10783:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2342,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10792:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10783:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2344,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "10801:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10783:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10753:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10809:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10753:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10805:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10752:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10743:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2330,
														"id": 2352,
														"nodeType": "Return",
														"src": "10736:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "10488:91:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10594:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10607:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10599:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10619:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10610:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2324,
														"name": "Rounding",
														"nameLocations": [
															"10610:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "10610:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "10610:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:30:10"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:9:10"
									},
									"scope": 2831,
									"src": "10585:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "11027:958:10",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11046:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2486,
														"src": "11038:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11038:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"hexValue": "30",
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11055:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:18:10"
											},
											{
												"id": 2483,
												"nodeType": "UncheckedBlock",
												"src": "11067:887:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11096:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11105:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11096:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11111:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11096:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "11092:102:10",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "11114:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11133:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11143:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11133:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "11133:13:10"
																},
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11165:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11175:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11165:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "11165:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11212:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11221:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11212:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11226:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11212:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2396,
														"nodeType": "IfStatement",
														"src": "11208:99:10",
														"trueBody": {
															"id": 2395,
															"nodeType": "Block",
															"src": "11229:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11248:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11258:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11248:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "11248:12:10"
																},
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11279:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11289:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11279:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "11279:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2397,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11325:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11334:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11325:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11325:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "11321:99:10",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "11342:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11361:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11361:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:12:10"
																},
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11392:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11402:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11392:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "11392:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2412,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11438:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11447:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11438:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11452:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11438:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2426,
														"nodeType": "IfStatement",
														"src": "11434:99:10",
														"trueBody": {
															"id": 2425,
															"nodeType": "Block",
															"src": "11455:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11474:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11484:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11474:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2420,
																	"nodeType": "ExpressionStatement",
																	"src": "11474:12:10"
																},
																{
																	"expression": {
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2421,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11505:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11515:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11505:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2424,
																	"nodeType": "ExpressionStatement",
																	"src": "11505:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11551:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11560:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11551:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11564:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11551:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2441,
														"nodeType": "IfStatement",
														"src": "11547:96:10",
														"trueBody": {
															"id": 2440,
															"nodeType": "Block",
															"src": "11567:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11586:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11596:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11586:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2435,
																	"nodeType": "ExpressionStatement",
																	"src": "11586:11:10"
																},
																{
																	"expression": {
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11616:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11616:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2439,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2442,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11661:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11670:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11661:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11674:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11661:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2456,
														"nodeType": "IfStatement",
														"src": "11657:96:10",
														"trueBody": {
															"id": 2455,
															"nodeType": "Block",
															"src": "11677:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11696:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11706:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11696:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "11696:11:10"
																},
																{
																	"expression": {
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2451,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11726:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11736:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11726:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2454,
																	"nodeType": "ExpressionStatement",
																	"src": "11726:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2457,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11771:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11784:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11771:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2471,
														"nodeType": "IfStatement",
														"src": "11767:96:10",
														"trueBody": {
															"id": 2470,
															"nodeType": "Block",
															"src": "11787:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11806:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11816:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11806:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "11806:11:10"
																},
																{
																	"expression": {
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11836:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11836:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2469,
																	"nodeType": "ExpressionStatement",
																	"src": "11836:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11881:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11890:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11881:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11894:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11881:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2482,
														"nodeType": "IfStatement",
														"src": "11877:66:10",
														"trueBody": {
															"id": 2481,
															"nodeType": "Block",
															"src": "11897:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11916:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11926:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11916:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2480,
																	"nodeType": "ExpressionStatement",
																	"src": "11916:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2484,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "11971:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2485,
												"nodeType": "Return",
												"src": "11964:13:10"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "10838:122:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10975:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10988:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "10980:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:15:10"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "11018:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:9:10"
									},
									"scope": 2831,
									"src": "10966:1019:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "12224:173:10",
										"statements": [
											{
												"id": 2520,
												"nodeType": "UncheckedBlock",
												"src": "12235:155:10",
												"statements": [
													{
														"assignments": [
															2499
														],
														"declarations": [
															{
																"constant": false,
																"id": 2499,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12268:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2520,
																"src": "12260:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2498,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12260:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2503,
														"initialValue": {
															"arguments": [
																{
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "12282:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2500,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2487,
																	2522
																],
																"referencedDeclaration": 2487,
																"src": "12277:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12277:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12260:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2504,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "12310:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2506,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2493,
																						"src": "12337:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2505,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "12320:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12320:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12350:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2509,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2499,
																						"src": "12355:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2511,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "12364:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12350:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12376:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12320:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12372:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12319:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12310:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2497,
														"id": 2519,
														"nodeType": "Return",
														"src": "12303:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "11993:145:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12153:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12166:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "12158:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12158:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12182:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "12173:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2491,
														"name": "Rounding",
														"nameLocations": [
															"12173:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "12173:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "12173:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12157:34:10"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "12215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:10"
									},
									"scope": 2831,
									"src": "12144:253:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "12596:886:10",
										"statements": [
											{
												"assignments": [
													2531
												],
												"declarations": [
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12615:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2650,
														"src": "12607:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12607:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2533,
												"initialValue": {
													"hexValue": "30",
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12624:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12607:18:10"
											},
											{
												"id": 2647,
												"nodeType": "UncheckedBlock",
												"src": "12636:815:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2534,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12680:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12674:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12665:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "12661:106:10",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "12684:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12703:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12712:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:10"
																},
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12739:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12749:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12739:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "12739:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12785:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12794:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12800:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12794:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12785:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "12781:106:10",
														"trueBody": {
															"id": 2566,
															"nodeType": "Block",
															"src": "12804:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12823:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12832:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12838:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12832:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12823:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "12823:17:10"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12859:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12869:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12859:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "12859:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2568,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12905:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12914:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12920:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12914:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12905:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "12901:106:10",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "12924:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12943:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12952:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12952:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12943:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "12943:17:10"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12979:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12989:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12979:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "12979:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13025:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13034:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13040:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13034:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13025:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "13021:103:10",
														"trueBody": {
															"id": 2600,
															"nodeType": "Block",
															"src": "13043:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "13062:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:10"
																},
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "13097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13142:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13151:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13157:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13151:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13142:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2618,
														"nodeType": "IfStatement",
														"src": "13138:103:10",
														"trueBody": {
															"id": 2617,
															"nodeType": "Block",
															"src": "13160:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "13179:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13188:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13188:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13179:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:16:10"
																},
																{
																	"expression": {
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13214:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13224:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13214:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2616,
																	"nodeType": "ExpressionStatement",
																	"src": "13214:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2619,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13259:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13268:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13268:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13259:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "13255:103:10",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "13277:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "13296:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13305:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13305:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13296:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "13296:16:10"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13331:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13341:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13331:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "13331:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13376:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13385:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13391:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13385:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13376:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2646,
														"nodeType": "IfStatement",
														"src": "13372:68:10",
														"trueBody": {
															"id": 2645,
															"nodeType": "Block",
															"src": "13394:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13413:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13423:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13413:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "13413:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2648,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2531,
													"src": "13468:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2529,
												"id": 2649,
												"nodeType": "Return",
												"src": "13461:13:10"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "12405:123:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12543:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12557:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12549:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:15:10"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12587:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12586:9:10"
									},
									"scope": 2831,
									"src": "12534:948:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "13723:175:10",
										"statements": [
											{
												"id": 2684,
												"nodeType": "UncheckedBlock",
												"src": "13734:157:10",
												"statements": [
													{
														"assignments": [
															2663
														],
														"declarations": [
															{
																"constant": false,
																"id": 2663,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13767:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2684,
																"src": "13759:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13759:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2667,
														"initialValue": {
															"arguments": [
																{
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "13782:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2664,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2651,
																	2686
																],
																"referencedDeclaration": 2651,
																"src": "13776:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13776:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13759:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2668,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "13810:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2670,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "13837:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2669,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "13820:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13820:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2672,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13850:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2673,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2663,
																						"src": "13856:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13850:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2675,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2654,
																					"src": "13865:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13850:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13820:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13877:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13820:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13873:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13819:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13810:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2661,
														"id": 2683,
														"nodeType": "Return",
														"src": "13803:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "13490:146:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13651:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13665:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13657:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13681:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13672:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2655,
														"name": "Rounding",
														"nameLocations": [
															"13672:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "13672:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "13672:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:34:10"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13714:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:9:10"
									},
									"scope": 2831,
									"src": "13642:256:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "14226:624:10",
										"statements": [
											{
												"assignments": [
													2695
												],
												"declarations": [
													{
														"constant": false,
														"id": 2695,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14245:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2772,
														"src": "14237:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2697,
												"initialValue": {
													"hexValue": "30",
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14254:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:18:10"
											},
											{
												"id": 2769,
												"nodeType": "UncheckedBlock",
												"src": "14266:553:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14295:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14304:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14295:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14310:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14295:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "14291:101:10",
														"trueBody": {
															"id": 2711,
															"nodeType": "Block",
															"src": "14313:79:10",
															"statements": [
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14332:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14342:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14332:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "14332:13:10"
																},
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14364:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14374:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14364:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "14364:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14410:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14419:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14410:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14410:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "14406:98:10",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "14427:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14446:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14456:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14446:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "14446:12:10"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14477:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14487:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14477:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "14477:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14522:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14522:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14536:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14522:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "14518:98:10",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "14539:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14558:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14558:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "14558:12:10"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14589:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14589:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14634:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14634:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14648:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14634:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2757,
														"nodeType": "IfStatement",
														"src": "14630:98:10",
														"trueBody": {
															"id": 2756,
															"nodeType": "Block",
															"src": "14651:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14670:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14680:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14670:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "14670:12:10"
																},
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14701:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14711:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14701:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "14701:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14746:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14755:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14746:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14759:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14746:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2768,
														"nodeType": "IfStatement",
														"src": "14742:66:10",
														"trueBody": {
															"id": 2767,
															"nodeType": "Block",
															"src": "14762:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14781:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14791:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14781:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "14781:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2770,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2695,
													"src": "14836:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2693,
												"id": 2771,
												"nodeType": "Return",
												"src": "14829:13:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "13906:251:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14172:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14187:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "14179:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:10"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "14217:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:10"
									},
									"scope": 2831,
									"src": "14163:687:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "15093:182:10",
										"statements": [
											{
												"id": 2809,
												"nodeType": "UncheckedBlock",
												"src": "15104:164:10",
												"statements": [
													{
														"assignments": [
															2785
														],
														"declarations": [
															{
																"constant": false,
																"id": 2785,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15137:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2809,
																"src": "15129:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2784,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15129:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2789,
														"initialValue": {
															"arguments": [
																{
																	"id": 2787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2776,
																	"src": "15153:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2786,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2773,
																	2811
																],
																"referencedDeclaration": 2773,
																"src": "15146:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15146:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15129:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2790,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2785,
																"src": "15181:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2792,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2779,
																						"src": "15208:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2791,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "15191:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15191:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15221:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2797,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2795,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2785,
																									"src": "15227:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2796,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15237:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15227:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2798,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15226:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15221:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2800,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "15242:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15221:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15191:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15254:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15191:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15250:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15190:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15181:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2783,
														"id": 2808,
														"nodeType": "Return",
														"src": "15174:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "14858:147:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15020:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15035:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "15027:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15051:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "15042:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2777,
														"name": "Rounding",
														"nameLocations": [
															"15042:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "15042:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "15042:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:34:10"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "15084:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:9:10"
									},
									"scope": 2831,
									"src": "15011:264:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "15478:50:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2822,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "15502:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15496:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2820,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15496:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15514:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15496:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15519:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15496:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2828,
												"nodeType": "Return",
												"src": "15489:31:10"
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "15283:115:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15413:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15439:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15430:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2813,
														"name": "Rounding",
														"nameLocations": [
															"15430:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "15430:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "15430:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:19:10"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15472:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15472:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15471:6:10"
									},
									"scope": 2831,
									"src": "15404:124:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2832,
							"src": "211:15320:10",
							"usedErrors": [
								1783
							],
							"usedEvents": []
						}
					],
					"src": "106:15427:10"
				},
				"id": 10
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2936
						]
					},
					"id": 2937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2834,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2936,
							"linearizedBaseContracts": [
								2936
							],
							"name": "SignedMath",
							"nameLocation": "232:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2851,
										"nodeType": "Block",
										"src": "388:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2844,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "406:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2845,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "410:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2848,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "418:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:11",
													"trueExpression": {
														"id": 2847,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2837,
														"src": "414:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2850,
												"nodeType": "Return",
												"src": "399:20:11"
											}
										]
									},
									"documentation": {
										"id": 2835,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "337:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2836,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "347:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "380:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2841,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:11"
									},
									"scope": 2936,
									"src": "324:103:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "574:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2862,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2855,
															"src": "592:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2863,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "596:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "604:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:11",
													"trueExpression": {
														"id": 2865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "600:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2868,
												"nodeType": "Return",
												"src": "585:20:11"
											}
										]
									},
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "523:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2854,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "533:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:11"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "566:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:11"
									},
									"scope": 2936,
									"src": "510:103:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "824:166:11",
										"statements": [
											{
												"assignments": [
													2881
												],
												"declarations": [
													{
														"constant": false,
														"id": 2881,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "888:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2880,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2894,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2882,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2883,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2875,
																	"src": "904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2886,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "911:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2887,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "915:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2895,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "941:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2900,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2881,
																						"src": "961:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2898,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2896,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2905,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "975:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2906,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "979:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2908,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2910,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2879,
												"id": 2912,
												"nodeType": "Return",
												"src": "934:48:11"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "773:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2872,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "783:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:11"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "816:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:11"
									},
									"scope": 2936,
									"src": "756:234:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "1139:163:11",
										"statements": [
											{
												"id": 2933,
												"nodeType": "UncheckedBlock",
												"src": "1150:145:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2924,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1267:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1267:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1280:2:11",
																		"subExpression": {
																			"id": 2928,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1281:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1267:15:11",
																	"trueExpression": {
																		"id": 2927,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2917,
																		"src": "1276:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1259:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1259:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1259:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2921,
														"id": 2932,
														"nodeType": "Return",
														"src": "1252:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2915,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1097:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2916,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:11"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1130:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:11"
									},
									"scope": 2936,
									"src": "1084:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2937,
							"src": "224:1081:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1195:11"
				},
				"id": 11
			},
			"src/FLX.sol": {
				"ast": {
					"absolutePath": "src/FLX.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"FLX": [
							2995
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Ownable": [
							147
						],
						"Strings": [
							1741
						]
					},
					"id": 2996,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2996,
							"sourceUnit": 1294,
							"src": "61:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2996,
							"sourceUnit": 148,
							"src": "120:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2941,
										"name": "ERC721",
										"nameLocations": [
											"192:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "192:6:12"
									},
									"id": 2942,
									"nodeType": "InheritanceSpecifier",
									"src": "192:6:12"
								},
								{
									"baseName": {
										"id": 2943,
										"name": "Ownable",
										"nameLocations": [
											"200:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "200:7:12"
									},
									"id": 2944,
									"nodeType": "InheritanceSpecifier",
									"src": "200:7:12"
								}
							],
							"canonicalName": "FLX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2995,
							"linearizedBaseContracts": [
								2995,
								147,
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "FLX",
							"nameLocation": "185:3:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2946,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "231:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2995,
									"src": "215:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2961,
										"nodeType": "Block",
										"src": "304:32:12",
										"statements": [
											{
												"expression": {
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2957,
														"name": "_tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "315:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "327:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "315:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2960,
												"nodeType": "ExpressionStatement",
												"src": "315:13:12"
											}
										]
									},
									"id": 2962,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "464c58",
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "270:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ee927669481b6495946bf739db59cd52c9c70de4c060b721457fcbe64465eba3",
														"typeString": "literal_string \"FLX\""
													},
													"value": "FLX"
												},
												{
													"hexValue": "464c58",
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "277:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ee927669481b6495946bf739db59cd52c9c70de4c060b721457fcbe64465eba3",
														"typeString": "literal_string \"FLX\""
													},
													"value": "FLX"
												}
											],
											"id": 2951,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2948,
												"name": "ERC721",
												"nameLocations": [
													"263:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "263:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "263:20:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2953,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "292:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "296:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "292:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2955,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2952,
												"name": "Ownable",
												"nameLocations": [
													"284:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "284:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "284:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:2:12"
									},
									"returnParameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:0:12"
									},
									"scope": 2995,
									"src": "249:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "405:135:12",
										"statements": [
											{
												"expression": {
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "416:11:12",
													"subExpression": {
														"id": 2971,
														"name": "_tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "416:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2973,
												"nodeType": "ExpressionStatement",
												"src": "416:11:12"
											},
											{
												"assignments": [
													2975
												],
												"declarations": [
													{
														"constant": false,
														"id": 2975,
														"mutability": "mutable",
														"name": "newTokenId",
														"nameLocation": "446:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2985,
														"src": "438:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "438:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2977,
												"initialValue": {
													"id": 2976,
													"name": "_tokenIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2946,
													"src": "459:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "438:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2979,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "489:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2980,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "493:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2978,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 915,
														"src": "479:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "479:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2982,
												"nodeType": "ExpressionStatement",
												"src": "479:25:12"
											},
											{
												"expression": {
													"id": 2983,
													"name": "newTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2975,
													"src": "522:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2984,
												"nodeType": "Return",
												"src": "515:17:12"
											}
										]
									},
									"functionSelector": "6a627842",
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2966,
												"name": "onlyOwner",
												"nameLocations": [
													"377:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "377:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "377:9:12"
										}
									],
									"name": "mint",
									"nameLocation": "353:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "358:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:12:12"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:12"
									},
									"scope": 2995,
									"src": "344:196:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2993,
										"nodeType": "Block",
										"src": "601:35:12",
										"statements": [
											{
												"expression": {
													"id": 2991,
													"name": "_tokenIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2946,
													"src": "619:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2990,
												"id": 2992,
												"nodeType": "Return",
												"src": "612:16:12"
											}
										]
									},
									"functionSelector": "8ada066e",
									"id": 2994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCounter",
									"nameLocation": "557:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:12"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "593:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:12"
									},
									"scope": 2995,
									"src": "548:88:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2996,
							"src": "176:463:12",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327
							]
						}
					],
					"src": "33:608:12"
				},
				"id": 12
			}
		}
	}
}